(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1001550,      19158]
NotebookOptionsPosition[    986129,      18786]
NotebookOutlinePosition[    986464,      18801]
CellTagsIndexPosition[    986421,      18798]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.710804308136487*^9, 3.710804308444024*^9}, {
   3.710851376716381*^9, 3.7108513846410437`*^9}, 
   3.71087924794349*^9},ExpressionUUID->"b76aac9b-2f71-4b1d-af36-\
08963738fffa"],

Cell[CellGroupData[{

Cell["NV-Centre ESR Simulation", "Title",
 CellChangeTimes->{{3.711324864628573*^9, 
  3.711324868203494*^9}},ExpressionUUID->"17c79617-3f48-40ff-b1ce-\
b7c110d0d8fb"],

Cell[TextData[{
 "Construct a Hamiltonian of the form:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["H", "^"], " ", "=", " "}], TraditionalForm]],
  ExpressionUUID->"c2e7a3d7-c364-4e5a-963c-e9766a9b9747"]
}], "Text",
 CellChangeTimes->{{3.711324872603446*^9, 3.711324902829576*^9}, {
  3.7113250806549*^9, 
  3.711325096754764*^9}},ExpressionUUID->"5b33cbac-42c9-42c1-b6d5-\
8dacdde316ab"],

Cell["\<\
Features to add:
- Enable truncated spin matrices
- Visualisation for the angular momentum conserving transitions
- Visualisation of the energies of the NV-center subsystem states
- Add Plot to RunSimulation function arguments
- Make RunSimulation add to a given list, instead of returning a list
- Make the freqStep dependent on the gradient of the curve. Instead of \
freqStep you could specify, number of datapoints per unit length on graph curve
- Function that returns a Rabi oscillation at a certain frequency
- Dephasing\
\>", "Text",
 CellChangeTimes->{{3.7116820573570337`*^9, 3.711682072188808*^9}, {
  3.711683093108923*^9, 3.711683103658929*^9}, {3.711683144309466*^9, 
  3.711683170259389*^9}, {3.711778812571423*^9, 3.711778837559811*^9}, {
  3.711836269780079*^9, 3.7118362784052277`*^9}, {3.711848936531128*^9, 
  3.711848945412836*^9}, {3.7118489961128273`*^9, 3.7118490036381197`*^9}, {
  3.711933104980201*^9, 3.71193311710546*^9}, {3.711937319724221*^9, 
  3.711937323718265*^9}, {3.711940271690941*^9, 
  3.711940273615394*^9}},ExpressionUUID->"c47df991-3406-4ed7-be54-\
7e2d9a90805b"],

Cell[CellGroupData[{

Cell["Initialisation", "Chapter",
 CellChangeTimes->{{3.711246464665057*^9, 
  3.711246469190033*^9}},ExpressionUUID->"19fded08-3617-4157-ba0a-\
09242c9a372f"],

Cell[CellGroupData[{

Cell["Standard spin operators", "Section",
 CellChangeTimes->{{3.712021127135766*^9, 
  3.712021132585478*^9}},ExpressionUUID->"03a00423-7567-4341-ac89-\
79e225406a20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Spin", " ", "operators"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Sx", " ", "=", " ", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"Sqrt", "[", "2", "]"}]], 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"{", "  ", 
         RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], " ", ",", " ", 
        RowBox[{"{", " ", 
         RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1", ",", " ", "0"}], " ", "}"}]}], " ", 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sy", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           SqrtBox["2"]]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["\[ImaginaryI]", 
          SqrtBox["2"]], ",", "0", ",", 
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           SqrtBox["2"]]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         FractionBox["\[ImaginaryI]", 
          SqrtBox["2"]], ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sz", " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], " ", "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eye", " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Electron", " ", "triplet", " ", "operators"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eSx", " ", "=", " ", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"Sx", ",", " ", "eye"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"eSy", " ", "=", " ", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"Sy", ",", " ", "eye"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"eSz", " ", "=", " ", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"Sz", ",", " ", "eye"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Nuclear", " ", "operators"}], " ", "*)"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ix", " ", "=", " ", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"eye", ",", " ", "Sx"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Iy", " ", "=", " ", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"eye", ",", " ", "Sy"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Iz", " ", "=", " ", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"eye", ",", " ", "Sz"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Total", " ", "angular", " ", "momentum"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jx", " ", "=", " ", 
     RowBox[{"eSx", " ", "+", " ", "Ix"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jy", " ", "=", " ", 
     RowBox[{"eSy", " ", "+", " ", "Iy"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jz", " ", "=", " ", 
     RowBox[{"eSz", " ", "+", " ", "Iz"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.712021133861915*^9, 
  3.712021217686453*^9}},ExpressionUUID->"47bb4d1e-0ecf-4ad7-bd33-\
9a76af46da00"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.7112464080395737`*^9, 
  3.711246409089758*^9}},ExpressionUUID->"33751f26-5118-427d-bd1d-\
36bd71e4f594"],

Cell[CellGroupData[{

Cell["GetFirstSubsystem[density, subSystemSize]", "Subsubsection",
 CellChangeTimes->{{3.711247465344591*^9, 3.711247479721534*^9}, 
   3.7126278840052032`*^9},ExpressionUUID->"25d73bb2-3e52-43fc-8a4b-\
6fc858a85465"],

Cell[TextData[{
 "For a density matrix \[Rho] in the space ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["A", "1"], " ", "\[TensorProduct]", " ", 
       SubscriptBox["A", "2"], " ", "\[TensorProduct]"}], " ", "..."}], " ", 
     "\[TensorProduct]", " ", 
     SubscriptBox["A", "n"]}]}], TraditionalForm]],ExpressionUUID->
  "df348552-1ea0-4614-8d9c-425b6528e2fc"],
 ", the function will return the reduced density matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", 
    SubscriptBox["A", "1"]], TraditionalForm]],ExpressionUUID->
  "0078e50e-edcb-4bc0-abb2-cbdaebf14d44"],
 ".\n\n",
 StyleBox["Parameters:\n",
  FontWeight->"Bold"],
 "- ",
 StyleBox["density",
  FontSlant->"Italic"],
 " [Matrix] - The density matrix is an ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-by",
 StyleBox["-n",
  FontSlant->"Italic"],
 " matrix, where ",
 StyleBox["n = dim(V)",
  FontSlant->"Italic"],
 ".\n- ",
 StyleBox["subSystemSize",
  FontSlant->"Italic"],
 " [Integer] - The dimension of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "1"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c1129359-f4b6-4dc9-917e-7f4fc9e92ac7"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"dim", "(", 
    SubscriptBox["A", "1"], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "887f3203-9837-41e1-93e5-05875a3760f6"],
 "."
}], "Text",
 CellChangeTimes->{
  3.711246383915731*^9, {3.711246853118487*^9, 3.711246868241654*^9}, {
   3.711247459044855*^9, 3.711247481744979*^9}, {3.712627907310627*^9, 
   3.7126280923350067`*^9}, {3.712628266560755*^9, 
   3.712628294285863*^9}},ExpressionUUID->"795b5723-e2c3-4a8c-98c1-\
503eb98ddfe7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetFirstSubsystem", "[", 
    RowBox[{"density_", ",", "subSystemSize_"}], "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{"Tr", ",", 
     RowBox[{"Partition", "[", 
      RowBox[{"density", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "density", "]"}], "/", "subSystemSize"}], 
         ",", 
         RowBox[{
          RowBox[{"Length", "[", "density", "]"}], "/", "subSystemSize"}]}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7112469202170153`*^9, 3.711246928944817*^9}, {
  3.712627864583475*^9, 
  3.71262788401501*^9}},ExpressionUUID->"b5c109b2-5be6-484e-8569-\
b378fc3bbcd2"]
}, Closed]],

Cell[CellGroupData[{

Cell["FullHilbertSpaceOperator[operators, hilbertSubspaces]", "Subsubsection",
 CellChangeTimes->{{3.7112503033085012`*^9, 3.711250312058639*^9}, {
  3.711252027944312*^9, 3.711252036042594*^9}, {3.711328578416769*^9, 
  3.711328588873211*^9}},ExpressionUUID->"86b46845-37ea-42fb-b575-\
376c9dc7b175"],

Cell[TextData[{
 "Returns the matrix representation of an operator ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox[
       OverscriptBox["O", "^"], "1"], "\[TensorProduct]", 
      SubscriptBox[
       OverscriptBox["O", "^"], "2"], "\[TensorProduct]"}], "..."}], 
    "\[TensorProduct]", 
    SubscriptBox[
     OverscriptBox["O", "^"], "n"]}], TraditionalForm]],ExpressionUUID->
  "b6f6a807-3f06-4c72-b295-19bf6ff65d05"],
 ".\n\n",
 StyleBox["Parameters:\n",
  FontWeight->"Bold"],
 "- ",
 StyleBox["operators ",
  FontSlant->"Italic"],
 "[List{ j [Integer] \[RightArrow] op [Matrix], ...}] - A list of pairs. The \
second element of each pair is the matrix representation of the operator ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["O", "^"], "j"], TraditionalForm]],ExpressionUUID->
  "c4e90ec2-cded-494c-8c04-adc92242b304"],
 ", and the first element is the index ",
 StyleBox["j",
  FontSlant->"Italic"],
 ". Any unspecified operators for the subspaces will be replaced by an \
identity matrix of the appropriate size.\n- ",
 StyleBox["hilbertSubspaces",
  FontSlant->"Italic"],
 " [List{Integer}] - A list of the dimensions of the subspaces ",
 StyleBox["j = 1, 2, ..., n",
  FontSlant->"Italic"],
 ".\n\n",
 StyleBox["Example:",
  FontWeight->"Bold"],
 "\n\nConsider a system of two spin-1 particles, inhabiting Hilbert spaces ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "1"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6ed2b9ae-5abf-4776-8efa-3eae6261f3c1"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "59d507e2-cb1e-40d7-93e3-0b0a2b61693e"],
 " respectively, each of dimension 3. The total space is then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", "1"], "\[TensorProduct]", " ", 
    SubscriptBox["V", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "fe2d1e90-4384-4973-b150-051c9162bb98"],
 ". The following code will create the operator ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox["S", "^"], "z"], "\[TensorProduct]", " ", 
    SubscriptBox[
     OverscriptBox["S", "^"], "z"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "116d4cdc-0a0c-48be-ae37-9c3a4f23063b"],
 ".\n\n",
 StyleBox["hilbertSubspaces = {3, 3};\nSz = SpinMatrixZ[1];\nSzSz = \
FullHilbertSpaceOperator[ {1 \[RightArrow] Sz, 2 \[RightArrow] Sz }, \
hilbertSubspaces];", "Code",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "\n\nThe variable ",
 StyleBox["operators",
  FontSlant->"Italic"],
 " should contain a list of pairs, where the second element is the operator \
acting on subsystem ",
 StyleBox["i",
  FontSlant->"Italic"],
 ", and where the first element is ",
 StyleBox["i",
  FontSlant->"Italic"],
 ". ",
 StyleBox["hilbertSubspaces",
  FontSlant->"Italic"],
 " is a list of the dimensions of the subspaces. Any unspecified operators \
for the subspaces will be replaced by an identity matrix of the appropriate \
size."
}], "Text",
 CellChangeTimes->{{3.7112503133353853`*^9, 3.711250314641279*^9}, {
   3.71125218036804*^9, 3.711252454670231*^9}, {3.711252582470558*^9, 
   3.7112527291967*^9}, {3.711255628136774*^9, 3.71125564903785*^9}, 
   3.712628099460168*^9, {3.712628258785913*^9, 3.712628263235902*^9}, {
   3.712628298611031*^9, 3.712628494312463*^9}, {3.712628889914263*^9, 
   3.712629315967065*^9}, {3.7126293530178423`*^9, 
   3.712629397018076*^9}},ExpressionUUID->"e561a6a7-bf75-4857-90dc-\
9764ea1cfb32"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FullHilbertSpaceOperator", "[", 
     RowBox[{
      RowBox[{"elem_", " ", "/;", " ", 
       RowBox[{"IntegerQ", "[", 
        RowBox[{"elem", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", 
      "hilbertSubspaces_"}], "]"}], " ", ":=", " ", 
    RowBox[{"FullHilbertSpaceOperator", "[", 
     RowBox[{
      RowBox[{"{", "elem", "}"}], ",", " ", "hilbertSubspaces"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FullHilbertSpaceOperator", "[", 
    RowBox[{
     RowBox[{"ops_:", 
      RowBox[{"{", " ", 
       RowBox[{"elem_", " ", "/;", " ", 
        RowBox[{
         RowBox[{"IntegerQ", "[", 
          RowBox[{"elem", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", ".."}]}], "}"}]}], " ",
      ",", " ", "hilbertSubspaces_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"operator", " ", "=", " ", 
        RowBox[{"{", "1", "}"}]}], ",", " ", "next"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"next", " ", "=", " ", 
          RowBox[{"Select", "[", " ", 
           RowBox[{"ops", ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "i"}], 
             " ", "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"next", " ", "=", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"next", " ", "\[Equal]", " ", 
             RowBox[{"{", "}"}]}], ",", " ", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"hilbertSubspaces", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", " ", 
            RowBox[{
             RowBox[{"next", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"operator", " ", "=", " ", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"operator", ",", " ", "next"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", 
          RowBox[{"Length", "[", "hilbertSubspaces", "]"}]}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "operator"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.711250315912553*^9, 3.711250399109428*^9}, {
   3.7112506194604483`*^9, 3.71125063371056*^9}, {3.711250669986174*^9, 
   3.711250696135941*^9}, {3.711251204563671*^9, 3.7112512904639606`*^9}, {
   3.71125132728902*^9, 3.711251328414373*^9}, {3.711251415440144*^9, 
   3.711251561315838*^9}, {3.7112516086418953`*^9, 3.7112517283167267`*^9}, {
   3.711251767967095*^9, 3.711251768991972*^9}, {3.711251838542386*^9, 
   3.7112518768423843`*^9}, {3.711259529908712*^9, 3.7112595384435577`*^9}, {
   3.711327766337919*^9, 3.711327803463174*^9}, {3.711328395341578*^9, 
   3.711328463041832*^9}, {3.711328508292014*^9, 3.711328509567018*^9}, {
   3.711328588832336*^9, 3.711328588834688*^9}, {3.7113286462429113`*^9, 
   3.7113286761181087`*^9}, {3.711328727069264*^9, 3.711328743120091*^9}, {
   3.711328849019457*^9, 3.711328851595138*^9}, {3.7113289992452917`*^9, 
   3.711329034945003*^9}, 3.711329241771822*^9, {3.7113293786723223`*^9, 
   3.711329390771956*^9}, {3.711329431797962*^9, 3.7113294513724003`*^9}, {
   3.711329638024338*^9, 3.7113296878750753`*^9}, {3.711329728949736*^9, 
   3.7113297762502213`*^9}, {3.711329929750545*^9, 3.711329931450839*^9}, {
   3.711329974801046*^9, 3.711330025450795*^9}, {3.71262905856531*^9, 
   3.712629064390245*^9}},ExpressionUUID->"53b5ee72-e247-401c-9e1a-\
e29efe32326b"]
}, Closed]],

Cell[CellGroupData[{

Cell["SpinMatrixX[spin]", "Subsubsection",
 CellChangeTimes->{
  3.7112475193966713`*^9},ExpressionUUID->"5301936c-f3f8-4ffd-8c79-\
df6132f5e5d9"],

Cell[TextData[{
 "Returns the spin matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["S", "^"], "X"], TraditionalForm]],ExpressionUUID->
  "12bea390-eb8a-40e0-bb5a-58203e2983bd"],
 ", for a given spin.\n\n",
 StyleBox["Parameters:",
  FontWeight->"Bold"],
 "\n- ",
 StyleBox["spin ",
  FontSlant->"Italic"],
 "[Rational] - The spin of the particle. The dimension of the matrix will be ",
 StyleBox["2*spin + 1",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.712629423241373*^9, 3.712629430241432*^9}, {
   3.712629460566617*^9, 3.712629574142521*^9}, {3.712629701068508*^9, 
   3.712629705343404*^9}, 
   3.7126308229233513`*^9},ExpressionUUID->"0242b0f6-8dff-4986-8b40-\
d26b5109c756"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpinMatrixX", "[", "spin_", "]"}], " ", ":=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{RowBox[{"i", ",", 
           RowBox[{"j", "+", "1"}]}]},
        "KroneckerDeltaSeq"], "  ", "+", " ", 
       TemplateBox[{RowBox[{
           RowBox[{"i", "+", "1"}], ",", "j"}]},
        "KroneckerDeltaSeq"]}], ")"}], 
     FractionBox["1", "2"], 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"spin", 
        RowBox[{"(", 
         RowBox[{"spin", "+", "1"}], ")"}]}], " ", "-", " ", 
       RowBox[{"i", "*", "j"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "spin", ",", " ", 
      RowBox[{"-", "spin"}], ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "spin", ",", " ", 
      RowBox[{"-", "spin"}], ",", " ", 
      RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.711246936267289*^9, 3.711247065043171*^9}, {
  3.711247121493473*^9, 3.711247173083146*^9}, {3.7112473287946863`*^9, 
  3.711247357069614*^9}, {3.711247390896294*^9, 3.711247417420208*^9}, {
  3.7112476747215*^9, 3.7112476829226503`*^9}, {3.711247722896837*^9, 
  3.711247725396614*^9}, {3.7112477718220263`*^9, 
  3.711247774146935*^9}},ExpressionUUID->"2aa3f6da-a264-4636-bf70-\
2bded82583b3"]
}, Closed]],

Cell[CellGroupData[{

Cell["SpinMatrixY[spin]", "Subsubsection",
 CellChangeTimes->{{3.7112475193966713`*^9, 
  3.711247544069911*^9}},ExpressionUUID->"303ecb3b-13b4-4715-b6d7-\
3d0096134513"],

Cell[TextData[{
 "Returns the spin matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["S", "^"], "Y"], TraditionalForm]],ExpressionUUID->
  "245a012c-5aa1-453f-82e9-63c0ede77c4b"],
 ", for a given spin.\n\n",
 StyleBox["Parameters:",
  FontWeight->"Bold"],
 "\n- ",
 StyleBox["spin ",
  FontSlant->"Italic"],
 "[Rational] - The spin of the particle. The dimension of the matrix will be ",
 StyleBox["2*spin + 1",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.712629423241373*^9, 3.712629430241432*^9}, {
   3.712629460566617*^9, 3.712629585267696*^9}, {3.712629710644938*^9, 
   3.7126297134933023`*^9}, 
   3.712630819498496*^9},ExpressionUUID->"dc61ca03-40f2-4d19-b5b7-\
a38d12cecdfe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpinMatrixY", "[", "spin_", "]"}], " ", ":=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{RowBox[{"i", ",", 
           RowBox[{"j", "+", "1"}]}]},
        "KroneckerDeltaSeq"], "  ", "-", " ", 
       TemplateBox[{RowBox[{
           RowBox[{"i", "+", "1"}], ",", "j"}]},
        "KroneckerDeltaSeq"]}], ")"}], 
     FractionBox["1", 
      RowBox[{"2", " ", "I"}]], 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"spin", 
        RowBox[{"(", 
         RowBox[{"spin", "+", "1"}], ")"}]}], " ", "-", " ", 
       RowBox[{"i", "*", "j"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "spin", ",", " ", 
      RowBox[{"-", "spin"}], ",", " ", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "spin", ",", " ", 
      RowBox[{"-", "spin"}], ",", " ", 
      RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.711246936267289*^9, 3.711247065043171*^9}, {
  3.711247121493473*^9, 3.711247173083146*^9}, {3.7112473287946863`*^9, 
  3.711247357069614*^9}, {3.711247390896294*^9, 3.711247417420208*^9}, {
  3.711247548495491*^9, 3.711247557970296*^9}, {3.711247670671645*^9, 
  3.711247684822441*^9}, {3.711247720196795*^9, 
  3.711247726421524*^9}},ExpressionUUID->"60f1c3dd-35b3-4876-a4c1-\
85d756e1f64c"]
}, Closed]],

Cell[CellGroupData[{

Cell["SpinMatrixZ[spin]", "Subsubsection",
 CellChangeTimes->{3.7112475193966713`*^9, 
  3.711247587219841*^9},ExpressionUUID->"91fa8865-d8cd-4e67-823b-\
c5a42f667ca6"],

Cell[TextData[{
 "Returns the spin matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["S", "^"], "Z"], TraditionalForm]],ExpressionUUID->
  "e84d9bf3-8b8a-49c8-8799-c04f82a0ef9a"],
 ", for a given spin.\n\n",
 StyleBox["Parameters:",
  FontWeight->"Bold"],
 "\n- ",
 StyleBox["spin ",
  FontSlant->"Italic"],
 "[Rational] - The spin of the particle. The dimension of the matrix will be ",
 StyleBox["2*spin + 1",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.712629423241373*^9, 3.712629430241432*^9}, {
   3.712629460566617*^9, 3.712629591342548*^9}, {3.7126297172186937`*^9, 
   3.712629719493639*^9}, 
   3.7126308156983747`*^9},ExpressionUUID->"772a183f-716d-44e4-9012-\
9ae552f0a40e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpinMatrixZ", "[", "spin_", "]"}], " ", ":=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     TemplateBox[{RowBox[{"i", ",", "j"}]},
      "KroneckerDeltaSeq"], "  ", "j"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "spin", ",", " ", 
      RowBox[{"-", "spin"}], ",", " ", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "spin", ",", " ", 
      RowBox[{"-", "spin"}], ",", " ", 
      RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.711246936267289*^9, 3.711247065043171*^9}, {
  3.711247121493473*^9, 3.711247173083146*^9}, {3.7112473287946863`*^9, 
  3.711247357069614*^9}, {3.711247390896294*^9, 3.711247417420208*^9}, {
  3.71124756779639*^9, 3.711247585046797*^9}, {3.711247688347076*^9, 
  3.7112477193224077`*^9}},ExpressionUUID->"4d0acfdb-ca1e-49ca-97bb-\
aef0d2402606"]
}, Closed]],

Cell[CellGroupData[{

Cell["SpinMatrix[j, spin]", "Subsubsection",
 CellChangeTimes->{{3.711320785667447*^9, 
  3.711320799061265*^9}},ExpressionUUID->"6be122a3-c5c7-40f9-9b25-\
b437d78d96c3"],

Cell[TextData[{
 "Returns the spin matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["S", "^"], "j"], TraditionalForm]],ExpressionUUID->
  "1daf7a0f-2044-4e23-bfdf-2c9b3fc9e1c3"],
 ", for a given spin.\n\n",
 StyleBox["Parameters:",
  FontWeight->"Bold"],
 "\n- ",
 StyleBox["j",
  FontSlant->"Italic"],
 " [Integer] - The axis of the projection.\n- ",
 StyleBox["spin ",
  FontSlant->"Italic"],
 "[Rational] - The spin of the particle. The dimension of the matrix will be ",
 StyleBox["2*spin + 1",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.71132080603605*^9, 3.7113208281863337`*^9}, {
  3.7126296040679007`*^9, 3.7126296901431513`*^9}, {3.712630806798152*^9, 
  3.712630809272797*^9}},ExpressionUUID->"c245072e-35a8-49f6-8415-\
ca0f429521fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpinMatrix", "[", 
    RowBox[{
     RowBox[{"j_", "/;", " ", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", " ", "3"}], "]"}], " ", "\[Equal]", 
       " ", "0"}]}], ",", " ", "spin_"}], "]"}], " ", ":=", " ", 
   RowBox[{"SpinMatrixX", "[", "spin", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SpinMatrix", "[", 
    RowBox[{
     RowBox[{"j_", "/;", " ", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", " ", "3"}], "]"}], " ", "\[Equal]", 
       " ", "1"}]}], ",", " ", "spin_"}], "]"}], " ", ":=", " ", 
   RowBox[{"SpinMatrixY", "[", "spin", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SpinMatrix", "[", 
    RowBox[{
     RowBox[{"j_", "/;", " ", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", " ", "3"}], "]"}], " ", "\[Equal]", 
       " ", "2"}]}], ",", " ", "spin_"}], "]"}], " ", ":=", " ", 
   RowBox[{"SpinMatrixZ", "[", "spin", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.711320832962266*^9, 3.7113208384865913`*^9}, {
  3.711320959212143*^9, 3.711321077062944*^9}, {3.711321144888558*^9, 
  3.711321162488318*^9}, {3.711321362365596*^9, 3.7113213637397127`*^9}, {
  3.71132140138966*^9, 3.711321432415269*^9}, {3.7126296217428513`*^9, 
  3.7126296304680557`*^9}},ExpressionUUID->"7ba645e2-6ead-4320-96b8-\
09d7c1efe5cf"]
}, Closed]],

Cell[CellGroupData[{

Cell["SpinSpinHamiltonian[spins, couplings]", "Subsubsection",
 CellChangeTimes->{{3.711252791396171*^9, 3.711252821371649*^9}, {
  3.711326818006925*^9, 
  3.711326819256988*^9}},ExpressionUUID->"34dee551-86ae-4a59-8ceb-\
e32097ee74ba"],

Cell[TextData[{
 "Returns a Hamiltonian of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sum]", "ij"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["k", 
        RowBox[{"ij", ",", "x"}]], " ", 
       SubscriptBox[
        OverscriptBox["S", "^"], 
        RowBox[{"i", ",", "x"}]], 
       SubscriptBox[
        OverscriptBox["S", "^"], 
        RowBox[{"j", ",", "x"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["k", 
        RowBox[{"ij", ",", "y"}]], " ", 
       SubscriptBox[
        OverscriptBox["S", "^"], 
        RowBox[{"i", ",", "y"}]], 
       SubscriptBox[
        OverscriptBox["S", "^"], 
        RowBox[{"j", ",", "y"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["k", 
        RowBox[{"ij", ",", "z"}]], " ", 
       SubscriptBox[
        OverscriptBox["S", "^"], 
        RowBox[{"i", ",", "z"}]], 
       SubscriptBox[
        OverscriptBox["S", "^"], 
        RowBox[{"j", ",", "z"}]]}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"87b5385c-44c4-45c0-83e3-6cda258086dd"],
 ", representing ",
 StyleBox["n",
  FontSlant->"Italic"],
 " interacting spins.\n\n",
 StyleBox["Parameters:",
  FontWeight->"Bold"],
 "\n\n",
 StyleBox["spins",
  FontSlant->"Italic"],
 " [List{Rational}] - An ordered list of spins {",
 StyleBox["spin1, spin2, ...}",
  FontSlant->"Italic"],
 " in the system.\n",
 StyleBox["couplings",
  FontSlant->"Italic"],
 " [List{ { i [Integer] \[RightArrow] j [Integer], coupling [Float or \
3-vector] }, ... }] - List of elements of the form {",
 StyleBox["subsystemIndexOfSpin1 \[RightArrow] subsystemIndexOfSpin2, \
coupling}",
  FontSlant->"Italic"],
 ". ",
 StyleBox["coupling",
  FontSlant->"Italic"],
 " could either be a single Floating point constant, for an isotropic \
spin-spin coupling, or a 3-vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["A", "x"], ",", " ", 
     SubscriptBox["A", "y"], ",", " ", 
     SubscriptBox["A", "z"]}], "}"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6c6f5671-419d-4a14-805e-1abc09719c2a"],
 " for an anisotropic coupling.\n\n",
 StyleBox["Example:\n\n",
  FontWeight->"Bold"],
 "We have three interacting spin-1/2 particles labelled ",
 StyleBox["i = 1, 2, 3",
  FontSlant->"Italic"],
 ". The interactions 1 \[LeftRightArrow] 2 and 1 \[LeftRightArrow] 3 are \
isotropic, but 2 \[LeftRightArrow] 3 is anisotropic. Particle 1 has a \
zero-field-splitting D. The following code creates the Hamiltonian of the \
system.\n\n",
 StyleBox["\[ScriptCapitalH]spinSpin =  SpinSpinHamiltonian[\n   spins,\n   \
{{1 \[Rule] 1, {0, 0, D}},\n    {1 \[Rule] 2, k12},\n    {1 \[Rule] 3, k13},\n\
    {2 \[Rule] 3, {k23x, k23y, k23z}}}\n] ;",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.7112543972717047`*^9, 3.711254397272438*^9}, {
  3.711257907597528*^9, 3.711258054923711*^9}, {3.711324649452592*^9, 
  3.711324705602903*^9}, {3.7113268289319143`*^9, 3.711326881882724*^9}, {
  3.711326932482757*^9, 3.711326954282831*^9}, {3.712629735118206*^9, 
  3.7126299832199306`*^9}, {3.712630034419772*^9, 3.7126302427206497`*^9}, {
  3.712630291071128*^9, 3.712630414971149*^9}, {3.7126304736291428`*^9, 
  3.712630503897263*^9}, {3.712630538974139*^9, 3.7126306529723597`*^9}, {
  3.71263079764931*^9, 3.712630798248601*^9}, {3.712630938700457*^9, 
  3.7126309588245773`*^9}},ExpressionUUID->"bfc14f1d-fd16-4a23-bd9e-\
54ed6d012191"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SpinSpinHamiltonian", "[", 
    RowBox[{"spins_", ",", " ", 
     RowBox[{"couplings_", " ", ":", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"_", " ", "\[Rule]", " ", "_"}], ",", "  ", "_"}], "}"}], 
        " ", ".."}], "}"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "H", ",", " ", "spin1", ",", " ", "spin2", ",", " ", "sx", ",", " ", 
       "sy", ",", "sz", ",", " ", "i", ",", " ", "j", ",", " ", "coeffs"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"H", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Times", " ", "@@", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "spins"}], " ", "+", " ", "1"}], ")"}]}], ",", 
           RowBox[{"Times", " ", "@@", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "spins"}], " ", "+", " ", "1"}], ")"}]}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"i", " ", "=", " ", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
         
         RowBox[{"j", " ", "=", " ", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
         
         RowBox[{"coeffs", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Which", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"NumberQ", "[", 
            RowBox[{"c", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"coeffs", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
              RowBox[{"c", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
              RowBox[{"c", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"c", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "\[Equal]", " ", 
            "3"}], ",", "\[IndentingNewLine]", 
           RowBox[{"coeffs", " ", "=", " ", 
            RowBox[{"c", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"H", " ", "=", " ", 
          RowBox[{"H", " ", "+", " ", 
           RowBox[{"Sum", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"coeffs", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{
               "FullHilbertSpaceOperator", "[", " ", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"i", "\[Rule]", "  ", 
                  RowBox[{"SpinMatrix", "[", 
                   RowBox[{"k", ",", " ", 
                    RowBox[{"spins", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"2", "*", "spins"}], "+", "1"}]}], 
                "\[IndentingNewLine]", "]"}], " ", ".", 
               RowBox[{
               "FullHilbertSpaceOperator", "[", " ", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"j", " ", "\[Rule]", "  ", 
                  RowBox[{"SpinMatrix", "[", 
                   RowBox[{"k", ",", " ", 
                    RowBox[{"spins", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"2", "*", "spins"}], "+", "1"}]}], 
                "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", ",", 
             
             RowBox[{"{", 
              RowBox[{"k", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]}]}],
          ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", " ", "couplings"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "H"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7112528379966288`*^9, 3.711252865897253*^9}, {
   3.711255096308413*^9, 3.711255096422159*^9}, {3.711255247759308*^9, 
   3.711255248959257*^9}, {3.711255664712302*^9, 3.7112556683864183`*^9}, {
   3.7112558932374887`*^9, 3.711255905312488*^9}, {3.7112559443377037`*^9, 
   3.711255956462689*^9}, {3.7112561022385473`*^9, 3.711256103663726*^9}, {
   3.711256170138886*^9, 3.7112561899393873`*^9}, {3.7112563593151283`*^9, 
   3.711256369990102*^9}, {3.711256469515583*^9, 3.711256480040628*^9}, {
   3.711256877467579*^9, 3.711256896767901*^9}, {3.7112571714192057`*^9, 
   3.711257185344116*^9}, {3.711257233769413*^9, 3.7112573451202993`*^9}, {
   3.711257441770548*^9, 3.711257449071035*^9}, {3.7112575222713213`*^9, 
   3.711257606996942*^9}, {3.711257693672153*^9, 3.711257760747469*^9}, {
   3.711257801447493*^9, 3.711257872223435*^9}, {3.7112581677251987`*^9, 
   3.711258177400238*^9}, {3.71125821432508*^9, 3.711258236275371*^9}, {
   3.711258266300281*^9, 3.7112582796004877`*^9}, {3.71125831767566*^9, 
   3.711258323503042*^9}, {3.711258393101132*^9, 3.711258403776866*^9}, {
   3.711258564252182*^9, 3.711258570452733*^9}, {3.71132148294127*^9, 
   3.711321503966343*^9}, {3.711321570341626*^9, 3.711321616916581*^9}, {
   3.711321805317834*^9, 3.711321859044196*^9}, {3.711321960419685*^9, 
   3.711321960493887*^9}, {3.711321992069292*^9, 3.711322040869083*^9}, 
   3.7113222399709883`*^9, {3.711322298421002*^9, 3.711322327346368*^9}, {
   3.711322781199491*^9, 3.7113227837986107`*^9}, 3.711323085649478*^9, {
   3.711323147224002*^9, 3.711323150424623*^9}, {3.7113244005528316`*^9, 
   3.71132440762891*^9}, {3.711326959809239*^9, 3.711326968909059*^9}, {
   3.7113271079600487`*^9, 3.711327189035269*^9}, {3.711328588845521*^9, 
   3.7113285888474703`*^9}, {3.711330103401993*^9, 3.7113301333517923`*^9}, {
   3.7113311988601313`*^9, 3.7113311989826937`*^9}, {3.71133125785811*^9, 
   3.711331331708444*^9}, {3.711331729811345*^9, 3.711331735013721*^9}, {
   3.711332177338957*^9, 3.711332206389728*^9}, {3.712630109895211*^9, 
   3.7126301191703*^9}},ExpressionUUID->"a4fb092a-e91b-4a5f-a13b-\
cf3e93cc8a59"]
}, Closed]],

Cell[CellGroupData[{

Cell["ZeemanHamiltonian[spins, \[Omega]s]", "Subsubsection",
 CellChangeTimes->{{3.7113275765610456`*^9, 3.711327593586032*^9}, {
  3.711327667361598*^9, 
  3.7113276814866657`*^9}},ExpressionUUID->"280f5d62-9654-43c9-b642-\
57158dcb82dd"],

Cell[TextData[{
 "Returns a Zeeman Hamiltonian for the specified spins, of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sum]", "i"], 
    RowBox[{
     SubscriptBox["\[Omega]", "i"], 
     SubscriptBox[
      OverscriptBox["S", "^"], 
      RowBox[{"i", ",", "z"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "625d64a1-2141-40c6-9e3a-d9481a858e83"],
 ".\n\n",
 StyleBox["Parameters:",
  FontWeight->"Bold"],
 "\n\n- ",
 StyleBox["spins ",
  FontSlant->"Italic"],
 "[List{Rational}] - An ordered list of spins ",
 StyleBox["{spin1, spin2, ...}",
  FontSlant->"Italic"],
 " for each particle.\n- ",
 StyleBox["\[Omega]s",
  FontSlant->"Italic"],
 " [List{Float}] - An ordered list of Zeeman constants corresponding to each \
spin."
}], "Text",
 CellChangeTimes->{{3.7113276096862183`*^9, 3.711327609861225*^9}, {
  3.711327867412642*^9, 3.711327879987932*^9}, {3.712630696547023*^9, 
  3.7126307850476*^9}, {3.712630832947857*^9, 
  3.7126309198984327`*^9}},ExpressionUUID->"32702ccc-a7fc-433f-8ebf-\
e8df3520487c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ZeemanHamiltonian", "[", 
   RowBox[{"spins_", ",", " ", "\[Omega]s_"}], "]"}], " ", ":=", 
  RowBox[{"Sum", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Omega]s", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "*", 
     RowBox[{"FullHilbertSpaceOperator", "[", 
      RowBox[{
       RowBox[{"i", " ", "\[Rule]", "  ", 
        RowBox[{"SpinMatrixZ", "[", 
         RowBox[{"spins", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"2", "spins"}], "+", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
    ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "spins", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.711327610962199*^9, 3.711327622961396*^9}, {
   3.711327686336863*^9, 3.711327752762477*^9}, {3.7113278200135403`*^9, 
   3.711327862638773*^9}, {3.711328009489965*^9, 3.7113280146895723`*^9}, {
   3.711328365716524*^9, 3.711328369941804*^9}, 3.711328588857829*^9, {
   3.711330088576027*^9, 
   3.7113300955254393`*^9}},ExpressionUUID->"992a0664-9c52-4c7e-b22e-\
7eb117441424"]
}, Closed]],

Cell[CellGroupData[{

Cell["NVCenterEnergySpectrum[\[ScriptCapitalH], spins] ", "Subsubsection",
 CellChangeTimes->{{3.7113260883845882`*^9, 3.711326111809495*^9}, {
   3.711332555470126*^9, 3.711332568164446*^9}, 3.711334848327389*^9, {
   3.7113350005280647`*^9, 3.71133500187857*^9}, {3.711339053376975*^9, 
   3.711339055102112*^9}, {3.7113401482578506`*^9, 3.7113401564579973`*^9}, 
   3.711682369107785*^9},ExpressionUUID->"1b8b7d2e-2be2-4995-a67c-\
22798fcb400e"],

Cell["s", "Text",
 CellChangeTimes->{
  3.711330477902047*^9},ExpressionUUID->"a71c1a2f-e2f1-4e8b-8b36-\
9bead87b72ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NVCenterEnergySpectrum", "[", 
    RowBox[{"\[ScriptCapitalH]_", ",", " ", "spins_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"basis", ",", " ", 
       RowBox[{"mult", " ", "=", " ", 
        RowBox[{
         RowBox[{"2", "spins"}], " ", "+", " ", "1"}]}], ",", " ", "eig", ",",
        " ", "energies", ",", " ", "states", ",", "vecDecomps", " ", ",", " ",
        "vecsIndices", ",", " ", "vecs", ",", " ", "strs", ",", 
       "\[IndentingNewLine]", "coeff", ",", " ", "label", ",", "Jz", ",", " ",
        "angMoms", ",", " ", "table", ",", " ", "data"}], " ", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"basis", "[", "indices_", "]"}], ":=", " ", 
       RowBox[{
        RowBox[{"Apply", "[", 
         RowBox[{"KroneckerProduct", ",", " ", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RotateRight", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"mult", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], "]"}], ",",
               " ", 
              RowBox[{
               RowBox[{"indices", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "  ", "-", " ", "1"}]}], 
             "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "1", ",", " ", 
              RowBox[{"Length", "[", "spins", "]"}]}], "}"}]}], "]"}]}], 
         "]"}], " ", "//", " ", "Flatten"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"eig", " ", "=", " ", 
       RowBox[{"Eigensystem", "[", "\[ScriptCapitalH]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"energies", " ", "=", " ", 
       RowBox[{"eig", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"states", " ", "=", " ", 
       RowBox[{"eig", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"vecDecomps", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"vecsIndices", " ", "=", " ", 
          RowBox[{"Tuples", "[", 
           RowBox[{"Map", "[", 
            RowBox[{"Range", ",", " ", "mult"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"vecs", " ", "=", " ", 
          RowBox[{"Map", "[", " ", 
           RowBox[{"basis", ",", " ", "vecsIndices"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"strs", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"coeff", " ", "=", " ", 
             RowBox[{
              RowBox[{"Conjugate", "[", 
               RowBox[{"vecs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], " ", ".", " ", 
              RowBox[{"states", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"label", " ", "=", " ", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"\"\<|\>\"", "<>", 
                RowBox[{"StringRiffle", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"spins", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"vecsIndices", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}], " ", "+", " ", "1"}], 
                    ")"}], "//", "Rationalize"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", " ", "1", ",", " ", 
                    RowBox[{"Length", "[", "spins", "]"}]}], "}"}]}], "]"}], 
                  ",", "\"\<,\>\""}], "]"}], "<>", 
                "\"\<\[RightAngleBracket]\>\""}], ",", " ", "Bold"}], "]"}]}],
             ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{"coeff", " ", "\[NotEqual]", " ", "0"}], ",", " ", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"strs", ",", 
                RowBox[{"coeff", " ", "*", " ", "label"}]}], "]"}]}], "]"}], 
            ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", 
             RowBox[{"Length", "[", "vecsIndices", "]"}]}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vecDecomps", ",", " ", "strs"}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", "1", ",", " ", 
          RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Jz", " ", "=", " ", 
       RowBox[{
        RowBox[{"FullHilbertSpaceOperator", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", " ", "\[Rule]", " ", 
            RowBox[{"SpinMatrixZ", "[", 
             RowBox[{"spins", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], "}"}], "  ", ",", 
          " ", "mult"}], "]"}], " ", "+", "\[IndentingNewLine]", 
        RowBox[{"FullHilbertSpaceOperator", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", " ", "\[Rule]", " ", 
            RowBox[{"SpinMatrixZ", "[", 
             RowBox[{"spins", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "]"}]}], "}"}], "  ", ",", 
          "mult"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"angMoms", " ", "=", " ", 
       RowBox[{"Map", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", " ", ".", " ", "Jz", " ", ".", " ", "#"}], " ", "&"}], 
         ",", " ", "states"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
        "energies", ",", "\[IndentingNewLine]", "vecDecomps", ",", 
         "\[IndentingNewLine]", "states", ",", "\[IndentingNewLine]", 
         "angMoms"}], "\[IndentingNewLine]", "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "data", "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", "&"}]}], "]"}], " ", "//",
         " ", "Transpose"}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"table", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<---\>\""}], 
              "]"}], ",", " ", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<E\>\"", ",", " ", "Bold"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Prepend", "[", " ", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", " ", "\"\<---\>\""}], 
              "]"}], ",", " ", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<|\!\(\*SubscriptBox[\(\[Psi]\), \(E\)]\)\
\[RightAngleBracket]\>\"", ",", " ", "Bold"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", " ", "\"\<---\>\""}], 
              "]"}], ",", "  ", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(J\), \(z\)]\)\
\[RightAngleBracket]\>\"", ",", " ", "Bold"}], "]"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], " ", "//", " ", "Transpose"}], " ", "//",
         "MatrixForm"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"data", ",", " ", "table"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.71133674453998*^9, 3.7113368788152647`*^9}, 
   3.711337271794281*^9, {3.711337464018773*^9, 3.711337549294038*^9}, {
   3.7113379046501617`*^9, 3.711338298174623*^9}, {3.711338481352322*^9, 
   3.711338481625621*^9}, {3.7113385125012407`*^9, 3.711338545677997*^9}, {
   3.7113385936548853`*^9, 3.711338608967759*^9}, {3.711338821552692*^9, 
   3.7113388259529877`*^9}, {3.711338856179758*^9, 3.711338962203877*^9}, {
   3.711339720284308*^9, 3.71133972877943*^9}, {3.7118727679550743`*^9, 
   3.711872805955048*^9}, {3.711872852005451*^9, 3.711872914737735*^9}, {
   3.711873089457595*^9, 3.711873133481902*^9}, {3.7119302120162687`*^9, 
   3.711930245692232*^9}},ExpressionUUID->"1c6e7fcd-f05d-46ab-b843-\
ff5f89b90d39"]
}, Closed]],

Cell[CellGroupData[{

Cell["NVCenterEnergySpectrum2[\[ScriptCapitalH], spins] ", "Subsubsection",
 CellChangeTimes->{{3.7113260883845882`*^9, 3.711326111809495*^9}, {
   3.711332555470126*^9, 3.711332568164446*^9}, 3.711334848327389*^9, {
   3.7113350005280647`*^9, 3.71133500187857*^9}, {3.711339053376975*^9, 
   3.711339055102112*^9}, {3.7113401482578506`*^9, 3.7113401564579973`*^9}, 
   3.711682369107785*^9, 
   3.712533681387656*^9},ExpressionUUID->"74c9e3ba-aed8-4a21-a0a0-\
3b0eb38ff160"],

Cell["s", "Text",
 CellChangeTimes->{
  3.711330477902047*^9},ExpressionUUID->"79c5a880-01f4-4fde-aedb-\
795e84960a01"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NVCenterEnergySpectrum2", "[", 
    RowBox[{"\[ScriptCapitalH]_", ",", " ", "spins_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"basis", ",", " ", 
       RowBox[{"mult", " ", "=", " ", 
        RowBox[{
         RowBox[{"2", "spins"}], " ", "+", " ", "1"}]}], ",", " ", "eig", ",",
        " ", "energies", ",", " ", "states", ",", "vecDecomps", " ", ",", " ",
        "vecsIndices", ",", " ", "vecs", ",", " ", "strs", ",", 
       "\[IndentingNewLine]", "coeff", ",", " ", "label", ",", "Jz", ",", " ",
        "angMoms", ",", " ", "table", ",", " ", "data"}], " ", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"basis", "[", "indices_", "]"}], ":=", " ", 
       RowBox[{
        RowBox[{"Apply", "[", 
         RowBox[{"KroneckerProduct", ",", " ", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RotateRight", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"mult", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], "]"}], ",",
               " ", 
              RowBox[{
               RowBox[{"indices", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "  ", "-", " ", "1"}]}], 
             "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "1", ",", " ", 
              RowBox[{"Length", "[", "spins", "]"}]}], "}"}]}], "]"}]}], 
         "]"}], " ", "//", " ", "Flatten"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"states", " ", "=", " ", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"Length", "[", "\[ScriptCapitalH]", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"energies", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Conjugate", "[", "s", "]"}], " ", ".", "\[ScriptCapitalH]",
           " ", ".", " ", "s"}], ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", " ", "states"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"vecDecomps", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"vecsIndices", " ", "=", " ", 
          RowBox[{"Tuples", "[", 
           RowBox[{"Map", "[", 
            RowBox[{"Range", ",", " ", "mult"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"vecs", " ", "=", " ", 
          RowBox[{"Map", "[", " ", 
           RowBox[{"basis", ",", " ", "vecsIndices"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"strs", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"coeff", " ", "=", " ", 
             RowBox[{
              RowBox[{"Conjugate", "[", 
               RowBox[{"vecs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], " ", ".", " ", 
              RowBox[{"states", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"label", " ", "=", " ", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"\"\<|\>\"", "<>", 
                RowBox[{"StringRiffle", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"spins", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"vecsIndices", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}], " ", "+", " ", "1"}], 
                    ")"}], "//", "Rationalize"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", " ", "1", ",", " ", 
                    RowBox[{"Length", "[", "spins", "]"}]}], "}"}]}], "]"}], 
                  ",", "\"\<,\>\""}], "]"}], "<>", 
                "\"\<\[RightAngleBracket]\>\""}], ",", " ", "Bold"}], "]"}]}],
             ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{"coeff", " ", "\[NotEqual]", " ", "0"}], ",", " ", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"strs", ",", 
                RowBox[{"coeff", " ", "*", " ", "label"}]}], "]"}]}], "]"}], 
            ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", 
             RowBox[{"Length", "[", "vecsIndices", "]"}]}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vecDecomps", ",", " ", 
           RowBox[{"strs", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", "1", ",", " ", 
          RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Jz", " ", "=", " ", 
       RowBox[{
        RowBox[{"FullHilbertSpaceOperator", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", " ", "\[Rule]", " ", 
            RowBox[{"SpinMatrixZ", "[", 
             RowBox[{"spins", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], "}"}], "  ", ",", 
          " ", "mult"}], "]"}], " ", "+", "\[IndentingNewLine]", 
        RowBox[{"FullHilbertSpaceOperator", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", " ", "\[Rule]", " ", 
            RowBox[{"SpinMatrixZ", "[", 
             RowBox[{"spins", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "]"}]}], "}"}], "  ", ",", 
          "mult"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"angMoms", " ", "=", " ", 
       RowBox[{"Map", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", " ", ".", " ", "Jz", " ", ".", " ", "#"}], " ", "&"}], 
         ",", " ", "states"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
        "energies", ",", "\[IndentingNewLine]", "vecDecomps", ",", 
         "\[IndentingNewLine]", "states", ",", "\[IndentingNewLine]", 
         "angMoms"}], "\[IndentingNewLine]", "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "data", "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", "&"}]}], "]"}], " ", "//",
         " ", "Transpose"}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"table", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<---\>\""}], 
              "]"}], ",", " ", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<E\>\"", ",", " ", "Bold"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Prepend", "[", " ", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", " ", "\"\<---\>\""}], 
              "]"}], ",", " ", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<|\!\(\*SubscriptBox[\(\[Psi]\), \(E\)]\)\
\[RightAngleBracket]\>\"", ",", " ", "Bold"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", " ", "\"\<---\>\""}], 
              "]"}], ",", "  ", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(J\), \(z\)]\)\
\[RightAngleBracket]\>\"", ",", " ", "Bold"}], "]"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], " ", "//", " ", "Transpose"}], " ", "//",
         "MatrixForm"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"data", ",", " ", "table"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.71133674453998*^9, 3.7113368788152647`*^9}, 
   3.711337271794281*^9, {3.711337464018773*^9, 3.711337549294038*^9}, {
   3.7113379046501617`*^9, 3.711338298174623*^9}, {3.711338481352322*^9, 
   3.711338481625621*^9}, {3.7113385125012407`*^9, 3.711338545677997*^9}, {
   3.7113385936548853`*^9, 3.711338608967759*^9}, {3.711338821552692*^9, 
   3.7113388259529877`*^9}, {3.711338856179758*^9, 3.711338962203877*^9}, {
   3.711339720284308*^9, 3.71133972877943*^9}, {3.7118727679550743`*^9, 
   3.711872805955048*^9}, {3.711872852005451*^9, 3.711872914737735*^9}, {
   3.711873089457595*^9, 3.711873133481902*^9}, {3.7119302120162687`*^9, 
   3.711930245692232*^9}, 3.712533688064035*^9, {3.712534713121097*^9, 
   3.7125347253455772`*^9}, {3.7125351944981327`*^9, 3.712535267347671*^9}, {
   3.712535341850169*^9, 
   3.712535372774701*^9}},ExpressionUUID->"082dda5c-c0a5-4ac2-abaa-\
1893ee28054f"]
}, Closed]],

Cell[CellGroupData[{

Cell["GetSybsystemA[density, subSystemSize]", "Subsubsection",
 CellChangeTimes->{{3.711341391789639*^9, 
  3.711341398765058*^9}},ExpressionUUID->"e391d773-8db5-4b46-a4a5-\
474af753f2a4"],

Cell[TextData[{
 "For a density matrix \[Rho] in the space ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["A", "1"], " ", "\[TensorProduct]", " ", 
      SubscriptBox["A", "2"], " ", "\[TensorProduct]"}], " ", "..."}], " ", 
    "\[TensorProduct]", " ", 
    SubscriptBox["A", "n"]}], TraditionalForm]],ExpressionUUID->
  "d460020e-819d-4dc2-994d-e30b23b5096e"],
 ", the function will return the reduced density matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", 
    SubscriptBox["A", "1"]], TraditionalForm]],ExpressionUUID->
  "880780a3-648d-4564-a0f0-b7d588da0bcb"],
 "."
}], "Text",
 CellChangeTimes->{{3.711341401615139*^9, 
  3.711341408990777*^9}},ExpressionUUID->"c5d67a90-77e2-4dc2-923b-\
30b4510f0e28"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetFirstSubsystem", "[", 
    RowBox[{"density_", ",", " ", "subSystemSize_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", " ", 
    RowBox[{"Tr", ",", " ", 
     RowBox[{"Partition", "[", " ", 
      RowBox[{"density", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "density", "]"}], "/", "subSystemSize"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"Length", "[", "density", "]"}], "/", "subSystemSize"}]}], 
        "}"}]}], "]"}], ",", " ", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.71134140321796*^9, 3.711341405053318*^9}, 
   3.712627883979056*^9},ExpressionUUID->"08162511-05e6-42c7-b16d-\
cb3f500ba392"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
RunSimulation[freqStart,  freqEnd, freqStep, \[ScriptCapitalH],  spins,  \
spinVec,  density0]\
\>", "Subsubsection",
 CellChangeTimes->{{3.711340079007985*^9, 3.7113400817822847`*^9}, {
  3.711340673138195*^9, 3.7113406854858313`*^9}, {3.711340759536162*^9, 
  3.711340761511353*^9}},ExpressionUUID->"7e684e91-45bf-4108-aa9b-\
43dd3b243eef"],

Cell["sd", "Text",
 CellChangeTimes->{{3.711340084257413*^9, 
  3.711340086007327*^9}},ExpressionUUID->"78e0107b-2ec0-4b9b-a8ce-\
5fa2857f329e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RunSimulation", "[", 
    RowBox[{
    "freqStart_", ",", " ", "freqEnd_", ",", " ", "freqStep_", ",", " ", 
     "tStart_", ",", " ", "tEnd_", ",", " ", "\[ScriptCapitalH]_", ",", " ", 
     "spins_", ",", " ", "stateVecs_", ",", " ", "density0_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "calculations", ",", "systemSize", ",", " ", "density", ",", " ", 
       "eqnTotal", ",", " ", "eqns", ",", " ", "diffeqs", ",", " ", "funcs", 
       ",", " ", "initialStateEqs", ",", " ", "params", ",", " ", "subsystem",
        ",", "\[IndentingNewLine]", "data", ",", " ", "tic", ",", " ", 
       "count", ",", " ", "sol", ",", " ", "pulseFreq", ",", " ", "pFunc", 
       ",", " ", "p", ",", " ", "prw", ",", " ", "toc", ",", " ", "ttot", ",",
        "\[IndentingNewLine]", "totalj", ",", " ", "sj", ",", " ", "ij", ",", 
       " ", "Jz", ",", " ", "Sz", ",", " ", "Iz", ",", " ", "simData"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"calculations", " ", "=", " ", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"f", ",", " ", 
          RowBox[{"{", 
           RowBox[{
           "f", ",", " ", "freqStart", ",", " ", "freqEnd", ",", " ", 
            "freqStep"}], "}"}]}], "]"}], " ", "//", " ", "Length"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Setup", " ", "Density", " ", "matrix"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"systemSize", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"Times", ",", " ", 
         RowBox[{
          RowBox[{"2", "spins"}], "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"density", " ", "=", " ", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Rho]", "[", 
           RowBox[{"i", ",", " ", "j"}], "]"}], "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", "systemSize"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", " ", "1", ",", " ", "systemSize"}], "}"}]}], 
        "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"density", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", " ", "i"}], "]"}], "]"}], " ", "=", " ", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"density", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", "systemSize"}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", 
          RowBox[{"i", "+", "1"}], ",", " ", "systemSize"}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Define", " ", "master", " ", "equation"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"eqnTotal", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[ImaginaryI]", "  ", 
          RowBox[{"D", "[", " ", 
           RowBox[{"density", ",", " ", "t"}], "]"}]}], " ", "-", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[ScriptCapitalH]", "[", 
             RowBox[{"f", ",", " ", "t"}], "]"}], ".", "density"}], " ", "-", 
           " ", 
           RowBox[{"density", ".", 
            RowBox[{"\[ScriptCapitalH]", "[", 
             RowBox[{"f", ",", " ", "t"}], "]"}]}]}], ")"}]}], " ", "//", " ",
         "Simplify"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"eqns", " ", "=", " ", 
       RowBox[{
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{"eqnTotal", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], ",", "  ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "systemSize"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "i", ",", " ", "systemSize"}], "}"}]}], 
         "]"}], " ", "//", " ", "Flatten"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"diffeqs", " ", "=", " ", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"eqns", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Equal]", " ", "0"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", "eqns", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"funcs", " ", "=", 
       RowBox[{
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{"density", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], ",", "  ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "systemSize"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "i", ",", " ", "systemSize"}], "}"}]}], 
         "]"}], " ", "//", " ", "Flatten"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"initialStateEqs", " ", "=", "  ", 
       RowBox[{
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Rho]", "[", 
             RowBox[{"i", ",", " ", "j"}], "]"}], "[", "0", "]"}], " ", 
           "\[Equal]", " ", 
           RowBox[{"density0", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], ",", "  ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "systemSize"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "i", ",", " ", "systemSize"}], "}"}]}], 
         "]"}], "  ", "//", " ", "Flatten"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"params", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"diffeqs", ",", " ", "initialStateEqs"}], " ", "}"}], " ", "//",
         " ", "Flatten"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Perform", " ", "simulation"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", "stateVecs", "]"}]}], "}"}]}], "]"}]}], ";",
       " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Store", " ", "spinVec", " ", "probability", " ", "data", " ", "for", 
        " ", "each", " ", "frequency"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"tic", "=", 
       RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"count", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"plot", " ", "=", 
         RowBox[{"Dynamic", "[", 
          RowBox[{
           RowBox[{"ListPlot", "[", "data", "]"}], ",", " ", 
           RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
            RowBox[{"{", "data", "}"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "plot", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Angular", " ", "momentum"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"totalj", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sj", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ij", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Sz", " ", "=", " ", 
       RowBox[{"FullHilbertSpaceOperator", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", " ", "\[Rule]", " ", 
           RowBox[{"SpinMatrixZ", "[", 
            RowBox[{"spins", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], "}"}], "  ", ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", " ", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Iz", " ", "=", " ", 
       RowBox[{"FullHilbertSpaceOperator", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", " ", "\[Rule]", " ", 
           RowBox[{"SpinMatrixZ", "[", 
            RowBox[{"spins", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "]"}]}], "}"}], "  ", ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", " ", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Jz", " ", "=", 
       RowBox[{"Sz", " ", "+", " ", "Iz"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"sol", " ", "=", " ", 
          RowBox[{"NDSolve", "[", " ", 
           RowBox[{
            RowBox[{"params", " ", "/.", " ", 
             RowBox[{"f", " ", "\[Rule]", " ", "freq"}]}], ",", " ", "funcs", 
            ",", " ", 
            RowBox[{"{", 
             RowBox[{"t", ",", " ", "tStart", ",", " ", "tEnd"}], "}"}], ",", 
            " ", "\[IndentingNewLine]", 
            RowBox[{"PrecisionGoal", "\[Rule]", "7"}], ",", 
            RowBox[{"AccuracyGoal", "\[Rule]", "7"}], ",", " ", 
            RowBox[{"MaxSteps", "\[Rule]", "Infinity"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"pFunc", " ", "=", " ", 
             RowBox[{
              RowBox[{"Conjugate", "[", 
               RowBox[{"stateVecs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], " ", ".", "density", 
              ".", " ", 
              RowBox[{"stateVecs", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"p", " ", "=", " ", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"tEnd", " ", "-", " ", "tStart"}]], 
              RowBox[{"NIntegrate", "[", 
               RowBox[{
                RowBox[{"pFunc", " ", "/.", " ", "sol"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"t", ",", " ", "tStart", ",", " ", "tEnd"}], "}"}]}],
                "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"freq", ",", " ", 
                RowBox[{"p", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ";"}], 
           "\[IndentingNewLine]", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", 
             RowBox[{"Length", "[", "stateVecs", "]"}]}], "}"}]}], "]"}], ";",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"p", " ", "=", " ", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"tEnd", " ", "-", " ", "tStart"}]], 
           RowBox[{"NIntegrate", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Tr", "[", " ", 
               RowBox[{"density", " ", ".", " ", "Jz"}], "]"}], " ", "/.", 
              " ", "sol"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"t", ",", " ", "tStart", ",", " ", "tEnd"}], "}"}]}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"totalj", ",", " ", 
           RowBox[{"{", 
            RowBox[{"freq", ",", " ", 
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], " ", "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p", " ", "=", " ", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"tEnd", " ", "-", " ", "tStart"}]], 
           RowBox[{"NIntegrate", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Tr", "[", " ", 
               RowBox[{"density", " ", ".", " ", "Sz"}], "]"}], " ", "/.", 
              " ", "sol"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"t", ",", " ", "tStart", ",", " ", "tEnd"}], "}"}]}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"sj", ",", " ", 
           RowBox[{"{", 
            RowBox[{"freq", ",", " ", 
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], " ", "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p", " ", "=", " ", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"tEnd", " ", "-", " ", "tStart"}]], 
           RowBox[{"NIntegrate", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Tr", "[", " ", 
               RowBox[{"density", " ", ".", " ", "Iz"}], "]"}], " ", "/.", 
              " ", "sol"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"t", ",", " ", "tStart", ",", " ", "tEnd"}], "}"}]}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"ij", ",", " ", 
           RowBox[{"{", 
            RowBox[{"freq", ",", " ", 
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], " ", "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"NotebookDelete", "[", "prw", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"prw", " ", "=", " ", 
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
           "\"\<Calculation \>\"", ",", " ", "count", ",", " ", 
            "\"\< out of \>\"", ",", " ", "calculations"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", " ", "+", " ", "1"}]}], ";"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "freq", ",", " ", "freqStart", ",", " ", "freqEnd", ",", " ", 
          "freqStep"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"toc", "=", 
       RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ttot", " ", "=", " ", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"toc", "-", "tic"}], ")"}], "/", "60"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Total time taken (min) = \>\"", ",", "ttot"}], "]"}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Prepare", " ", "and", " ", "refactor", " ", "data"}], " ", 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Extract", " ", "the", " ", "data", " ", "into", " ", "variables", " ",
         "with", " ", "appropriate", " ", "names"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{" ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"simData", "[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"-", "1"}]}], "]"}], " ", "contains", " ", "the", " ", 
            "simulation", " ", "results", " ", "for", " ", "the"}], " ", "|", 
           "1"}], ",", 
          RowBox[{"-", "1"}]}], "\[RightAngleBracket]"}], " ", "state", " ", 
        "for", " ", "example"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"simData", "[", 
           RowBox[{
            RowBox[{"1", "-", " ", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", " ", "1"}], ")"}], "/", "3"}], " ", "//", 
               " ", "Floor"}], ")"}]}], ",", " ", 
            RowBox[{"1", "-", " ", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", " ", "3"}], "]"}]}]}], "]"}], 
          " ", "=", " ", 
          RowBox[{"data", "[", 
           RowBox[{"[", " ", "i", " ", "]"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", "9"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], " ", "=", " ", 
       "data"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simData", "[", "\"\<Jz\>\"", "]"}], " ", "=", " ", "totalj"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simData", "[", "\"\<Sz\>\"", "]"}], " ", "=", "sj"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simData", "[", "\"\<Iz\>\"", "]"}], " ", "=", " ", "ij"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simData", "[", "\"\<totalSimulationTime\>\"", "]"}], " ", "=",
        " ", "ttot"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simData", "[", "\"\<T(1)\>\"", "]"}], "=", " ", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "  ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "  ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simData", "[", "\"\<T(0)\>\"", "]"}], "=", " ", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "  ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "  ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simData", "[", "\"\<T(-1)\>\"", "]"}], "=", " ", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "  ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
               RowBox[{"[", "9", "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "  ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "simData"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7113400871599007`*^9, 3.711340120782799*^9}, {
   3.7113401610330687`*^9, 3.7113404343114634`*^9}, {3.711340489889118*^9, 
   3.7113405383623257`*^9}, {3.7113407424903183`*^9, 3.711340757388845*^9}, {
   3.711340849090423*^9, 3.711340890014525*^9}, 3.711340986242293*^9, {
   3.711341227417221*^9, 3.7113412281663637`*^9}, {3.711341274641878*^9, 
   3.711341297091722*^9}, {3.7113413367205772`*^9, 3.711341338242292*^9}, {
   3.711341441595036*^9, 3.7113415553194513`*^9}, {3.711341679520356*^9, 
   3.711341706969592*^9}, {3.7113424518772573`*^9, 3.711342501998398*^9}, {
   3.711342572305153*^9, 3.7113426208519278`*^9}, {3.7113426792273684`*^9, 
   3.711342682090027*^9}, 3.71134417666389*^9, {3.711347476204954*^9, 
   3.7113475016298656`*^9}, 3.7113475610131397`*^9, 3.711347599657731*^9, 
   3.711347658206139*^9, {3.711347689972602*^9, 3.711347703354424*^9}, {
   3.711347738896242*^9, 3.711347739005151*^9}, {3.711347804644693*^9, 
   3.711347804828*^9}, {3.711347845604918*^9, 3.7113478515296288`*^9}, {
   3.7113479234412203`*^9, 3.711347924902978*^9}, {3.711347965595332*^9, 
   3.711347968632806*^9}, {3.711348189781046*^9, 3.711348207281797*^9}, {
   3.711348722838646*^9, 3.711348726286742*^9}, {3.711348952387973*^9, 
   3.711348982161728*^9}, {3.711349401567112*^9, 3.7113494018129473`*^9}, 
   3.7113505435622187`*^9, {3.711352481608082*^9, 3.711352484958165*^9}, 
   3.711352531516582*^9, {3.7113742254650106`*^9, 3.711374225862051*^9}, {
   3.7114245563247843`*^9, 3.7114245645242233`*^9}, {3.711424632353903*^9, 
   3.711424635100154*^9}, 3.711424699225112*^9, {3.711424772303143*^9, 
   3.711424772651308*^9}, {3.711424846800071*^9, 3.711424860375486*^9}, {
   3.711426041456724*^9, 3.71142604443211*^9}, 3.7116787730961933`*^9, {
   3.711682264158435*^9, 3.711682267233618*^9}, {3.711874000588253*^9, 
   3.71187406346391*^9}, {3.711874102989023*^9, 3.711874150139731*^9}, {
   3.7118758310752707`*^9, 3.7118758333998623`*^9}, {3.711878516316621*^9, 
   3.711878518791135*^9}, 3.7118785910426197`*^9, 3.711878647519888*^9, {
   3.711921314181177*^9, 3.711921345352676*^9}, 3.711922956508017*^9, {
   3.7119299725418463`*^9, 3.711929988141028*^9}, {3.711930044466971*^9, 
   3.71193004694178*^9}, {3.71193105961957*^9, 3.711931077894967*^9}, {
   3.711931118019752*^9, 3.711931300044977*^9}, {3.7120252136558857`*^9, 
   3.712025234656641*^9}, {3.712025288681942*^9, 3.712025289838244*^9}, {
   3.71202586555856*^9, 3.712026080058323*^9}, {3.7120261102349443`*^9, 
   3.7120261532360287`*^9}, {3.712026547089431*^9, 3.712026628762371*^9}, {
   3.7125284424594727`*^9, 3.71252847648588*^9}, 
   3.712879726480673*^9},ExpressionUUID->"33f44df4-d00e-4007-9d72-\
57bf35e0c257"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SolveSystem[tStart, tEnd, \[ScriptCapitalH], freq, density0]", \
"Subsubsection",
 CellChangeTimes->{{3.7120223206106167`*^9, 3.71202234239102*^9}, {
  3.712022511566614*^9, 3.712022520816637*^9}, {3.712536330028425*^9, 
  3.712536331302989*^9}},ExpressionUUID->"145f859c-1cd4-45a4-99d6-\
d13fb2fcc941"],

Cell["sdsd", "Text",
 CellChangeTimes->{{3.712022349865595*^9, 
  3.7120223530406713`*^9}},ExpressionUUID->"3496529f-da22-4588-8c6d-\
8bfc07c41219"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SolveSystem", "[", 
    RowBox[{
    "tStart_", ",", " ", "tEnd_", ",", " ", "\[ScriptCapitalH]_", ",", 
     "freq_", ",", " ", "density0_"}], " ", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "systemSize", ",", " ", "density", ",", " ", "eqnTotal", ",", " ", 
       "eqns", ",", " ", "diffeqs", ",", " ", "funcs", ",", " ", 
       "initialStateEqs", ",", " ", "params"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Setup", " ", "Density", " ", "matrix"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"systemSize", " ", "=", " ", 
       RowBox[{"Length", "[", "density0", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"density", " ", "=", " ", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Rho]", "[", 
           RowBox[{"i", ",", " ", "j"}], "]"}], "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", "systemSize"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", " ", "1", ",", " ", "systemSize"}], "}"}]}], 
        "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"density", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", " ", "i"}], "]"}], "]"}], " ", "=", " ", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"density", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", "systemSize"}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", 
          RowBox[{"i", "+", "1"}], ",", " ", "systemSize"}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Define", " ", "master", " ", "equation"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"eqnTotal", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[ImaginaryI]", "  ", 
          RowBox[{"D", "[", " ", 
           RowBox[{"density", ",", " ", "t"}], "]"}]}], " ", "-", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[ScriptCapitalH]", "[", 
             RowBox[{"f", ",", " ", "t"}], "]"}], ".", "density"}], " ", "-", 
           " ", 
           RowBox[{"density", ".", 
            RowBox[{"\[ScriptCapitalH]", "[", 
             RowBox[{"f", ",", " ", "t"}], "]"}]}]}], ")"}]}], " ", "//", " ",
         "Simplify"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"eqns", " ", "=", " ", 
       RowBox[{
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{"eqnTotal", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], ",", "  ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "systemSize"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "i", ",", " ", "systemSize"}], "}"}]}], 
         "]"}], " ", "//", " ", "Flatten"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"diffeqs", " ", "=", " ", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"eqns", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "\[Equal]", " ", "0"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", "eqns", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"funcs", " ", "=", 
       RowBox[{
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{"density", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], ",", "  ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "systemSize"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "i", ",", " ", "systemSize"}], "}"}]}], 
         "]"}], " ", "//", " ", "Flatten"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"initialStateEqs", " ", "=", "  ", 
       RowBox[{
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Rho]", "[", 
             RowBox[{"i", ",", " ", "j"}], "]"}], "[", "0", "]"}], " ", 
           "\[Equal]", " ", 
           RowBox[{"density0", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], ",", "  ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "systemSize"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "i", ",", " ", "systemSize"}], "}"}]}], 
         "]"}], "  ", "//", " ", "Flatten"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"params", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"diffeqs", ",", " ", "initialStateEqs"}], " ", "}"}], " ", "//",
         " ", "Flatten"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"density", ",", " ", 
        RowBox[{"NDSolve", "[", " ", 
         RowBox[{
          RowBox[{"params", " ", "/.", " ", 
           RowBox[{"f", " ", "\[Rule]", " ", "freq"}]}], ",", " ", "funcs", 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"t", ",", " ", "tStart", ",", " ", "tEnd"}], "}"}], ",", 
          " ", "\[IndentingNewLine]", 
          RowBox[{"PrecisionGoal", "\[Rule]", "7"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "7"}], ",", " ", 
          RowBox[{"MaxSteps", "\[Rule]", "Infinity"}]}], "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.712022354441741*^9, 3.71202250271782*^9}, 
   3.712266780942778*^9, {3.712536222379467*^9, 3.7125362771282787`*^9}, {
   3.712536315554974*^9, 3.712536371203959*^9}, {3.712536422253921*^9, 
   3.712536475029724*^9}, {3.7125371982124863`*^9, 3.712537216011714*^9}, {
   3.71253727238761*^9, 3.712537311361846*^9}, {3.71253735036285*^9, 
   3.712537376439286*^9}, {3.7125374872377253`*^9, 3.712537543137621*^9}, {
   3.712537590588253*^9, 3.712537591462872*^9}, {3.71253763921903*^9, 
   3.712537639443858*^9}, {3.7125376987279673`*^9, 3.712537704703245*^9}, 
   3.712537804407205*^9, 3.712538002097736*^9, {3.712538266319965*^9, 
   3.712538273218534*^9}, {3.712538491166318*^9, 3.7125384950908737`*^9}, {
   3.7125385261393414`*^9, 3.712538551611127*^9}, {3.712538731860029*^9, 
   3.712538761495029*^9}, {3.712538871756652*^9, 3.712538871981847*^9}, {
   3.712538950332128*^9, 3.712538950556336*^9}, {3.712539008106872*^9, 
   3.712539060006242*^9}, 3.71253977052415*^9, 3.712539964480173*^9, {
   3.712540185905212*^9, 3.7125402808390903`*^9}, {3.712540313289366*^9, 
   3.712540325238885*^9}, {3.7126122437114487`*^9, 
   3.71261224423232*^9}},ExpressionUUID->"235891c8-4169-41cc-a6d1-\
843a31a10d73"]
}, Open  ]],

Cell[CellGroupData[{

Cell["LoadSimulationData[dir]", "Subsubsection",
 CellChangeTimes->{{3.712452405799007*^9, 3.712452407848995*^9}, {
  3.712452563349621*^9, 3.7124525666500597`*^9}, {3.712452647225161*^9, 
  3.712452648225081*^9}},ExpressionUUID->"d185f6b8-20ab-4309-b9e3-\
7ce4d5c3c87f"],

Cell[TextData[{
 "When running the simulation, data is exported into separate folders. This \
function will load simulation data from a specific run, given the folder \
directory path. The path could either be the full path, or a relative path \
from the current notebook directory.\n\nThe function will return a variable \
that contains the data. The data is stored in the following DownValues:\n\n",
 StyleBox["simData=LoadSimulationData[dir]\nsimData[i,j]", "Code"],
 StyleBox[" ", "Code",
  FontWeight->"Plain"],
 StyleBox["(*with i,j=1,0,-1,for the states|1,1\[RightAngleBracket]|1,0\
\[RightAngleBracket]|1,-1\[RightAngleBracket]|0,1\[RightAngleBracket]|0,0\
\[RightAngleBracket]|0,-1\[RightAngleBracket]|-1,1\[RightAngleBracket]|-1,0\
\[RightAngleBracket]|-1,-1\[RightAngleBracket]) *)", "Code",
  FontWeight->"Bold"],
 StyleBox["\n\
simData[\[OpenCurlyDoubleQuote]allstates\[CloseCurlyDoubleQuote]] (* Contains \
the data for all the states in canonical order *)\nsimData[\
\[OpenCurlyDoubleQuote]Jz\[CloseCurlyDoubleQuote]] (* Total angular momentum \
*)\nsimData[\[OpenCurlyDoubleQuote]Sz\[CloseCurlyDoubleQuote]] (* Electron \
triplet spin angular ngular momentum *)\nsimData[\[OpenCurlyDoubleQuote]Iz\
\[CloseCurlyDoubleQuote]] (* Nuclear spin angular momentum *)", "Code"]
}], "Text",
 CellChangeTimes->{{3.7124525717995872`*^9, 3.7124526769002533`*^9}, {
  3.712452715125455*^9, 3.712452750575654*^9}, {3.712452843526321*^9, 
  3.712452847235464*^9}, {3.712452877426423*^9, 3.7124529705779343`*^9}, {
  3.712453011951795*^9, 3.712453025376837*^9}, {3.712454178782269*^9, 
  3.712454210207609*^9}, {3.712454446009251*^9, 3.712454449483666*^9}, {
  3.71245451710983*^9, 
  3.712454533683897*^9}},ExpressionUUID->"0fbbdaa9-7dbd-44da-94d2-\
6e27e8b3b2ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LoadSimulationData", "[", "dir_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "simData", ",", " ", "ms", ",", " ", "mi", ",", " ", "stateStr", ",", 
      " ", "pre"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{
      RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pre", " ", "=", " ", 
      RowBox[{
       RowBox[{"FileNameSplit", "[", "dir", "]"}], "//", "Last"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"ms", " ", "=", " ", 
         RowBox[{"1", "-", " ", 
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", " ", "1"}], ")"}], "/", "3"}], " ", "//", " ",
             "Floor"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"mi", " ", "=", " ", 
         RowBox[{"1", "-", " ", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"i", "-", "1"}], ",", " ", "3"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"stateStr", " ", "=", " ", 
         RowBox[{"\"\<state(\>\"", " ", "<>", " ", 
          RowBox[{"ToString", "[", "ms", "]"}], " ", "<>", " ", "\"\<,\>\"", 
          " ", "<>", " ", 
          RowBox[{"ToString", "[", "mi", "]"}], " ", "<>", "\"\<)\>\""}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"simData", "[", 
          RowBox[{"ms", ",", " ", "mi"}], "]"}], " ", "=", " ", 
         RowBox[{"Import", "[", 
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", " ", 
            RowBox[{"dir", ",", " ", 
             RowBox[{
             "pre", "<>", "\"\<_data_\>\"", "<>", " ", "stateStr", " ", "<>", 
              " ", "\"\<.csv\>\""}]}], " ", "}"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], ",", " ", 
          RowBox[{"simData", "[", 
           RowBox[{"ms", ",", " ", "mi"}], "]"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "9"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"simData", "[", "\"\<T(1)\>\"", "]"}], " ", "=", "  ", 
      RowBox[{"Import", "[", " ", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dir", ",", " ", 
          RowBox[{"pre", " ", "<>", " ", "\"\<_data_T(1).csv\>\""}]}], "}"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"simData", "[", "\"\<T(0)\>\"", "]"}], " ", "=", "  ", 
      RowBox[{"Import", "[", " ", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dir", ",", " ", 
          RowBox[{"pre", " ", "<>", " ", "\"\<_data_T(0).csv\>\""}]}], "}"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"simData", "[", "\"\<T(-1)\>\"", "]"}], " ", "=", "  ", 
      RowBox[{"Import", "[", " ", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dir", ",", " ", 
          RowBox[{"pre", " ", "<>", " ", "\"\<_data_T(-1).csv\>\""}]}], "}"}],
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"simData", "[", "\"\<Jz\>\"", "]"}], " ", "=", " ", 
      RowBox[{"Import", "[", " ", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dir", ",", " ", 
          RowBox[{"pre", " ", "<>", " ", "\"\<_data_Jz.csv\>\""}]}], "}"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"simData", "[", "\"\<Iz\>\"", "]"}], " ", "=", 
      RowBox[{"Import", "[", " ", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dir", ",", " ", 
          RowBox[{"pre", " ", "<>", " ", "\"\<_data_Iz.csv\>\""}]}], "}"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"simData", "[", "\"\<Sz\>\"", "]"}], " ", "=", " ", 
      RowBox[{"Import", "[", " ", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dir", ",", " ", 
          RowBox[{"pre", " ", "<>", " ", "\"\<_data_Sz.csv\>\""}]}], "}"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "simData"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.712452642025158*^9, 3.712452657500372*^9}, {
  3.712454140057678*^9, 3.712454160107416*^9}, {3.7124545384848957`*^9, 
  3.7124545852100067`*^9}, {3.712455087987454*^9, 3.712455127437801*^9}, {
  3.712528500258381*^9, 3.712528505083394*^9}, {3.712612365708067*^9, 
  3.712612381833186*^9}},ExpressionUUID->"e35ea38f-a365-4d5a-b0fd-\
b1f92dd4770e"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["No spin-bath", "Title",
 CellChangeTimes->{{3.711246437497582*^9, 3.7112464454897118`*^9}, {
  3.711339541404573*^9, 
  3.711339542979619*^9}},ExpressionUUID->"86ac2eed-bad9-42f2-9914-\
4d2eb50a153a"],

Cell[CellGroupData[{

Cell["Initialisation", "Subsection",
 CellChangeTimes->{{3.711326135259593*^9, 3.711326137384762*^9}, 
   3.712634988763398*^9},ExpressionUUID->"9230f74c-3079-4432-a627-\
3706e53bbdd3"],

Cell[CellGroupData[{

Cell["NV-Centre constants", "Subsubsection",
 CellChangeTimes->{{3.711246475469863*^9, 3.7112464805650463`*^9}, {
  3.711325778357893*^9, 
  3.711325780958082*^9}},ExpressionUUID->"dee25e60-2aa0-4c81-a7a7-\
edd5bf678d92"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]N", " ", "=", " ", 
    RowBox[{"19.331", "*", 
     SuperscriptBox["10", "6"]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Gyromagnetic", " ", "ratio", " ", "for", 
    SuperscriptBox[" ", "14"], 
    RowBox[{"N", " ", "[", 
     RowBox[{
      SuperscriptBox["s", 
       RowBox[{"-", "1"}]], 
      SuperscriptBox["T", 
       RowBox[{"-", "1"}]]}], "]"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]e", " ", "=", " ", 
    RowBox[{"1.7609", "*", 
     SuperscriptBox["10", "11"]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Gyromagnetic", " ", "ratio", " ", "for", " ", "e"}], "-", " ", 
    RowBox[{"[", 
     RowBox[{"rad", " ", 
      SuperscriptBox["s", 
       RowBox[{"-", "1"}]], 
      SuperscriptBox["T", 
       RowBox[{"-", "1"}]]}], "]"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ahf", " ", "=", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2.1"}], "*", 
       SuperscriptBox["10", "6"]}], ",", " ", 
      RowBox[{
       RowBox[{"-", "2.1"}], "*", 
       SuperscriptBox["10", "6"]}], ",", " ", 
      RowBox[{
       RowBox[{"-", "2.16"}], "*", 
       SuperscriptBox["10", "6"]}]}], " ", "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Hyperfine", " ", "interaction", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", ",", "y", ",", "z"}], ")"}], " ", "[", "Hz", "]"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dzfs", " ", "=", " ", 
    RowBox[{"2870", "*", 
     SuperscriptBox["10", "6"]}]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Zero", "-", "field", "-", 
    RowBox[{"splitting", " ", "for", " ", "electron", " ", 
     RowBox[{"triplet", " ", "[", "Hz", "]"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Pzfs", " ", "=", " ", 
    RowBox[{
     RowBox[{"-", "4.95"}], "*", 
     SuperscriptBox["10", "6"]}]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Zero", "-", "field", "-", 
    RowBox[{"splitting", " ", "for", 
     SuperscriptBox[" ", "14"], 
     RowBox[{"N", " ", "[", "Hz", "]"}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.711246482190489*^9, 3.711246486366794*^9}, {
   3.711325793283394*^9, 3.711325830133637*^9}, {3.7113258640588427`*^9, 
   3.711325868783738*^9}, {3.711326560306879*^9, 3.711326570719633*^9}, {
   3.7113275313873997`*^9, 3.7113275457614603`*^9}, 
   3.712635102929351*^9},ExpressionUUID->"5ac1b033-c536-4336-8430-\
4e5b109de4de"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation parameters", "Subsubsection",
 CellChangeTimes->{{3.711327321484583*^9, 
  3.711327325359797*^9}},ExpressionUUID->"5cefe403-c097-4393-9bdc-\
52d4991e7e46"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pulseAmplitude", " ", "=", " ", 
    RowBox[{"1", "*", 
     SuperscriptBox["10", "6"]}]}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"[", "Hz", "]"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"pulseAmplitudeE", " ", "=", " ", "pulseAmplitude"}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"[", "Hz", "]"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"pulseAmplitudeN", " ", "=", " ", 
    RowBox[{"pulseAmplitude", " ", "*", " ", 
     FractionBox["\[Gamma]N", "\[Gamma]e"]}]}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"[", "Hz", "]"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"pulsePhase", " ", "=", " ", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pulseFreqStart", " ", "=", " ", "3.12`*^9"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"[", "Hz", "]"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pulseFreqEnd", " ", "=", "3.18*^9"}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"[", "Hz", "]"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{"pulseFreqStep", " ", "=", " ", 
    RowBox[{"0.1", "*", 
     SuperscriptBox["10", "6"]}]}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"[", "Hz", "]"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{"calculations", " ", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"f", ",", " ", 
       RowBox[{"{", 
        RowBox[{
        "f", ",", " ", "pulseFreqStart", ",", " ", "pulseFreqEnd", ",", " ", 
         "pulseFreqStep"}], "}"}]}], "]"}], " ", "//", " ", "Length"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tStart", " ", "=", " ", "0"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Start", "-", 
    RowBox[{"time", " ", "of", " ", 
     RowBox[{"NDSolve", " ", "[", "s", "]"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"tEnd", " ", "=", " ", 
   RowBox[{"5", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", "-", 
    RowBox[{"time", " ", "of", " ", 
     RowBox[{"NDSolve", " ", "[", "s", "]"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"B0", " ", "=", 
   RowBox[{"100", " ", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "4"}]]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"DC", " ", "Applied", " ", 
    RowBox[{"field", " ", "[", "T", "]"}]}], " ", "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]s", "=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "\[Gamma]e"}], " ", "B0"}], 
    RowBox[{"2", "\[Pi]"}]]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"[", "Hz", "]"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"\[Omega]I", "=", 
   FractionBox[
    RowBox[{"\[Gamma]N", " ", "B0"}], 
    RowBox[{"2", "\[Pi]"}]]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"[", "Hz", "]"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Number of calculations: \>\"", ",", " ", "calculations"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.711327327435595*^9, 3.711327496377437*^9}, {
   3.711327550311452*^9, 3.7113275505627604`*^9}, {3.711341568946257*^9, 
   3.711341614216663*^9}, {3.711374279182678*^9, 3.7113742802612047`*^9}, {
   3.711424925850017*^9, 3.711424929974256*^9}, {3.711425010750031*^9, 
   3.711425012024644*^9}, {3.7114259776822367`*^9, 3.711425994533032*^9}, 
   3.7116785463043528`*^9, {3.711681843181076*^9, 3.711681843885611*^9}, {
   3.71168187960602*^9, 3.711681956730383*^9}, {3.711873499883213*^9, 
   3.711873500432976*^9}, {3.71187363298418*^9, 3.711873633958988*^9}, 
   3.711873809411231*^9, {3.711873878361054*^9, 3.7118738803443527`*^9}, {
   3.711874705791044*^9, 3.7118747277659187`*^9}, {3.711875274870698*^9, 
   3.7118753433449183`*^9}, 3.711923675961155*^9, {3.71192916811369*^9, 
   3.711929178679037*^9}, {3.711931319569418*^9, 3.711931332868452*^9}, {
   3.711932167002953*^9, 3.7119321701522093`*^9}, 3.711932201978203*^9, {
   3.7119350564646187`*^9, 3.711935061638538*^9}, {3.711936000968977*^9, 
   3.711936009292314*^9}, {3.7119361299693003`*^9, 3.711936133610057*^9}, {
   3.711943026978553*^9, 3.711943029927361*^9}, {3.711943260053631*^9, 
   3.7119432669535303`*^9}, {3.711944359311716*^9, 3.711944373734724*^9}, {
   3.711944424162179*^9, 3.711944425082885*^9}, {3.711945915467825*^9, 
   3.711945918315716*^9}, {3.711946636371282*^9, 3.7119466748700542`*^9}, {
   3.711955520902686*^9, 3.711955523726223*^9}, {3.7119629361901293`*^9, 
   3.711962936571762*^9}, {3.7119708111080637`*^9, 3.7119708213063183`*^9}, {
   3.7119723429691887`*^9, 3.7119723527421513`*^9}, {3.711972406469153*^9, 
   3.7119724258426523`*^9}, {3.7119744686795197`*^9, 3.711974469328401*^9}, {
   3.7120199120588017`*^9, 3.712019925357142*^9}, {3.712020731185557*^9, 
   3.71202073273533*^9}, {3.712022218642501*^9, 3.712022234741002*^9}, {
   3.712022830519494*^9, 3.712022834168364*^9}, {3.712023784298164*^9, 
   3.7120237843726377`*^9}, {3.712023816297818*^9, 3.712023816772768*^9}, {
   3.712026237633655*^9, 3.712026238357595*^9}, {3.712029955125037*^9, 
   3.7120299604740562`*^9}, {3.712036274491387*^9, 3.712036276555685*^9}, {
   3.7122702524102087`*^9, 3.7122702724597397`*^9}, {3.7122934546068363`*^9, 
   3.712293467872807*^9}, {3.7123237842229643`*^9, 3.7123237847210712`*^9}, {
   3.712404279896134*^9, 3.7124043008452168`*^9}, {3.712457837631084*^9, 
   3.712457876157452*^9}, {3.712528401007864*^9, 3.712528406057057*^9}, {
   3.712528762510541*^9, 3.712528774358906*^9}, {3.7125361903533297`*^9, 
   3.7125361963277693`*^9}, {3.712537368313586*^9, 3.712537368587529*^9}, {
   3.712537631641532*^9, 3.7125376323909883`*^9}, {3.7125387179579287`*^9, 
   3.7125387193068743`*^9}, 3.712539087156389*^9, 3.7125397435851717`*^9, 
   3.712539788069558*^9, {3.71253986186272*^9, 3.712539896535842*^9}, {
   3.712540012164242*^9, 3.712540035688867*^9}, {3.712540339669139*^9, 
   3.712540374563856*^9}, {3.712548996558734*^9, 3.712549026507778*^9}, {
   3.71254907438157*^9, 3.7125490889060593`*^9}, {3.7126127842588987`*^9, 
   3.712612784605802*^9}, {3.712612817633812*^9, 3.712612852733906*^9}, {
   3.712623428589308*^9, 3.712623430964621*^9}, {3.7126236133646717`*^9, 
   3.7126237090402813`*^9}, {3.712631189850615*^9, 3.712631219625166*^9}, {
   3.7126349281148376`*^9, 3.712634971239293*^9}, {3.712636405396727*^9, 
   3.712636414782672*^9}, {3.712637640558011*^9, 3.712637640639559*^9}, {
   3.7126381272189627`*^9, 3.7126381272931747`*^9}, {3.7126394138539057`*^9, 
   3.712639414128498*^9}, {3.712639462779503*^9, 3.712639475154191*^9}, {
   3.712639522429454*^9, 3.712639522728883*^9}, 3.712639566380005*^9, {
   3.7126424458949738`*^9, 3.712642446105238*^9}, {3.71264920033202*^9, 
   3.712649203956272*^9}, {3.7126494194104757`*^9, 3.712649433560358*^9}, 
   3.712656492889502*^9, {3.71266003923869*^9, 3.712660041013082*^9}, {
   3.712660073647374*^9, 
   3.712660079184602*^9}},ExpressionUUID->"73bf8ab2-31c7-4514-aef2-\
a33a81755669"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of calculations: \"\>", "\[InvisibleSpace]", "601"}],
  SequenceForm["Number of calculations: ", 601],
  Editable->False]], "Print",
 CellChangeTimes->{{3.711935058481987*^9, 3.711935071444921*^9}, 
   3.711936009912887*^9, {3.711936130715847*^9, 3.711936144507812*^9}, {
   3.711944369537177*^9, 3.711944386929088*^9}, 3.711944438052495*^9, 
   3.711945962934402*^9, {3.711946669664069*^9, 3.711946683502451*^9}, 
   3.71194791049506*^9, 3.711955533286454*^9, 3.711962952255187*^9, {
   3.71197081757701*^9, 3.7119708324308567`*^9}, {3.711972353116579*^9, 
   3.7119723596624413`*^9}, {3.711972414238549*^9, 3.7119724261675463`*^9}, 
   3.711972700226503*^9, 3.711974478563877*^9, {3.712019925881577*^9, 
   3.7120199487248793`*^9}, 3.712020442494331*^9, 3.7120207447083483`*^9, {
   3.712022228391615*^9, 3.712022250879534*^9}, {3.7120228364646063`*^9, 
   3.712022849737834*^9}, 3.712023784796382*^9, 3.712023825793187*^9, 
   3.712023886932557*^9, {3.7120262338231707`*^9, 3.7120262512167187`*^9}, {
   3.712029961010317*^9, 3.7120299689387817`*^9}, 3.712036292159925*^9, {
   3.712270278772509*^9, 3.712270302409645*^9}, 3.712293493975359*^9, 
   3.712322495450924*^9, 3.7123237970748167`*^9, {3.712404284084186*^9, 
   3.712404331448258*^9}, 3.712405584841709*^9, {3.712457083141717*^9, 
   3.712457106224126*^9}, {3.712457856637779*^9, 3.712457888556129*^9}, {
   3.712528396657812*^9, 3.712528406404211*^9}, {3.71252851250264*^9, 
   3.712528515684623*^9}, {3.712528765756343*^9, 3.712528784744911*^9}, 
   3.7125362104234867`*^9, 3.712537179578163*^9, 3.7125375629591427`*^9, 
   3.7125376366924047`*^9, 3.7125384254579697`*^9, 3.71253872310287*^9, 
   3.712539091672065*^9, 3.712539745780645*^9, {3.712539789428081*^9, 
   3.712539791448341*^9}, {3.712539857902143*^9, 3.712539865262355*^9}, 
   3.712539899027216*^9, {3.712540023395111*^9, 3.712540037074972*^9}, {
   3.712540371112391*^9, 3.7125403748609457`*^9}, 3.7125404112713327`*^9, 
   3.712545332338429*^9, {3.712549026956216*^9, 3.712549040146196*^9}, 
   3.712549119929007*^9, 3.712612209208108*^9, {3.712612849144801*^9, 
   3.712612865701839*^9}, 3.712619975416127*^9, 3.712623381351779*^9, {
   3.712623751486919*^9, 3.712623757530862*^9}, 3.7126239127736673`*^9, 
   3.712631155574003*^9, {3.7126311987001457`*^9, 3.712631224500224*^9}, 
   3.712635588769858*^9, 3.712636417932973*^9, {3.712637641101282*^9, 
   3.7126376454204473`*^9}, {3.712638127842389*^9, 3.712638156561318*^9}, 
   3.712638303372704*^9, 3.712639417607719*^9, {3.71263947786978*^9, 
   3.712639479718277*^9}, {3.712639527185643*^9, 3.712639544798572*^9}, {
   3.7126395749245033`*^9, 3.712639576994062*^9}, 3.7126424649540653`*^9, {
   3.712649425999601*^9, 3.712649439138196*^9}, 3.712656498332388*^9, 
   3.712660041915986*^9, {3.712660079773884*^9, 
   3.712660084250845*^9}},ExpressionUUID->"2b96875b-a2a6-4f29-901d-\
164264fd6f07"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setup Hamiltonian", "Subsubsection",
 CellChangeTimes->{{3.711326144009676*^9, 
  3.7113261459847507`*^9}},ExpressionUUID->"da94ca88-ba88-458b-925e-\
d216f9f64e04"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"spins", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hilbertSubspaceDimensions", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "*", "spins"}], " ", "+", " ", "1"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalH]HF", " ", "=", "  ", 
    RowBox[{"SpinSpinHamiltonian", "[", "\[IndentingNewLine]", 
     RowBox[{"spins", ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", " ", "\[Rule]", " ", "2"}], ",", " ", "Ahf"}], "}"}], 
       "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalH]spinSpin", " ", "=", "  ", 
    RowBox[{"SpinSpinHamiltonian", "[", "\[IndentingNewLine]", 
     RowBox[{"spins", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", " ", "\[Rule]", " ", "1"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", "Dzfs"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", " ", "\[Rule]", " ", "2"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "Pzfs"}], "}"}]}], "}"}]}], 
       "}"}]}], "\[IndentingNewLine]", "]"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalH]zee", " ", "=", " ", 
    RowBox[{"ZeemanHamiltonian", "[", 
     RowBox[{"spins", ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Omega]s", ",", " ", "\[Omega]I", ",", " ", "0"}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalH]NV", " ", "=", " ", 
    RowBox[{
    "\[ScriptCapitalH]HF", " ", "+", " ", "\[ScriptCapitalH]spinSpin", " ", 
     "+", " ", "\[ScriptCapitalH]zee"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalH]Cop", " ", "=", "  ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"pulseAmplitudeE", "*", " ", 
       RowBox[{"FullHilbertSpaceOperator", "[", " ", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"1", "\[Rule]", " ", 
           RowBox[{"SpinMatrixX", "[", "1", "]"}]}], " ", "}"}], ",", " ", 
         "hilbertSubspaceDimensions"}], " ", "]"}]}], "  ", "+", " ", 
      RowBox[{"pulseAmplitudeN", " ", "*", " ", 
       RowBox[{"FullHilbertSpaceOperator", "[", " ", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"2", "\[Rule]", " ", 
           RowBox[{"SpinMatrixX", "[", "1", "]"}]}], " ", "}"}], ",", " ", 
         "hilbertSubspaceDimensions"}], " ", "]"}]}]}], " ", ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalH]C", "[", 
     RowBox[{"f_", ",", " ", "t_"}], "]"}], " ", ":=", 
    RowBox[{"\[ScriptCapitalH]Cop", " ", "*", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"f", " ", "t"}], " ", "+", " ", "pulsePhase"}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalH]", "[", 
    RowBox[{"f_", ",", "t_"}], "]"}], " ", ":=", " ", 
   RowBox[{"\[ScriptCapitalH]NV", "  ", "+", " ", 
    RowBox[{"\[ScriptCapitalH]C", "[", 
     RowBox[{"f", ",", "t"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQLSez2OL0steOPMY+tiD6DvNXFxD9iOWtF4h+cO1n
CIi2sJ0RBqIvtxlXgOi8gBVdINpEKUztDJD+G/1UH0RvYQg2A9E5k2ZYguiH
pkrOINrDoMgNRN9eWvgWRC8oOvUbRHMfTbU/C6Tr4me7gmjeGduCQLTn/H1g
OmXRsVQQfebc3jQQnVGuwXoOSG+44cUGok8/fTnnPJC+wM07F0Sveae75SLI
XXYTdoDoP79vfgXRAl2zv4Noj+TZm68CaZ0U8V0gOm9p0AkQ3R23+BSI1nso
d7FsOVBfw5UrIDrEc43DNSD9aLWYE4gW2hOVCaJ7FFPB9JvIA14yK1873jt5
3hdEr7TzYFMA0huuPuQA0dMfLepzAdLv9m7uB9F9n7havIF0vk5VP4h+5eUu
7wOkZ1V9UgLRAE894o8=
  
  "],ExpressionUUID->"c050fc88-9c35-4ae7-8eaa-24a721106893"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"op", " ", "=", " ", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"Sx", ",", " ", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"op", " ", "=", " ", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"Sx", ",", " ", 
        RowBox[{"IdentityMatrix", "[", "3", "]"}]}], "]"}], " ", "+", " ", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", " ", "Sx"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"op", " ", "=", " ", "\[ScriptCapitalH]Cop"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pairs", " ", "=", " ", 
     RowBox[{"Select", " ", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", "j"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", "9"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", " ", ",", " ", "1", ",", " ", "9"}], "}"}]}], "]"}], 
         ",", " ", "1"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"op", "[", 
          RowBox[{"[", " ", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], "]"}], " ", 
         "\[NotEqual]", " ", "0"}], " ", "&"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"iToVec", "[", "i_", "]"}], " ", ":=", " ", 
     RowBox[{"\"\<|\>\"", " ", "<>", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{"1", "-", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", " ", "1"}], ")"}], "/", "3"}], " ", "//", " ", 
          "Floor"}], ")"}]}], "]"}], " ", "<>", " ", "\"\<,\>\"", " ", "<>", 
      " ", 
      RowBox[{"ToString", "[", " ", 
       RowBox[{"1", "-", " ", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", " ", "3"}], "]"}]}], "]"}], " ", "<>",
       " ", "\"\<\[RightAngleBracket]\>\""}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Map", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"iToVec", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "\[LeftRightArrow]", 
        " ", 
        RowBox[{"iToVec", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], " ", "&"}], ",", " ", 
      "pairs"}], "]"}], " ", "//", " ", "MatrixForm"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7125453934020767`*^9, 3.712545466537917*^9}, {
  3.7125454986379967`*^9, 3.712545782931096*^9}, {3.712545965867181*^9, 
  3.7125459852422132`*^9}, {3.7125460203930607`*^9, 3.712546026492054*^9}, {
  3.712546107943323*^9, 3.7125461334177437`*^9}, {3.712546244493836*^9, 
  3.712546265919022*^9}, {3.712546422171253*^9, 3.7125464249699717`*^9}, {
  3.71254711839307*^9, 3.712547118695156*^9}, {3.712547150100437*^9, 
  3.7125471515625134`*^9}, {3.7125489481084414`*^9, 
  3.7125489516332607`*^9}},ExpressionUUID->"21a1ba76-250c-480a-9396-\
86a0bc15ebf1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"\<\"|1,1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|1,0\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|1,1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|0,1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|1,0\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|1,1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|1,0\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|1,-1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|1,0\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|0,0\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|1,-1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|1,0\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|1,-1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|0,-1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|0,1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|1,1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|0,1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|0,0\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|0,1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|-1,1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|0,0\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|1,0\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|0,0\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|0,1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|0,0\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|0,-1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|0,0\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|-1,0\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|0,-1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|1,-1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|0,-1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|0,0\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|0,-1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|-1,-1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|-1,1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|0,1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|-1,1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|-1,0\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|-1,0\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|0,0\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|-1,0\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|-1,1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|-1,0\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|-1,-1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|-1,-1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|0,-1\[RightAngleBracket]\"\>"}]},
      {
       RowBox[{"\<\"|-1,-1\[RightAngleBracket]\"\>", 
        "\[LeftRightArrow]", "\<\"|-1,0\[RightAngleBracket]\"\>"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.712546425322249*^9, 3.712547119410302*^9, 3.71254715193648*^9, 
   3.71254895201049*^9, 3.712549040189686*^9, 3.7125491202633867`*^9, 
   3.712612209477359*^9, 3.712612865745118*^9, 3.712619975455081*^9, 
   3.712623381434453*^9, 3.7126237575837584`*^9, 3.71262391280536*^9, 
   3.712631224567377*^9, 3.712635589001145*^9, 3.7126364181976833`*^9, 
   3.712637646054858*^9, {3.712638131998302*^9, 3.712638156591784*^9}, 
   3.712638303542974*^9, {3.712639229133597*^9, 3.7126392379597387`*^9}, 
   3.712639297234664*^9, 3.712639417650529*^9, 3.712639479748529*^9, {
   3.712639527232337*^9, 3.7126395448293123`*^9}, 3.712639577026341*^9, 
   3.7126424649954557`*^9, 3.7126494392902937`*^9, 3.712656498458085*^9, 
   3.712660084592614*^9},ExpressionUUID->"31a00c64-f1f1-4523-a63f-\
4b602af56bb4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Energy spectrum of the unperturbed Hamiltonian", "Subsubsection",
 CellChangeTimes->{{3.711334963953167*^9, 
  3.7113349865784607`*^9}},ExpressionUUID->"429b76d5-4d40-431e-966a-\
b04ef682fe2a"],

Cell["In terms of the eigenstates of the Hamiltonian", "Text",
 CellChangeTimes->{{3.7125353878224783`*^9, 
  3.7125353969977016`*^9}},ExpressionUUID->"3f9610a1-ce90-463e-aa7b-\
32976bfb2290"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hamiltonianSpectrum", " ", "=", " ", 
    RowBox[{"NVCenterEnergySpectrum", "[", 
     RowBox[{"\[ScriptCapitalH]NV", ",", " ", "spins"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"hamiltonianSpectrum", "[", 
  RowBox[{"[", "2", "]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.711334974728861*^9, 3.711335007730961*^9, {3.71168237495683*^9, 
   3.711682426483138*^9}, {3.711682456908224*^9, 3.711682471506604*^9}, {
   3.711930262215969*^9, 3.711930273065331*^9}, 
   3.71254134323527*^9},ExpressionUUID->"d5124004-c479-4733-8eb2-\
c5b7ef544fa5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      StyleBox["\<\"E\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      StyleBox["\<\"|\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(E\\)]\\)\
\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      StyleBox["\<\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(J\\), \
\\(z\\)]\\)\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold]},
     {"\<\"---\"\>", "\<\"---\"\>", "\<\"---\"\>"},
     {"3.1502573369663377`*^9", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.0006655597663917286`"}], " ", 
         StyleBox["\<\"|0,-1\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}], ",", 
        RowBox[{"0.9999997785150742`", " ", 
         StyleBox["\<\"|-1,0\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}]}], "}"}], 
      RowBox[{"-", "1.`"}]},
     {"3.1474981066489053`*^9", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2.4994273666004266`*^-6", " ", 
         StyleBox["\<\"|1,-1\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}], ",", 
        RowBox[{
         RowBox[{"-", "0.0006671981079015553`"}], " ", 
         StyleBox["\<\"|0,0\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}], ",", 
        RowBox[{"0.999999777420194`", " ", 
         StyleBox["\<\"|-1,1\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}]}], "}"}], "0.`"},
     {"3.1431151730484695`*^9", 
      RowBox[{"{", 
       RowBox[{"1.`", " ", 
        StyleBox["\<\"|-1,-1\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontWeight->Bold]}], "}"}], 
      RowBox[{"-", "2.`"}]},
     {"2.5897457603508644`*^9", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.9999996724739895`", " ", 
         StyleBox["\<\"|1,0\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}], ",", 
        RowBox[{
         RowBox[{"-", "0.0008093527746215507`"}], " ", 
         StyleBox["\<\"|0,1\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}]}], "}"}], "1.`"},
     {"2.586924999188904`*^9", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.9999996705085443`", " ", 
         StyleBox["\<\"|1,-1\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}], ",", 
        RowBox[{
         RowBox[{"-", "0.0008117718613963086`"}], " ", 
         StyleBox["\<\"|0,0\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}], ",", 
        RowBox[{
         RowBox[{"-", "3.04103986990587`*^-6"}], " ", 
         StyleBox["\<\"|-1,1\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}]}], "}"}], "0.`"},
     {"2.5826648269515305`*^9", 
      RowBox[{"{", 
       RowBox[{"1.`", " ", 
        StyleBox["\<\"|1,1\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontWeight->Bold]}], "}"}], "2.`"},
     {
      RowBox[{"-", "3105.8378033638`"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.0008117737096883327`", " ", 
         StyleBox["\<\"|1,-1\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}], ",", 
        RowBox[{"0.9999994479364125`", " ", 
         StyleBox["\<\"|0,0\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}], ",", 
        RowBox[{"0.0006671958591006737`", " ", 
         StyleBox["\<\"|-1,1\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}]}], "}"}], "0.`"},
     {
      RowBox[{"-", "4.920933399331093`*^6"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.0008093527746215507`", " ", 
         StyleBox["\<\"|1,0\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}], ",", 
        RowBox[{"0.9999996724739895`", " ", 
         StyleBox["\<\"|0,1\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}]}], "}"}], "1.`"},
     {
      RowBox[{"-", "4.9821639178676605`*^6"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.9999997785150742`", " ", 
         StyleBox["\<\"|0,-1\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}], ",", 
        RowBox[{"0.0006655597663917286`", " ", 
         StyleBox["\<\"|-1,0\[RightAngleBracket]\"\>",
          StripOnInput->False,
          FontWeight->Bold]}]}], "}"}], 
      RowBox[{"-", "1.`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.711930273537304*^9, 3.711931348470614*^9, 3.711932181388792*^9, 
   3.7119322120147867`*^9, 3.7119350714833393`*^9, 3.71193614460525*^9, 
   3.7119443869991503`*^9, 3.711944438166267*^9, 3.711945963021175*^9, 
   3.7119466835690613`*^9, 3.71194791072612*^9, 3.711955533436364*^9, 
   3.711962952798161*^9, 3.711970832950571*^9, 3.711972359750544*^9, 
   3.711972700264761*^9, 3.711974478618828*^9, 3.712019949087287*^9, 
   3.712020442778489*^9, 3.712020744874995*^9, 3.712022250930533*^9, 
   3.712022849793498*^9, 3.712023887024335*^9, 3.712026253594293*^9, 
   3.712029969041689*^9, 3.7120362929262877`*^9, 3.7122703030247307`*^9, 
   3.712293494887858*^9, 3.712322495923511*^9, 3.712323797296833*^9, 
   3.712404332171818*^9, 3.712405586272736*^9, {3.7124570904388533`*^9, 
   3.712457106606525*^9}, 3.7124578886004143`*^9, {3.7125285128589973`*^9, 
   3.712528515733432*^9}, 3.7125287847890263`*^9, 3.712536210485029*^9, 
   3.712537180006819*^9, 3.712537563042226*^9, 3.7125384260650053`*^9, 
   3.7125387231588097`*^9, 3.712539091737397*^9, 3.7125397460067596`*^9, 
   3.7125397915060253`*^9, 3.7125398653156443`*^9, 3.712539899555067*^9, 
   3.7125404145996113`*^9, 3.712545333334519*^9, 3.7125490051849747`*^9, 
   3.712549040226306*^9, 3.712549120534116*^9, 3.712612209696102*^9, 
   3.7126128657941236`*^9, 3.712619975500332*^9, 3.712623381613872*^9, 
   3.7126237576219177`*^9, 3.71262391283818*^9, 3.7126312246031923`*^9, 
   3.7126355892567263`*^9, 3.7126364184744987`*^9, 3.712637646643012*^9, {
   3.7126381321841183`*^9, 3.7126381566246433`*^9}, 3.7126383037564096`*^9, 
   3.7126394176750803`*^9, 3.712639479775619*^9, {3.712639527257324*^9, 
   3.712639544855336*^9}, 3.71263957705795*^9, 3.712642465019195*^9, 
   3.712649439371901*^9, 3.7126564987024717`*^9, 
   3.7126600849171333`*^9},ExpressionUUID->"6b240171-2671-48d7-a1cc-\
9dccf25c65b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hamiltonianSpectrum", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.712457111250022*^9, 
  3.712457146600349*^9}},ExpressionUUID->"327b0b37-19c4-40bd-9d2b-\
1a40e92cb01a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.1502573369663377`*^9", ",", "3.1474981066489053`*^9", ",", 
   "3.1431151730484695`*^9", ",", "2.5897457603508644`*^9", ",", 
   "2.586924999188904`*^9", ",", "2.5826648269515305`*^9", ",", 
   RowBox[{"-", "3105.8378033638`"}], ",", 
   RowBox[{"-", "4.920933399331093`*^6"}], ",", 
   RowBox[{"-", "4.9821639178676605`*^6"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7124578886078*^9, {3.712528512879882*^9, 3.712528515739998*^9}, 
   3.7125287848119917`*^9, 3.712536210505485*^9, 3.712537180187723*^9, 
   3.7125375630506697`*^9, 3.712538426152647*^9, 3.7125387231679564`*^9, 
   3.7125390917451363`*^9, 3.71253974606534*^9, 3.712539791529553*^9, 
   3.7125398653397903`*^9, 3.712539899576363*^9, 3.712540414668537*^9, 
   3.7125453334115257`*^9, 3.712549040252698*^9, 3.712549120578348*^9, 
   3.712612209719692*^9, 3.7126128658198423`*^9, 3.712619975531262*^9, 
   3.712623381768331*^9, 3.7126237576434517`*^9, 3.712623912845894*^9, 
   3.712631224625394*^9, 3.7126355893340683`*^9, 3.7126364184955873`*^9, 
   3.712637646764213*^9, {3.712638132204515*^9, 3.712638156647423*^9}, 
   3.7126383037938147`*^9, 3.712639417682981*^9, 3.712639479785863*^9, {
   3.712639527268202*^9, 3.712639544862838*^9}, 3.7126395770839453`*^9, 
   3.7126424650310698`*^9, 3.712649439445607*^9, 3.712656498725472*^9, 
   3.7126600849896193`*^9},ExpressionUUID->"fdbfde3a-9e68-4bc7-af1d-\
978878a27ae8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "3.1502573369663377`*^9", ",", "3.1474981066489053`*^9", ",", 
    "3.1431151730484695`*^9", ",", "2.5897457603508644`*^9", ",", 
    "2.586924999188904`*^9", ",", "2.5826648269515305`*^9", ",", 
    RowBox[{"-", "3105.8378033638`"}], ",", 
    RowBox[{"-", "4.920933399331093`*^6"}], ",", 
    RowBox[{"-", "4.9821639178676605`*^6"}]}], "}"}], " ", "-", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
   "3.1474981066489053`*^9", ",", "3.1431151730484695`*^9", ",", 
    "2.5897457603508644`*^9", ",", "2.586924999188904`*^9", ",", 
    "2.5826648269515305`*^9", ",", 
    RowBox[{"-", "3105.8378033638`"}], ",", 
    RowBox[{"-", "4.920933399331093`*^6"}], ",", 
    RowBox[{"-", "4.9821639178676605`*^6"}], ",", " ", "0"}], "}"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.712457149701702*^9, 
  3.7124571897263947`*^9}},ExpressionUUID->"806f6420-e75c-4906-b3f0-\
b639a9f9c8ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.7592303174324036`*^6", ",", "4.382933600435734`*^6", ",", 
   "5.533694126976051`*^8", ",", "2.820761161960602`*^6", ",", 
   "4.260172237373352`*^6", ",", "2.582667932789334`*^9", ",", 
   "4.917827561527729`*^6", ",", "61230.51853656769`", ",", 
   RowBox[{"-", "4.9821639178676605`*^6"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.712457190093095*^9, 3.7124578886320753`*^9, {3.71252851289717*^9, 
   3.712528515762854*^9}, 3.71252878483527*^9, 3.7125362105278053`*^9, 
   3.712537180225482*^9, 3.712537563081044*^9, 3.712538426270344*^9, 
   3.712538723187851*^9, 3.71253909176696*^9, 3.712539746087687*^9, 
   3.712539791559503*^9, 3.712539865361597*^9, 3.71253989960135*^9, 
   3.712540414740891*^9, 3.712545333560162*^9, 3.712549040278388*^9, 
   3.71254912061059*^9, 3.71261220974102*^9, 3.712612865840852*^9, 
   3.7126199755670033`*^9, 3.712623381835096*^9, 3.712623757668795*^9, 
   3.7126239128670683`*^9, 3.7126312246458387`*^9, 3.7126355894077187`*^9, 
   3.7126364185377207`*^9, 3.71263764682487*^9, {3.712638132227648*^9, 
   3.7126381566741734`*^9}, 3.7126383038155527`*^9, 3.712639417705336*^9, 
   3.712639479806819*^9, {3.7126395272894573`*^9, 3.7126395448862*^9}, 
   3.712639577109592*^9, 3.712642465053577*^9, 3.712649439518384*^9, 
   3.712656498747122*^9, 
   3.712660085060753*^9},ExpressionUUID->"4ba86185-5200-44a2-8327-\
631b89edb8f2"]
}, Open  ]],

Cell["In terms of eigenstates of the spin triplet and nuclear spin", "Text",
 CellChangeTimes->{{3.712535403997591*^9, 
  3.712535427447818*^9}},ExpressionUUID->"1aa92d83-77d2-4a3c-a852-\
5e142353fcfb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hamiltonianSpectrumPure", " ", "=", " ", 
   RowBox[{"NVCenterEnergySpectrum2", "[", 
    RowBox[{
     RowBox[{"\[ScriptCapitalH]", "[", 
      RowBox[{"0", ",", "0"}], "]"}], ",", " ", "spins"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"hamiltonianSpectrumPure", "[", 
  RowBox[{"[", "2", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.712535431798429*^9, 
  3.712535458223383*^9}},ExpressionUUID->"854efc78-173b-496a-bd70-\
5ed755866602"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      StyleBox["\<\"E\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      StyleBox["\<\"|\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(E\\)]\\)\
\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      StyleBox["\<\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(J\\), \
\\(z\\)]\\)\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold]},
     {"\<\"---\"\>", "\<\"---\"\>", "\<\"---\"\>"},
     {"3.1502559392905188`*^9", 
      StyleBox["\<\"|-1,0\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      RowBox[{"-", "1"}]},
     {"3.1474967055325675`*^9", 
      StyleBox["\<\"|-1,1\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold], "0"},
     {"3.1431151730484695`*^9", 
      StyleBox["\<\"|-1,-1\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      RowBox[{"-", "2"}]},
     {"2.5897440607094812`*^9", 
      StyleBox["\<\"|1,0\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold], "1"},
     {"2.5869232944674325`*^9", 
      StyleBox["\<\"|1,-1\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold], "0"},
     {"2.5826648269515305`*^9", 
      StyleBox["\<\"|1,1\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold], "2"},
     {"0.`", 
      StyleBox["\<\"|0,0\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold], "0"},
     {
      RowBox[{"-", "4.919233757950906`*^6"}], 
      StyleBox["\<\"|0,1\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold], "1"},
     {
      RowBox[{"-", "4.980766242049094`*^6"}], 
      StyleBox["\<\"|0,-1\[RightAngleBracket]\"\>",
       StripOnInput->False,
       FontWeight->Bold], 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.712535458521215*^9, 3.712536210560768*^9, 3.712537180291471*^9, 
   3.712537563121862*^9, 3.712538426391841*^9, 3.712538723220418*^9, 
   3.712539091809854*^9, 3.71253974611703*^9, 3.7125398653981247`*^9, 
   3.712539899633627*^9, 3.712540414829588*^9, 3.712545333630535*^9, 
   3.712549008927782*^9, 3.7125490403098392`*^9, 3.712549120659017*^9, 
   3.7126122097879744`*^9, 3.712612865865046*^9, 3.712619975603387*^9, 
   3.7126233819064503`*^9, 3.712623757698184*^9, 3.7126239128937597`*^9, 
   3.712631224675544*^9, 3.712635589554926*^9, 3.712636418582658*^9, 
   3.712637646875389*^9, {3.7126381322549353`*^9, 3.712638156700357*^9}, 
   3.7126383038479967`*^9, 3.712639417736974*^9, 3.712639479839437*^9, {
   3.712639527314506*^9, 3.71263954491553*^9}, 3.712639577141568*^9, 
   3.712642465086657*^9, 3.712649439593525*^9, 3.712656498775898*^9, 
   3.712660085136436*^9},ExpressionUUID->"370b12e7-0947-4ef5-ba43-\
d123715c60c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4.980766242049094`*^6", " ", "+", " ", 
  "3.1502559392905188`*^9"}]], "Input",
 CellChangeTimes->{{3.712639354452578*^9, 
  3.712639363627798*^9}},ExpressionUUID->"0f2afe0d-3514-4515-878d-\
37e5736d5f0e"],

Cell[BoxData["3.155236705532568`*^9"], "Output",
 CellChangeTimes->{
  3.712639363963974*^9, 3.7126394177427683`*^9, 3.712639479845529*^9, {
   3.712639527323556*^9, 3.7126395449377413`*^9}, 3.712639577172655*^9, 
   3.71264246509317*^9, 3.712649439666686*^9, 3.7126564987998466`*^9, 
   3.712660085280183*^9},ExpressionUUID->"60f38a83-4f04-4da7-ad6f-\
9abf49c17232"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initial state", "Subsubsection",
 CellChangeTimes->{{3.7113405719102716`*^9, 
  3.71134057401019*^9}},ExpressionUUID->"27086003-bba5-40f5-9ddd-\
a9a3b6912713"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"eig", " ", "=", " ", 
    RowBox[{"Eigensystem", "[", "\[ScriptCapitalH]NV", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenStates", "[", 
    RowBox[{"0", ",", "1"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"hamiltonianSpectrum", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "8", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenStates", "[", 
    RowBox[{"0", ",", "0"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"hamiltonianSpectrum", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "7", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenStates", "[", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}]}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"hamiltonianSpectrum", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", "9", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.711340575038134*^9, 3.711340602985878*^9}, {
  3.7119303265154877`*^9, 3.711930327115354*^9}, {3.711930371440955*^9, 
  3.711930413465538*^9}, {3.711972661671085*^9, 3.711972667720339*^9}, {
  3.712402801138175*^9, 3.7124028065120573`*^9}, {3.7126383873203287`*^9, 
  3.712638388394758*^9}},ExpressionUUID->"1327cfbc-7616-42da-838a-\
cb2586047aa1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"initialState", " ", "=", " ", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "9", "]"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"0", ",", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"initialState", " ", "=", " ", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "9", "]"}], "[", 
     RowBox[{"[", "5", "]"}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"0", ",", "0"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"initialState", " ", "=", " ", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "9", "]"}], "[", 
     RowBox[{"[", "6", "]"}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"density0", " ", "=", " ", 
     RowBox[{"Outer", "[", 
      RowBox[{"Times", ",", " ", "initialState", ",", " ", "initialState"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.712536005476406*^9, 3.712536018701215*^9}, {
  3.7125360574764843`*^9, 3.712536067727099*^9}, {3.712536109827025*^9, 
  3.712536129977193*^9}, {3.7125488657036257`*^9, 3.712548874231711*^9}, {
  3.712619948967965*^9, 3.712619951040287*^9}, {3.712638463946906*^9, 
  3.712638467170867*^9}},ExpressionUUID->"5cbf125c-4d84-4f84-b077-\
836b958698c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.712636419352935*^9, 3.712637647988657*^9, {3.712638133047228*^9, 
   3.712638157267991*^9}, 3.712638304646553*^9, 3.712638468512383*^9, 
   3.712639417771124*^9, 3.712639479873396*^9, {3.7126395273561*^9, 
   3.712639544973472*^9}, 3.712639577210576*^9, 3.712641944783691*^9, 
   3.712642465127179*^9, 3.71264943979386*^9, 3.712656498835382*^9, 
   3.712660085356152*^9},ExpressionUUID->"1097bff1-ee36-4a2a-8620-\
c1f57700d018"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.712636419352935*^9, 3.712637647988657*^9, {3.712638133047228*^9, 
   3.712638157267991*^9}, 3.712638304646553*^9, 3.712638468512383*^9, 
   3.712639417771124*^9, 3.712639479873396*^9, {3.7126395273561*^9, 
   3.712639544973472*^9}, 3.712639577210576*^9, 3.712641944783691*^9, 
   3.712642465127179*^9, 3.71264943979386*^9, 3.712656498835382*^9, 
   3.7126600853571377`*^9},ExpressionUUID->"5009710f-ff6e-457e-bf0d-\
a3891b0de3ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.712636419352935*^9, 3.712637647988657*^9, {3.712638133047228*^9, 
   3.712638157267991*^9}, 3.712638304646553*^9, 3.712638468512383*^9, 
   3.712639417771124*^9, 3.712639479873396*^9, {3.7126395273561*^9, 
   3.712639544973472*^9}, 3.712639577210576*^9, 3.712641944783691*^9, 
   3.712642465127179*^9, 3.71264943979386*^9, 3.712656498835382*^9, 
   3.712660085358055*^9},ExpressionUUID->"3ea55cf9-6b11-4867-8e7e-\
cc0e956636ea"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"density0", " ", "=", " ", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Outer", "[", 
       RowBox[{"Times", ",", "  ", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "9", "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", "  ", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "9", "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "]"}], " ", "+", " ", 
      RowBox[{"Outer", "[", 
       RowBox[{"Times", ",", "  ", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "9", "]"}], "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", "  ", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "9", "]"}], "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "]"}], " ", "+", 
      RowBox[{"Outer", "[", 
       RowBox[{"Times", ",", "  ", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "9", "]"}], "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", "  ", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "9", "]"}], "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], "]"}]}], ")"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.712641644935429*^9, 3.712641733385333*^9}, {
  3.712641764610442*^9, 3.712641789285441*^9}, {3.7126418985491247`*^9, 
  3.712641934861072*^9}, {3.712642024363225*^9, 
  3.71264202946137*^9}},ExpressionUUID->"d9116843-6cb4-4b1e-b118-\
90179edfe7ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Meta", "Subsubsection",
 CellChangeTimes->{{3.7113304067517138`*^9, 3.711330407126807*^9}, {
  3.7118636947982388`*^9, 
  3.711863696244182*^9}},ExpressionUUID->"c3b95d07-e9c4-4f85-b6c1-\
593644d93420"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resultsFolder", " ", "=", " ", "\"\<results/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fileNamePrefix", " ", "=", " ", 
   RowBox[{"\"\<nv_center_simulation_NO_SPIN_BATH\>\"", "  ", "<>", " ", 
    RowBox[{"StringReplace", "[", " ", 
     RowBox[{
      RowBox[{"DateString", "[", "\"\<ISODateTime\>\"", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<:\>\"", " ", "\[Rule]", " ", "\"\<.\>\""}], ",", " ", 
        RowBox[{"\"\<T\>\"", " ", "\[Rule]", " ", "\"\<_\>\""}]}], "}"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"comments", " ", "=", " ", 
   RowBox[{"StringRiffle", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<Pulse that acts on both nuclear spin and electron spin\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<B0=``T\>\"", ",", "B0"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<Frequency Resolution=``Hz\>\"", ",", " ", "pulseFreqStep"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<Pulse amplitude=``Hz\>\"", ",", " ", "pulseAmplitude"}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], ",", " ", "\"\<. \>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7113304083285027`*^9, 3.711330448428396*^9}, 
   3.711340006107974*^9, {3.711833081216317*^9, 3.711833084287239*^9}, {
   3.7123991080447073`*^9, 3.712399113856669*^9}, {3.712399216244841*^9, 
   3.712399217945348*^9}, {3.712399856524021*^9, 3.7123998759548063`*^9}, {
   3.712399953323763*^9, 3.712399963248275*^9}, {3.712400425950419*^9, 
   3.712400446326507*^9}},ExpressionUUID->"312739fb-26a3-4bb3-a63c-\
5a7f38798bd4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rabi Oscillations", "Subsection",
 CellChangeTimes->{{3.712635606073764*^9, 
  3.7126356107055683`*^9}},ExpressionUUID->"311b0f44-24b8-4d26-bdd0-\
85b4f78be8e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"res", " ", "=", " ", 
   RowBox[{"SolveSystem", "[", " ", 
    RowBox[{"tStart", ",", " ", 
     RowBox[{"tEnd", "/", "5"}], ",", " ", "\[ScriptCapitalH]", ",", 
     "3.155236705532568`*^9", ",", " ", "density0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rho", " ", "=", 
   RowBox[{"res", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"funcs", " ", "=", " ", 
    RowBox[{
     RowBox[{"Table", "[", " ", 
      RowBox[{
       RowBox[{"v", " ", ".", " ", "rho", " ", ".", " ", "v"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"v", ",", " ", 
         RowBox[{"IdentityMatrix", "[", "9", "]"}]}], "}"}]}], "]"}], " ", "/.",
      " ", 
     RowBox[{
      RowBox[{"res", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tf", "[", "1", "]"}], " ", "=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{"funcs", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tf", "[", "0", "]"}], " ", "=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{"funcs", "[", 
     RowBox[{"[", 
      RowBox[{"4", ";;", "6"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tf", "[", 
     RowBox[{"-", "1"}], "]"}], " ", "=", " ", 
    RowBox[{"Total", "[", 
     RowBox[{"funcs", "[", 
      RowBox[{"[", 
       RowBox[{"7", ";;", "9"}], "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.712635613288967*^9, 3.71263562393851*^9}, 
   3.712635806912725*^9, {3.712635837137926*^9, 3.7126358627862988`*^9}, 
   3.712635909361998*^9, 3.7126359445857763`*^9, {3.712636025358945*^9, 
   3.712636029135056*^9}, 3.7126360993847237`*^9, {3.712636267333879*^9, 
   3.712636268333147*^9}, {3.7126367426347637`*^9, 3.712636743358899*^9}, 
   3.7126373170387573`*^9, 3.7126375151891003`*^9, {3.712637674590487*^9, 
   3.712637683289214*^9}, {3.712638313528495*^9, 3.7126383229979258`*^9}, 
   3.712638484697259*^9, 
   3.712639370828561*^9},ExpressionUUID->"c31966ae-11c1-4aa1-af5d-\
81dc6a8edd05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", " ", 
     RowBox[{
      RowBox[{"tf", "[", "0", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "tStart", ",", " ", "tEnd"}], "}"}]}], "]"}], 
    FractionBox["1", "tEnd"]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"tf", "[", "0", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "tStart", ",", "tEnd"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Full", ",", " ", "Full"}], "}"}]}]}], "]"}]}]}]], "Input",Expr\
essionUUID->"97eaf6f2-2873-47f6-a3b8-96c65aebc395"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "5.5476889581879815`*^6"}], "+", 
  RowBox[{"1.2190758887693988`*^-8", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.712635735171773*^9, 3.712635830890457*^9, 
  3.7126358890249777`*^9, 3.7126359283209963`*^9, 3.7126359786654787`*^9, 
  3.712636065505617*^9, 3.712636315532262*^9, 3.712636669231052*^9, 
  3.712636791916293*^9, 3.712637337791671*^9, 3.7126376657074823`*^9, 
  3.712637743107635*^9, 3.712639588718937*^9, 3.71264246700065*^9, 
  3.712649441980365*^9, 3.712656500695059*^9, 
  3.7126600876915417`*^9},ExpressionUUID->"7bb87e30-1836-418a-b4c7-\
6fbddb856d84"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
FRjTd3/66huE/w86youI
       "]]},
     Annotation[#, "Charting`Private`Tag$750425#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 
      Rational[1, 200000]}, {-2.7737742068748478`*^7, 0.9999999999999208}}, {{
     0, 5.*^-6}, {-2.7737742068748478`*^7, 0.9999999999999208}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.712635735171773*^9, 3.712635830890457*^9, 
  3.7126358890249777`*^9, 3.7126359283209963`*^9, 3.7126359786654787`*^9, 
  3.712636065505617*^9, 3.712636315532262*^9, 3.712636669231052*^9, 
  3.712636791916293*^9, 3.712637337791671*^9, 3.7126376657074823`*^9, 
  3.712637743107635*^9, 3.712639588718937*^9, 3.71264246700065*^9, 
  3.712649441980365*^9, 3.712656500695059*^9, 
  3.7126600879544487`*^9},ExpressionUUID->"c2542c45-72f5-4555-840f-\
3c6b3dd410d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"funcs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "tStart", ",", " ", "tEnd"}], "}"}]}], "]"}], 
       FractionBox["1", "tEnd"]}]}], " ", "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "funcs", "]"}]}], "}"}]}], "]"}], " ", "//", " ",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.712637413812092*^9, 3.712637478018263*^9}, 
   3.7126376863396397`*^9, {3.7126377878709927`*^9, 
   3.71263778808998*^9}},ExpressionUUID->"db3cb77e-a6ad-4569-85a5-\
bcce97939264"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "13980.231525641198`"},
     {"2", "7837.410808077674`"},
     {"3", "37948.79263951918`"},
     {"4", 
      RowBox[{
       RowBox[{"-", "3.938682920131005`*^6"}], "+", 
       RowBox[{"1.1704223041577143`*^-8", " ", "\[ImaginaryI]"}]}]},
     {"5", 
      RowBox[{
       RowBox[{"-", "1.5414638579518478`*^6"}], "+", 
       RowBox[{"4.083008122522273`*^-10", " ", "\[ImaginaryI]"}]}]},
     {"6", 
      RowBox[{
       RowBox[{"-", "67542.18010512898`"}], "+", 
       RowBox[{"7.823503386461743`*^-11", " ", "\[ImaginaryI]"}]}]},
     {"7", "3.926276450943441`*^6"},
     {"8", "1.500245380383259`*^6"},
     {"9", "61401.692100144755`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7126374805028*^9, 3.712637769132399*^9, 
  3.712639589432322*^9, 3.712642467318338*^9, 3.712649442460767*^9, 
  3.7126565010584593`*^9, 
  3.712660088274041*^9},ExpressionUUID->"1d9fa811-b88c-4599-a44a-\
0db25b4272ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fullPlotlegend", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<|1, 1\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|1, 0\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|1, -1\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|0, 1\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|0, 0\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|0, -1\[RightAngleBracket]\>\"", ",", 
     "\"\<|-1, 1\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|-1, 0\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|-1, -1\[RightAngleBracket]\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"funcs", ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "tStart", ",", 
     RowBox[{"tEnd", "/", "5"}]}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Full", ",", " ", "Full"}], "}"}]}], ",", "  ", 
   RowBox[{"PlotLegends", " ", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"fullPlotlegend", ",", " ", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", " ", "12"}], "}"}]}], ",", " ", 
      RowBox[{"LegendMarkers", " ", "\[Rule]", " ", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.2", "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        "]"}]}], ",", " ", 
      RowBox[{"LegendMarkerSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7126361048332863`*^9, 3.712636125984138*^9}, {
   3.712636828759954*^9, 3.7126368293343143`*^9}, 
   3.71263881554981*^9},ExpressionUUID->"091cf1f8-1ff3-4ca7-8970-\
c75e314992d3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUl3c81e8bxpURpYiSUcrMSqVE6ApRVqIkq0Ky996OvTnOsjnHUYmGrPjG
qVCRkminUkpIUkYy6nd+f31ez+vzzPt57uu+3lLOfsfPr+Tg4Jhbw8Hx/2+i
fUuV7oLIgftPWy+8MObQFpUNbXohPHvAasqXcmlWERf6Z+5WCXNjI+fDxa8x
DgD5moJrqQD6vffcDhjxwIRiw4M84Y34vvkd1yLZC5qr10f524iDQ0XD+odR
FJLHfVSPlW4FYW63gNKfFHic/zIlEiCN3I6L9N9XUpH7nGySIiyHz7dWyx05
kIUmQ/3K2cbtsGzdlbHHgYrBxqllFxslEIPNv0ZF52OlfPmpZwsqeGyolGXS
Q4MC7eiNQ6U7sU/28UWxsFJs54xNfr11N2jKHx7a6TGgpX1SbX2AGtQ1+xMc
8sthHqTywah9D87lP+fawMWAUw1nFkFYHcslBeUvz1UiePiNZrPLPuwOTV+O
2MREmkTdlx+NGrD3Ti/ujWag+EQ6afuq/VhSrM/aLFSJa5mOB8/aaGEzx/rx
+jEm7nZoTNAua+No8lX5eXc6ni2uK+xd0IFFs9nrmFo6vu4ZMeQxA079nNt9
NIGBBa+2XwdKDyJcXP5X9bti8Bx/+EQrTBdZmYv+633yITipfvHFVj0E9nUz
f/YXQDyDER3YpYdDPmu2v7GgQFZ+7Yl1AfoosZleKcybCdX2cMVqsUMYGJvd
y3ktHRpnPv8zbD+Ej6P/bN6EpkB34diLj54GGBy77LR/PBQmtFtXYoQNsWzS
Imuk4QUrte2JYq2GOL+CT8pvowdO95JsG10OgxavuLA69ChcPf/utFx7BFOc
a4S2iRiw/Hk8eb43HsHKEzP0GzVHWJEVzwfTzhjBN7V/4VqQFisRevWyq4xB
eOT1w8vPAllvrqTfuW6MFiGZWI4Ce9BCRR0dbEzw4uOcWmzpOdCFkvbNc5hC
iDH25Gh7JC5f+8FPuWyKZvqNAbuZRNSZ2A/vPG4GxrYvr/I/JaJ15H5Lz4IZ
au3jTWtIWbifoEZ0Yx5FfaJz3pa3FPRJlrlympljTYI3av5S8OY/vgPlM+ao
EfTo2eVCw7B1iLB26TG0xYi1CliUITRiKvibtAX8HqYQn+nREXVE3nF/mAX2
tFKTp1aXgbDRwTS1xwJ/F39s12lnIHk4b9/zrZZgcHE5vFaqRMaNB1IywZaw
/10n/+knAzlxy/wBXZZo6I1u6WK3yUf3zLM2H8f1Q+Qp0fpKFEh4DPMHHMdT
/RiD1X8qUDpW1mt37zh+10eoOmrTUXHzWUuV2AkEjQdxNtczcDF59YU5nxN4
puWTcPogAzUndIkG7Seg47574HheEWqlQqNIIlYoOVNnoPSrAA0/alyHPK1A
eMb750B1IVraPlqq3rZCyoaxPPpaMliZmw5EC5+E+3qVa5atmdg8EfTWde48
OF/ZeGz1LgGF0AAhKVeETCntq6VRsWbjLKPN1BUJmaE1Cw5EJFxW5/YIdYVh
kcrE/vdELBwIdd/AcIUNwX4o5Es6Avubem73uOJbh9IfwmwUxlx/q3rNuaLg
9Np1urzhcFzUIIlIueGzcecFpy+BeJUbPnvX1A21OU927pm3gIVsi41PqBsC
0h35uB9qsB40/7klynCDftD6xirWQRaOam3t7HHD5pKR31LGxqymj5EJfnNu
eFVT92dZWoelGnrri7iUO/id44/6d+5lXVi9ZHTf1B1LZ9cuD9y2xuZynSsB
oe4w2zH/Ss8+GJQ9MQJbGO7wuVChI68cDv6utsCuHnckvveOyO2KQaLD3+dB
c+4gRatmqHlkYmEK+7dKeWBX0kGZPbNEBCbHlTw09UBlodicAI2IcbE7/0JC
2TrJcrubl02D0zWOc1IMD1zY5Ndr21qCV/p69x/1eID1+zNdUbYYFi/jFcPn
PHBih4KTFKkUXV7tWTJSnjioWJ4tVF6BgxycU72mnnh7P5MQJF2BJsqhE5Gh
npi0zWnje0eHqmJSkxzDE9vSEs+6f2TiYlun2NMeT3ykrL7/hK1vW45zx0TP
eWLflp0B4YcZoIwYDm2X8kKYa8hbMlcF+KNSDg2YeuFiKF4+P8ZEksCDi7Gh
XlA6rBb9sakci8xVq5UYXtB5m/Ox+VcxAjWNfJ73eOEHR4RK7PYyjD9K6yPM
eYHL+mRsvGYhnJ2696hIeeNf56BbkR4Jr2f58l+aeuO76PKbJH0SLDJMFhJC
vTGzy65/mJ+ILsnM06oMb3Qm9wUY30iAbn3Pndc93jj2+pmAeEg0bh7hl02e
84bfh2+cr6wioTpolrpLygfVX/pvrF/viov+2eNvTX1gIJJ9cF/rbkhy9x5N
DfXBPF+Uua6KGKiF626oMXxANLuyp/+MHotf9diG9z0+qOpKJCooHGElteeG
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
ML3htouoX10BZw45BV49R9/rGXMh47By1kYiGnevecuKmnLBO6vSQRvwg0Rs
rHH3Pi5uLhArre/xxTF7kl+ROReZzQ/TZo+54Mq6Uk6QBRGPsqOC3X1z/Pen
sXMfocP36vhp+avuxb6nL+cq2BL9uNO0EKqHUMD9qjN8mAuzfsbN+59c8TFQ
6EyVAxfUZ+pekt3nsMVcLjfpOBdJmqbK35f5I3bl+iaHk1w0mmdnb3ONRec4
fmo4czEnMP3zstsJWN1su2b6DBdH06Tea04kwafQ3faRGxcJlqRtU5dyUe8R
Hks+x0XNtk0XVAsKIIWcinPnucjetX/4s3gBTsgUfdh2gcjPRd9ooRQdJYN3
FosTvB/MmJfhQfj637efmrwJIPLLiwo6XMqAeepH/+IgLtK6Pz77Reg88skZ
7qVLRL+32qf5GPEwrL2oyzyci1itB9ECQifpz1cVXhHFxQK98pt54RwkvDLY
8pXwQUnFeslbnvDQddXC5U48F8cza5W2E7poTeTpvNQkLmZOMiOSElnwOxTU
fDyVuH/D6sVHtYg9uzbt14YMLiTHulesfcbAommW6p8sLhh0qbbNsyScbLtl
15ZL4E66a1zBi4JS5uM4WgEXJ33PFJGJ+fjj9+7meTIXXv53Tx4/m4EDe38N
7qBxoatq8m1+ezooyxbILWRy4bJ/UuJYQBI+j6w07WVzkR+05UCo7SUYNOhc
LOVxcRjO9YLUi0jM3ccPL+Ki13XPdh0bX7x0c3xhUcyFeo5NU9ujo1hr6Dtf
qZSLsfSFJy6kmCNgYcLWsWtclJvtuRu/5gCa+imudTeIc2HDhrPkY5C9eS0/
4xZR7/DTWXM/u8A5sfn+ySou4no+XA7uPIvyY68ntO5wMXn0YbJa8CX82zi2
9l8tgf/cPNdHRnGwnDPPvqOBwNO5mza3feJA71qawGzi4p95r/BgfzpGijQr
L7RwcUjOr+LjdB62hxoN7XrERXicpcG2iDykWNrLS7dx4ZPlx12mSsLr1Z57
+9u5sKtfre9Vy4TGRGRg+TMuKF7uU0l3GAh6mCeI6uJibb7Umag4JlqoV15a
dxPz/Csi42siF3IX6kRWv+HCvMRiXfEwBy7Gz/W+93Bxbl91RiTh6yrkht0a
33HhfFZMcbMDD3M//ynIfs9F6cXTs/+aiTlLlbfV/shFmPe46dwWFhS1Ni96
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
l2jqr/ZmQFIhvPHFNUKff/9U6YnHQkDzS/nFGxQkG0zZ1uVE4OeRE3GSNykI
VTYZensxDCMnHp1raaLgkh+lb3W+N3o9dh93bqFAMO99ELfOHi2XqtT57lHQ
t6M++pX1CTBTV0tQH1AQXK06wTthgaKyyH9Gjwj9ai2wunbY4DJ7YmSijYJm
xgbdMn07BLTYt2d2Enptsq7Zk+aC091tHLUuAo9VgzVx34Ng8m5P3oseCl6w
DkuUboqE9vSV0It9RD069cjsoUgUtvGKOkn2U/Aj3j77u1wS1orGHGoZIPB9
pVGz7n4WeOW+Kzq/oUD+i1Q6h5SF77sdhfneEvgov1jcaZKLocOds5R3FIyx
qj8KPSxBh43Wa6MRYv/s72s3fS9Fgzv1zsQoBUH61y1ej5Wg5uLamsxxAr8X
KnEK+0jISY5LUftKwaBC7z5PsSpElUz7vJikQLPmVJCcHAnLNDVW105R8Hyb
wlRODBnpfRevpv2gwLtOf4v9h2qI+t42O/eT8OepJxZXVpNRsnLR9MHfFHxa
9eX4GxoJMvSD2dILRD7yfcfrA4j+5nCi6n//iPoX1TxC1yXqzYeO3v7FVOi2
7DNkJJeiPnKVfx0fFa2bznr8yiqHtqSFSAY/FRe+tpT1JBXifkN+nccKKv6+
0okufpwNI6tXFoeFqFiX8ErrnW0Ouqc2/ti8mgrRF7fS/S+mwSb9dO6CCBXH
hSTmKjVjMKR4RX1gLRVxjNdLN4REw/XRp75r66k41fKDJ5Ydgi8uSoGZklTY
Zl3SPxfpCj8eHzEvKSpEDlgHuB9wwnxp3XUDGSqmFSs3Xtxli8i9P622yFHh
y0i0O2higaUvtOb+KlDhubB6bucmK6T6ReS/UqQiU+Wl0JErpyGy6p5GvTIV
0TXZom/nAlHM4OvP2knF6zef07MOXIL0EcPg82pUGOrVP01bFgXKSOo6Qw0q
7PNmHsXtSoVKdPcN2b1UhAssasnozMS+mzbzr0HF2tM1QXO2hbhnXVJ44wAV
OX8Cld9vI+rFzJBmzkEqHotTv34oLkZXhsyAtwEVfc8vyl6Nr4S1kttFIyMq
jqxfWK3OIWPwMW29/DEqtnknJ+k9rITrmYnGRabE/gZf39beIuPzol12g+ZU
iH35/i2ptRq+5QG/G6wIPL1kpk4PkTCv1VCca0tF824P1VpJMiL6/2j52FOh
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
4p+tXBgOZLKk00rwP2P/wZA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$750747#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUl3c4lf8bx2WlEoVUKLspJCH0TkoJCSGh7L333ntznKPsvQ8OjtFARSFS
CaUUSYqESgj1/Z3fX8/1ua7n+dzzue/XW9DcRceKno6O7iwrHd3/nxFGdyqU
1rhPt+6eO2V57r3iHhHv5hHO36cVUt137KAPR+ng0sMKTibQUZ0qCE35QHrt
IetcdghNq553WKnC3GFqdxrnLnT9ZY0I3FwHua07A1wNeGBGDUv4PlaNqFkn
8Su5/GB4JvhJzK0YdlafF7ndhOB3PJFJ7j0BKcPpatGcolBPbXJSMU5Es4py
ye+mg/iksiO7gLkAY02Lfy0NjiBgn+a/b/Rk0B/Ivza0JoYweXVKwmADDmVc
rj+XK4FnzgFV45uacZAhOGqU/ziG1toYQi2pkFfQk9rpJgWJKRsZwXNkaHqI
jas+OgEJQfSG9xTDrJohMZTzJKr6t7nHl5TA89NbuVZLGegMTNatxFUilrfh
80KTLAJKPjHlE+uRfTWOcHDzKbhWNA8X57egNsH0jImBPOx+FTzJSmvFw07Z
uYxKBQTG2LD2RzZiaJ0tc2BNEUJPX8dU7iTjy4lpFWYN4FTAW/crzcVYc2j7
eTr3DNTfblcU4c0Fs87T5/I+StBIX33Yb1iMHfMny0b4z2LxKfffFtc68MQX
Brr3nIWok/yjMeZGiBzYfpXNTRl+2y+6kt/VQ/yR7+GqveeQ8jboxksGMmRv
Tv2n8ugc/Hdc3X4zOR9Ka1dGPtqfx4ftPXUDsWFQy7hHDuJUwe22OTrRSU/o
Sh2M2HtfBVqTO5gc3Im4MUC43mR5AUFpLWa7Q0pgbf9PQnv7RZDK2d24vlfD
ldme+XvTRYipaCtI/6mGf9HwWOxNVehGdwzw/itGBM42imy+hMN2SrbkGwQk
viXHPai7hBYZn8pQUztkeO8xNTZQQyzfri/3ctxRwBEps0qnjpmvAldi6zJR
WbvASqxUx15HE7h9rESDmtEnCR0N5CQevXW8lYL700/u9K1pICLhmLeOaT2e
hEul2hRfxg/+unfKp2rwYn+eNYOGJn5eX3w9PFmIt3e3nM5f0oSTYX2l/ZcM
fNL34lTIvQLfzytqdt0F8PZb9PwmpAVZ/n9mcb+rEHDxgOkpHy2wTwwru6U3
IHSXsXpMnxYovu8P37ZoQdSnNJlhfm2YPPBndKhtQXx9t6CwpzbC4+4Rv07X
IznkL6tbjza6VZND+IsqkH75xGo7nw6Oys7YSmwpxW1eu0+sbjqo+tXI1JZf
ityZvAHDxzoQ6HyrLJJDRlHL0J2KvVeRdbG7QqqOirKoraXLTleB2Bu5u7xb
UH1VKfX8o6uwieea1dhNBUXQO4DArQvi3oefuVNqQF2otp6w10X+DOny1w9F
uNP2UVu8QxesAjfZrr9MR3vC7tOBnHo4LBx6wkGUhMX+f+EfnfVwz+XBhOyb
UgixTfdceKoH72i7JvW5WuheecZGFtWHUf2fcOmFOkSnUnV3hunj5sfZR9f4
KtH6MjvLe0wf9NyT0+uBtzDLETHxTvYayMXPA7vem4BP1/7A2fRrMH7+puRz
7w1okrQdy+avwULmbOvxfiJCR+QatqkZ4APffb5n/8rQsFtg1bXUAJEGXxoD
MmowZbAZI3TX8YUv737o1SpwZ81HKBhfx/5/XTWjbIVQfTfcW9ByHQyJP9ge
GCbAn6+NnZnTEGfDVCOyI8NBvlGi5+BsCJ3IDvawsTy8z0vIftFrCGty5al0
+RqwTbh/PClqhMKE53+q6RuhJGh4MDvUCNdU43YJBVLhbn7WiW7MCKf37H9n
6kZBSfGhRitZY2jRPbyy0VaMkSn2P08JxlDZYaW67WohWA6sQHLeGN0sbM7b
d1VA3uZDJOnSDdwpJwbOPqLAseLx07WSGxA83f+5dK0ZeTPkHaZ0N+H6Uyy5
eqkVL44Q9R8b3cRjft06Zp1G0DsG5BxpuYnLDQPFc3JVkK4xn0zhMIFcVDKj
sE8xrOcvHfrtZAJrHe3SM96FuC1x3Nmw1wTEC7r6J85XwUqO9a0Jhyn+RMs1
z3o24t+b/wI5lEyxsPwfb9ZhKm75/eJ/7GSKGaPH061CFEjyfHnkk22KeX/v
5s6gEvTefWt1pNcU+Tf6qu0yk2FuNMDyftkUfJrRAbK+wVhff1idImIG79aR
d5sDb4OY06SprGOGw793vPaVLsex05U/lkLM8K845J6RaA2evM8hlteYgenE
qY1v5lUwCU6VNXxnBk/S5lXezDys7o98y7rFHIsUD7UNvWCkdfgEdciYQ0tq
vl67Rrn9iKmDgLulOar+Bi9n7YlHJ51JpwjBHEFXz7DN0ea5caGO9esO2vsM
uC89W4ulsxe2xH83x9K+IxyDuylImjxFVuS1QENfey69cxUORBy7sqBqgXue
UY/5ffLQLiz4s9DbApWL3lWHrdJwrYuLpFtiAS97KksFXwEWLVnkNg9aYJ+9
zi+zeTLimDbe3vnPAoKM0qv0dxshVLYQ5HjMEtq8v3OHz7Tg3oVPAvxGlnjB
RXloXEuF7peRzpexlriaJq9jRJs332OeWkc2W8L0vLa1uUQJog+1b5GdssSn
+YDnd6TLwN9bT57ZaYVvR5+EBpeR0WpXeiXnjBXU/atfEO5Rob0186emkxW2
WxK+3XVuxWxVImlTthX+fZb2OmRDRYR6qBy1xwoaG/NPRfaRwTfn8c562QoW
Qq89y78XghhKBYegNVpW+Nrfa93Ctl2/C9vUrdHbV6ua15qH8MqTTHbe1tiy
U6dbcX811k5723IVWiP5VOX236r1cB9s7uvos8aXtk91F8somLFeEXdYtoZm
z30vvzeVMF2XJXAL2mClt+Or9u5svEnx/f1Q3QbfNJr1ytI9oCVyx8DJ2wZk
4UOzxebX0N36596eQhvwOvBpV99NBS7L83f12UDuhUOmNKEYzR/9w12WbRD7
QaX8/Xg1xL3vfeYRtMWJMh6B3olqlG7dUH2ibgtX50s6AidLwJevSHbztsUh
P3n1PxeIIJ4IYt9XaAtFtt361k+9wdrT5t7TZ4tYFNe8lwhHhPG/YY9lW4QY
8t78F1uAtUWc4he0wxL/n/CbaTVwjwrJeapuBy536oHDCg2Y3fvgPy9vO3gf
2bY62d8As1o6C8FCOxyWnJDIoqvDG+WzT/r77DB41r2fPFcErddhh32X7eAk
0LhNyzoHPQ6PEoUF7WHlz8znMVWCM3QMiwPq9njk7X1AKbYWzcRzV/297cGX
7fhI0JgK8cORzaKF9vhb87Wps7oVZW1de1/22aOY/fd8P1cL9ukwBQUu24PO
Yjo37QYFxGmViYOCDpCP2b+4tlQG1oDoc6/UHeAt68yb8qIYkezdZcHeDuhp
6qGP+lOC9eLNW48UOiCpn1Xu7elauMupOg33OeC/i6u5yXRNmO2PfRG67ABu
3bNPohKaYG7We0JM0BGyN7yWOvjqMfp7y63X6o7gSnqe06FYDq14tbVwb0fc
NHm88Wf1Fnr2J9wQL3SEkeDPtt1PoqHU2PdgtM8R6ZtCxDvvk9BykVUkatkR
Mm90a08tlUJ8TCNGUtAJAaIZQSnKNShzTZp9p+4EzqB7H+2qa7CfaeByjLcT
ygXr14+mlIGUyVYvVegE98dRrsNjRLCKX+H60OeEc/q7l8plTRH5KMUnbtkJ
qduPLdDLHsSG/ou30oLOyFL+MkDRTIXHtx2YUHdGgh/BdfhfCWZDtAsTvJ2x
Ren76nO6WphzERhlC51x9GBEqo1SLd5WDNpM9jnDere9b4JiBbRPc/YlLTuD
0EYsHwnORc/Lq+KnBF0gL3POoHU5AUrWxLQpdRdE7S3r7xEionVtaCnF2wWD
foq6PvVlkEjZZaBQ6ALeqY7nFMF6lAnr35vuc4E9/ymu5CEq9rdm7Ccsu8Ba
ZVvw+/EmqJV9e5C3wxU9OlO1Ban1iF5McF8SdcXwt+Yhd5ThkbyYiJqCKx5U
+n8Nai3Cv8j+4XwtV8h8TmG9nVmOHqK9ZbyVK0Syaurvvq8FoYTll6e/K4Q/
nCetvKPCmFoWZpLiikX/4rb6z60Q7Tq/Q63EFZ02fWqGN5ox/2oyT/qOK22O
quDFWB1aP4Ue4x9wxYTp5bKXXGUI/7X//pZPrrh/nnBVi64AGgxtaksrrnAO
5ddsjMwDN6fR6AdWNxxGb7KJQgXGhf7Y9Aq6gdvMv3EvpR4VUreWG2XcsPvT
qMNL2v/lrnwyKk/dDVKBK+YRCXVQ1HnFGWfqBqbn8RUlNqVgNncr8vByg0bw
88eFZgS8cGM/fjPeDf8E3waFfrdDZlhNh2q+GzK0yirPWYfDPE1d8wTVDRST
vCvhNB4XK5wZ29frBr2yYYso0wosU2IcWD64gfTbqHv7LBkPHoiu/fzphoiO
tw9mafwT/6Iz9v1md3xw2776KToPVyfMdvfwuWP8cHWPtFQ0+Bb/K2047o7y
gMT89TxTTP+XK517wR2qim/oK59Hg8Ku2Blj5A6I5TwoJxbBn/+ttrurO5ap
23Rfp9TivITvhHEUrZKe8dNfaHpk+xlul4tZ7jAwqjfhfE3BiCb17/E6d1ht
lnPeQ9v3BTd1Evm63KHZ1bk4NpgHe+dFns2j7jDs6eT6dP42pIOTK398d8eY
kWDiZt8S/EsSkxuj94BUdGtpZ3gdenKfPnmy2wP998omn9lTQaix1asX8wCZ
7o7At02tMGpjnso+6wHmhId+og3NEHlW4h6t7wG2Z79HDh6iYH5MeZObgwcc
pXYNEYTK0Do3kWIU6oFBC6HbdwtKEL4RvP8CyQMNo0niDSrl0GDdVyNZ5QH3
/Y3jeap14Oa7p8Db4YHJJ5qvO8OaMHH0+lOmIQ84xzGp++xqQaXCisHiVw+U
u9x4xl5O6wd10pe3fz1Qde3KosuDSiganfB+zOEJdiWnu4+J+WB2eMlIOegJ
ObWJYu/uNLzwd0nPUvTEq4pk+sD+DGTFbxeK0vaE8DnXatsLZbDMqqa4WHvC
/k696NWRWohXXTpjGOCJWAG9Lq7aOqzc+fLsfKonzHuL3E+/qMSD3ihjiVLa
+5bf1w/K5CJ+VPjb3rue2P4hiDf3hT90Zx76MT73RM4H3/OyuZrt+/+YsCx8
8kTN9Ra37PYIfGX5lzG66onrXwqv3xUoQP2eHNGu7V5ofrXnGFdvFfwPyVNr
hbxgoJ7z/t52Wj/IvVHOlPUCS6jmTSuBSrCper+M0PCCGcu3hyc8CvDmGpep
s5kXGHaZaBcIpKDIpmHewNsL01Enr6f+iYCDj1bQuQQvtAee/vrqZxboprIm
fxV6YYir3uGGNRkkrc8XS1q94HG68gvzTAOOtEnU6D73QpbtfyV2SVR0HPbn
YJr2goznxf3t2xugm9Hl07ThBUX3zHHtyTLM0LO/t+L0xr0o5Y17qQUIdrmu
zH3EG7smmeJEx8vAOVZc/kTJGy1m5lDipqBCdZ7V55o3rpBcPu12asLpJjn3
g87e2FZzUOTpnjsYFIx4/TrSGxSBvPwh7SbYJD9TjM32RuCdx5ZsTGRsrO0u
kmvwBtvDuu0EuhKk2Zhvnunxxn7hKzxDPoU4MER2zBz3htjOlwNfNMtwT2nl
5aVlbxwP/s6iGloPrZqzsmusPjhg1UJOiaXi897EnCphHwjB9XAM6uEfPbLJ
SN4H3NuvvHzGXw72XwI227R9YJUWt/ggiYQSE4f+ezY+SNZyuPXyhj9O9Tcd
dwz2Qb7Z3jNxMqkYkKO7xUfywXSOIMOVpmJYlKpt9Ff7wKVHKdBhuRqrO0lm
QY98oPfjkDVVnoyk4PEnx0Z98GuvXW5jSjGEvh0W+7DgA5F3eZFveJPRcs0z
LZnZF1ohTSbrd3Wg0dW+jH2+mN5Q2jUp5Y+PkluMF0744kKVQfHL0/nwzr36
MF/NF+tvWoJ7GGuwbWveAS0zX0Q9eaLU1EJBgffXBDpfX3xfetlO7qnByU9S
PyjJvtBb/PCMeUcpnl4J0jcr9YX7FSoX39kMmNzvvrfzvi+4Db+tfXt3C0uH
OAQfDfpCN/nCoYCsCsSRjKPdZ3zh2f0mMuVsA/bTl38TovMD++4dekUHm9Ho
/EPrFbcf3pKMHzNONdP0m0JzxDE/9H/s0BFVqcf7i9G80uf9cFL0iYZYdSnc
qS9Cpwz94Nn2kYXkV4LNgrzTRDc/7J2TEg4mVyInyUpdJdYPHvY1xsKX63F8
rY7yO88PO3rvbObiaMET67VdZU1+2BDbqsmr2AKjV+cD9Pv9kKY44bH2mYLF
MykTzJ/8oMrQ3P2UXIoo8qhKyx8/BNssWnWEZ4Nnr0i1zQ5/3N47JOiidht1
Uc479hz0Rxj39aCph6U4/7PVq+e0P5jE8sgTrhSM3mR456vrj7UuAXLRHwqc
+y4rHXbwh1tK2c7POVVgkLtdOhrmj+bTe80vT+bgdsnk1vjb/rCfbBG3CPbG
sZ3HXOXr/PHsEv9QDo8hHgX5DM8+9kfNCx7NU40EXJt9KJ895o9zb9kyudxK
MafPWqD+yx/kXaxbNDhrENapz7SxJQApsjnu+YU0vSxZaE8WCEBfxk0XRppe
rs759txYNgDzR/+0tdYmQTLCmBSnEQANiRZJi89+oNo9M2w2C8CDEQbof02D
nBYEPnkHQHz92sGgr2W4L1P3mT0xAMyeb1y5j9RDaZ9AtWJhAATil/q37mnE
Y4Y0V7vmABhw9cf+UG6A2uwmmYy+AMz++3Bu23YyBl64rz+aCIA1p1OG2XwB
dFo+PVj4HYCxC2WFzufzMZKrG823LRC3B0W+er2vgGHkY/VLAoFQk//Pv9q9
HuP2Mju9TwbiWsE5SflfTbDULh8pUgsEZ8PAcOWzVnyV3ZPz3CQQ662frOPz
muC4P85swzMQicpPhyX/kbHIuHbgcHwg6lbMj4Q0lsDzm/2cXn4gZhh8H79v
Kcbqy3f14dRA6OjonD0+UYbAVg2fut5ACIg4/b5oSMGm/DbFsQ+BqGi/I0ay
bkJ0lDj9lqVA3PdgdD5OoWKrY373yS1B2OmhoJXypBbJOjuSzPfTzqLBQpc9
isFxKkwn5UQQXqiuCG49no4M/p+776sGYUxC9MjewmjwMFu8/3ojCOeWO+8w
9N5G3tyrol0eQbjYPMvMRSiH8KvztsqxQWgfvdI7/qYGFXeajrnkBuHSsnp9
OpEMsYIDv7IbgnCVJ7BpSqkElOhbrT3dQRDbdu+n0VwqpJ1Ygn+PBYGQ/6N1
E+EqWq/6nRP6GYTfvQULa8ZWUJSfZbmyORi+z1rGO7qIeCBgNBDAF4yzO1+E
aGqXQ2Vzf3rF8WB8zFKvsvStw9PviteHLwSDsMzpunG1FppDNfvpjYNReZiZ
fjGrHIN390+JuwXjc4r7fEtCLvQLUyqNooOx9OobOWwiBW9j6Fxis4Nx+WCX
sKLALZg4u0k3UYJx9EKBpuxoBaZ0J/98fByMNlOLo2NnGmCrcLWD7V0wFOUc
tpQqNmFOsCtSYTEYdbXVx4eeNMGV5aSaLVMIisYFM1kb67E0X8pO4glBVprL
0E6XMvgNcw8/lAjBSbPaEs8QGg/fi8maPx+Cbja5k5uMKxBetGrCaxiC5sVR
j2zafmKOsxNVdQmh8U6twLkFKuJd3s56RoYgtG1Ib7G4FWz66pTCzBBMKxJ7
JOmaka5432ugNgRJCP3pIFqLPcLHFNY7Q/CDdy4b+0uQsyWP7tBoCOYnKw+V
9udBYJHtie58CLbf/K6z3psPnW8djx9sCkV7XWTWh52VIN70PXSNNRRR8UfY
fCfqMfJSMuE7dyiS22Ydai0bsEdl5nuEYCh6s55yf+SpgWFroRaPWCginonb
mwsUIeeoYSNFJhQbqzIsPFsSMJ7HwX3xbCh43+ic3SFvhWglQcsHGqGYvBy1
0lCdCPFJiYZTBqGoGNwgl2wtxkgE6BotQrGJQ2taaqQawaKXNcVcQjEjKl1o
2F6NA91GOaX+ofAnGa09iSnCgK397P7oULwZl+2aSE6G91Y/udtpoZCjuxp2
Y8EV+8kx0TtzQ3He2Y/NozEOTy5nDMVX0OJ9//SrQ1EJnBdKhBipoSi455Wj
R6aAO63RNagjFCekCHr5/9WjTepR+/LTUDDeaRYKeV8Hy6EXrK4jodgZH/De
6wBN33qPG858pOVn+Hb9y9FMUHfPV5h/DwUORYUdkSmE8Z2N5XeroYhcFq+j
2tSC0Wibih5jGH65dAx0q1NB3tibPsAehuUa/z/091qgm3fo40XeMJC27s6Y
S27G+hlZiYcHwvBm9/Zzvvm1KPqoEiQvFYa/BrxubPolUIvQ7Ws8HYYCKZf+
g3Kl+ClisffYpTBE6XM+M4qpQtYTN5sy3TBYOHdtc0hogLJtaBO/aRhG003f
rP1pxuyWFIZMhzA8SLzsc3IHjb+rc7U5fMJwX6zO9ZRBFU5dJucnhIehgldn
7wta/0zM3/3OmByGce76V05RaYhN7VUIzgzDpOXDlVs0vS0p9SZupSQM51W2
De/mqsCbV9OvXSlhoBy/++dMbx1CvX6Lzt4LQ/ni/tl9ITU4tJvR06I7DGo7
hfewDxfjRSvHo7HBMDAX3lue2Z2Ijl1F379+CMNsifi/2Aun2/dvSNx8PhOG
hRUe/9/Hg/AkF2TV32H4fvvrH8a2PDifubz2kC4ctQJTGlttqsH90UhVgTUc
nMN7Ra/H1aI93D6Dujscw2ZMCjyvymEt4jd1TDgcOXtiYwxu54DtSYxUuXg4
ZN4Hfy5WT0CTTUaogHw4CAu/rOSPpsF4S+lApko4FI9V7eOOKwNjdSMfp3Y4
Youv+kkxNoCs8cg+0TgcdIfEWBv8qdCdf9HKZEv7PuMPj9BIIzZSxplDPMJx
16MyR6u2BiXH53VXg8NBfafp7f6lEBqvNorc4mn+/fqxo8umGL88t/2YJYUj
TjDFfUtxDbK4ec5YFoaD2TZs987MRii3Hkp6Tw5HS8gIkZ61FbPXZd/pt4bD
7CZxJDikBYR1lcMvOsNxcsmy6PVpCuRzdX0uPQ/Hz22HKoJySzAJi8eP3oZj
xe+LxEZEIeIn3DgVp8NxUeLDW7bXxZAKDzVr+hGOg72Xw0nytXgrnFIn/jcc
5/hqne6yUhH+OPdvOUsEHBfzPg4b0fjdhqwuyBWB7O5Hnjb0lXjJci8ziz8C
H+KuzCmSM6GUpKr/4UgE5p+vH2k/GoranSMcQjIRmKg95OjwKAr7MiyeW52N
QNO5GjZJrQIk8vxIqNSIQGP0X7l8hyqs5wWrfr8WgVSPlkvprDWwF2ZlOm4R
gUyha6n0mWV4U5750NM5AlPZpNjtjSRcFDsY3OoXgUBppqQfvO5oplDlNyIj
EON76PpMlytETiqvnEmNQP4spZl6+hbS7zxvjMiOwMVkjXM20lWgxw3X7rII
mDl15oUK1sPt0azYtoYIVHdtu5TLQsHEBd8ZzbYIjNwKCB77UwHNPqYyQk8E
isKDPqvfyUPblXTzkVcRkPlbf3vKigSxIQF+nvEIvD/z1OzuRDGyDGrf3ZiN
QFoq4daTrfXY8l7hduHvCFheEY/OVG2Cr1mv7me6SHgTaxUf7GvBl8/6Ow+z
RsKjV0Ao8SYV+vZTzxx3RyLi1289hgtV6Jp3i6cIRUKANtsZmIpxwuO/C0vH
IhEoU85jaV2OopVEBrlTkYg3OaW3s7cWOwJ5HgScjwRlfCB/zYmKELqKwI4r
kTDO2H/nzrsWzEeePMVgFImac+EWuYxU3NjS+fuCdSTeUE2j+60r0Z+k1RDv
Fgm5mzHq/5XmQ57jg/NAYCS6/07f5dh9C5UZDkc5YiNRW3jLI447H3t4/3zR
S48Egz292auAakTnR5dk5kWi5/3g8cDT9fgtzGX2vjISo06XLhY61sKyonCf
YFMk8tJvjWyjL8ErMYm3lg8icfnY49QD4clQrr+fUdEXiQytbS0PbM+DclLt
6txIJDrjjLvjd4eC/+5rdsnJSKxENzGMZuYhGVb9Ht8j8W7v2ns9kypsPPoZ
27IaiQfM9ANF9TVwuBiqss4QBY6jLanbFsrwtm87/Rn2KMw6MEuVOGbiklZ2
ezhPFP6wSCYdFo1G69ChgCeiUQhJzHvYYRmDA9ebZbcej8IFfWFDu/hCkN6f
W7qsGAUhN82xG2oUMJq/pKRdjEJHe1fWnEsj3KdvOg3rRKEsc+X1wp0GfLSf
O7z3ZhQE/rDNp1rXQmvBb9rYLgo6pOPZVv1F6PDYXFzgGYVv+7RdOLTyIb5K
NJkKicKysvuG5xuaPgkU4juUEAWZ51FMfxIbsG0T5Y1DRhT4FuUul2Y3wz/q
NKmuMIq2Z+3ekpxp/LqlT/sXOQqygw43ih804lqyAZtsaxQUKo9mrphW4AnH
9FP/Tpp9aXd/7a4inLzlEdM+QIuPHNf9fKgEJbybztO/jUKL99unB42qwVGQ
THfhcxRCnfr4CvQbESbC1xa3GIXc8LLzWyya8PXz/cpt61HIrhEJdWSph2b5
jYwkpmg4FckO5t0pBdX2Xzj7jmjoGXW8YbW5BZ4j+S5pPNEQr57pShuNRui3
M8actLyHRGhLjq+l4gt5QpUkEY1atxiWwf3F0HQOO7lbPhpKv6/aaciQQZUQ
Eso8Hw1bXnXLJ2014PnxiI33SjRGTOYCre+XI6zBYj3nejQ8z8zITPln4qsH
49f9ltF4VX9m97NQH2ieLB0qcI6mcexch4elGqjLKg+F/KJx8n6fnq9RHHhb
p2tKImj++cr+M7tZhHC/mKwDydHgsjLa//BtDb7KH4qpuB2Nm97vquluUKC5
0eNxpDgaAs18N/9erEZTm50puSYa8SsJR8q0isEXsvWyeGs0rMifZJ15byFc
qfoU5VE0ptont5k4EvB1k8YBqWfR2DXpflnJvwianXMc1NfR8InQ/LbdmQJq
ZNJ/Jyej4Rz5kfShhgreC+JzLXPRyBbp3lM914Twzc/fnFqh3X/aRWfcg4qv
PS6P722Kwb2cx0fPNddAM35Hw2nWGHxkKhsaYi4GVb0+r4M7BhXfl+4kSJeA
Z7tOwlnBGMhtcU8PIpARNvDTp/NoDNa/NtF70/jwa0q6pYpMDLqEm2YvVTZD
U1tau1spBuQpWSVV7lZQOYZPX1KPwaHA8pJF7kbwDnkd6dOLwc/+4ezQzTQe
JnHvvmwag4DWWvYR7wJ81W9heG4fA6fZwIwaoVxo7jFY1PKKQXP+Mavly0Wg
jq6ODYbEYOSq3b7mfjJ4sjN7deNj8FL1cvE7lwaEGcs3jxBjMDV4Oy2YrR5f
970rMsiPgeaC1siqFG1ejwekvK2Mgdv333+9imj8VsAXaEyNgXHH4VsiRQHg
MW+z/dAeg1Uxho4ZByeECt/UM+2NgTB10m5GLx1fpv6dnXwVg7e+k7atz0ug
WZYvbvkhBm3ZJ3ga9Gn9Z6PEO/01BuEvHjXZrVaD5/DHzba/YuBVWHnPsKYY
YbNhSzN/Y8ByL74UG7T6Vgt9dGCJRbiF9R9t5UBoOnU++84Ri5xUTWrNfhon
iFveddkXi67ocyvjzTngXWQs/3EwFnKv/KXOU8kIry9N95CKBX1hFk+YI60e
7hdCfyvGwtiS3BP/mfa/SX9x9LkYi0PR2heEtGrR9Dvm+h/tWMSxzAipxJWC
r+XQhQDjWGzabBxQE5SNcN9eqb/WtDMOKxrxFeLrKXv+ELdYXIw9VmTxnNYv
61tZNwXG4qD/UtTsHiqo96tXw6NjoeCXVCC/3gzeYI3PjGmxGJiQlpLIacFX
p3Ntdjk0+38vhLvGNIB6Q540UB4Ll++LKRLOZQi9fNzpRGMsPsRqZkeeKobG
6UMqt9tjITwQc/E4TS/tOca/729vLG7J/Rl8xkXBFB/3b7PhWBx3lZ/ddrYJ
FNbtz55MxKLzBr9E3UITAjcYSo/OxSLmbr1xrl8dVOfWAlNXYpHI8cB17/4i
cI390P1NH4dqlk0uTBZETPR9FTNki4PC8xPspgVpIN8bZ+zYG4fcIZuoY7mF
8K0eGRMWjYPY38nwBJq+P5/9jBorGYeAhT15OlZ12JHQlfhdIQ418bUWzM4V
GPO/Z6lzMQ7N17XeDX28jQr7BsUWnThIxt7Eg2oXeBpWcvHdjIOxdcWknqwB
lNQK5kLt4vDqU1iPZAMBrPK3uj57xuG7in/fbX0a3xxOzlELjUPc7lWHh7vr
ULI3yrMuIQ4dajHUE5VkuG4J1OC6FYfgq/euO9sXQ/GPu4hfURy8Srt5I/+R
wDJjt/G+Jg7sjck7ZroTMfTGdEj5ThxCQ8den96bi4Kea+TyrjhYXiw/Xhdf
C8dWzUjWF3HYbqE0knCeCrkKFWO3d3GY9FLfx9ZIBeNtRemR6Tj8d9RZP1m/
AS9iTrAq/IyDqsHsoeJvFcjxOTKV/zcO61avGLx6C2BrI3ifcUs8upcO8N1V
L4f0tT1EO654zFr++zWjWg+6i+yOA/zxSNb780A4qgn9MsznTxyNx0p88+Zj
11px+8Bf3tsy8djEVMORcaIJltxLvzbOxqPewYOuwq8Kkszf+swux0PhRJ/v
voBCbPz+WPzEIB7jCmzXXF0L0fP5TcBRy3hc6SSP6/mUgTj8/GqqSzwWKbYM
ua0UmD5+cvS3fzwy2upKTi40QqypjcEwOh46dOEJ83oUrJZQ37WnxaPvDXuQ
bVMxuojVjcK58ci5fWjdeGcaUiOLEmIr4sHsNTkaXOODG56ZFt8b41Eh9S/A
PDoVRyxTFXQ64vFby8i24XwJlq/GcLY8jce2NxcKqp3IeHQu+BvvSDwUZROV
/RKrkXzCqzP0Yzw4nvutpjAVwVDYMfvzXDzecEgWOXrF4wCnhYfaajyGumYz
2lPs8ZPeUL2OIQHBP76MjjrEoP2nljAXewIMV+9a7M8oQvzkxXVfngT8KXcn
GO2iQH8Qr96LJqDtm8cKZ0E9hB6drFY+ngD6Dxn6YVo1mK8XiyhXTMDxn4+d
nNhLcbdQ2IhVNYHG9T+Y68cyEZ3Gc8LtagJamwTCTMNzoBO2c9vIzQQU/O38
KahCxn43lk/y9glwi9D0eWpExWQux7f3ngl4q2wq9prGI2VP+X6FhiTg4+tc
8W0xzbBfObAuHJ+A5EFx5m/HGnBM5DhDNzEBfmwJ11jel2FRS2GbfX4COpfT
wzPLafM/SIVze1UCzhZtsj4wUAHfqiu8FGoC9uX4/v16ngLF19eFr3YkIDLg
u8lcGBV0jJZHl3sTIPTJWD7YqAWdks4nMocSwGW4V4OBNr+ib/gqKI4nIDu+
+fXR4kqoxYefG5+hxSMyuHmxNw9sLYnq4UsJuPjsiLvY9wwMfsq4KvpfAkwc
uzgulmUhY0ehUc+WRKxx/Kcm9qQM109XWzhwJaKw9ernBRUK+OybHNj4E5He
tJn42JWmHzI6POoPJ2Jm0P1cLbkCJZ29AbrSiTBVY+I4mJYF28VXEStIBOPn
IxxNVX4Q2/chIetSIkoYpc9WnrqMhUtf00/rJiLk1efJM6WJaPD+mT1xMxHH
uCeSfG4Vwbt4ozjCLhGnTNy8x0XJkH/BTD7gSXuPS5Bh/EkN/m3soPYGJ0J0
/Eoai3kZHh3mve8YlwjO/Va3sjQyEaUv2sVOpMVzfHTfkmQ8VCMk+hvyElE2
VeA0RTuzUk4N6VUmoh82LJML+Xgxdm5stTERL8RnKv/9rQVxi+ZUdnsi2qKV
+8VfNsJAxmAOvYlwuU2xGHNrBJ+F+dLHV4k409tX4/iFlo8Ux43ID7T4T+By
X1YFiu97Mx6aSYSGmt4tS9YCWM+Esvb9SsTru77HXa4W4wh3Apfzv0QItgUU
DxfVYV6ZxLdzSxJ+8ikcUsuiosElX4TKmQSjwqCWn2Yt8M6pFLu2Pwn3db+4
mpa14FRvo/TaoSQwN10abDFtoM2LNsXcE0ng4mb7PuxehgdCPeeVkASroeBe
k6pCRF4Z1PikmgTR2S05GR9LoBo4pht9NQnH11Uu12yuBmvltPHhm0kojZo2
a9FowPPhRct+2ySMawqXauxrAoF+3dHFIwm8xyTNZ2vroS/B5MURnIRXS9rT
J3jKwGPMHtQUmwT3t6Yurzlv0fbg3iiD9CQciE1+pjcQjaIm4aT1XFo8nRdE
WQ/S1MzkMVJeRRIYR+s+yWUX4hC7XO7ZxiS8MH/aEhFejTkF5dKptiQMxfNT
Nu7UgGKrURPTk4QKGRGfn8/K4UnSbzryKgnsuuoJJQWZkHtk2vbsfRLeDpov
s330xfq8/WPXr0m4afeQQVn2Btp5vZ5x/krCfM31TFm1RISrhgw3/03CPbO1
l5RdxbjgFff+Oksygv+eEBrtr8XWovTPGxzJEFLV33uknwJSPZ+x/b5kyDAn
89Q4VUPgYenga1ocCRJ2XyJNilH1QvySilQyxM6K8zFLZOLkREtHg2IystTu
eEa9JOLBgpKMwMVkrKwMV9mtFkHtv15yknYyWtRlFeUmKRhmuyq8bpSMnzuO
7PtztQmm+8cyba2TEXlEWHXnf02YPWa1Y8Q1GRLSboXCzlR4nZ6PPheQDFdW
eVn377Wgu+zzlxKVDOuWnPDHZcWIN6bz3J+aDK8GiX0ehsXY5Rg3m5CVjFeu
PQEy18koCOAw+1OSDGcWBUh5NOBIQvZr67pkVL8MUQzY0oymLBHNoTvJCDLy
+NPY2gKlqpqus13JKCRH+o6UNeLpHRmFuoFkbFmUa2HxrYBeb0c932gyuMep
ca178jHxRvVQ/KdkWOSbR8ofz4H915d5K9+TQZ8ltbJyoxC/Vwx3Wa0m48Bp
papp+yqEbp5KGKRPgXoRIbe5pR5bdzvRK21PwYlue6Eyg3qQDiz71uxOwTPf
xod3dlZCQCZkgUcoBQzSg5IUjmxUqbBYx4qlwEZlMe3W/VCc1Esb+y2Tgr5N
fj6jD6zwwJLnqsXZFND9O13m/y8Zap7FvS/UU1D8WHGHzWgRhiPElKCfgqM3
LnaS46thmt7UXG2aAgN1l11WjDX4VoRjex1S0BN1KTKIoQzeDd3F0V4p6M9h
sf2z7xboHmnxLIWkQNm2e5uHdwQSXo6mmsWngD3u4e6VrHBwfzTf/JyYAl1G
y36ug7dRsPgtSDE/BW8PzfFoLFfiKJ3XUmVlCmS+1VxeC2xAM/s/+93UFNTp
yMo3DjfgLH/Mx8j2FJjkZeR85KagX3yHwc+eFDB99B+OeV4BfWQOmLxKgVbt
eviV0AJ8vCyk8ux9CvIzC8Pf2eXB8Ub1PfmvKRASSdrKsV6JZUdpqYqfKVB6
wHbyihlN7wa2Vez6m4KD4k9qTZKawXyhOOUhQyrY9v5WK41oQd+zL2qrLKnI
D0gqshJuQqqeGLMEWyqaDy7wb/lJhv5714dWnKnIji0IlSkrAq9VU2DOnlTs
8WoTnPhRjIm5P7Kv9qUikW9C3Sy0CmWe+LVFOBVnzLx89VYocNgIr1U6lIq7
OdX7xrc3QTKy287nWCqcUxj/mAQ3YXkbq2itVCokrm+x9V6uw710rYkp2VQs
cIkwd3gVIZSXlM17OhX/kpK7834QcaF4VF9HORWfIiYKXtD83nZ0P0fcxVSk
eD+9u10tEy8azJ91aKRiLOqIVvOVcmTIl8cua6eCqvtZMXS9FkaPvp07di0V
OzSCeG8k1kDX7J3nsHEq3tzsyeQULoEGXV9pkHkqusdr7g/+TsH5/Lsjorap
GFGe0yiLvwxFVG0ecEpFIdfz4o5EX0i/z5Tz9khFfxkxdso6G2KBcXb7/Wj2
As5zdGpUQYTXL+tJMC1/er+shA/R9u1d2z7nyFQQrV7oz49Ugeu6wQZ3fCr4
mA/yMa0WgHX14rGOlFTcZK5+G2lFBOMt2Zs2pFTsvW/z+ycI+HvyYAp7dioe
6pZcbNkowvIQ94OWglRopJdKC8fVY96D+YdJWSpKx+yjFfSbMM2xLMhCToXa
guEJJVcqPtR/1qHUp0Is7q5ho1o9RrSGIwxaUrHzh8WAnUA5Bha6qHRtqejd
GO5h5SnEk2Tq54pHtPsZmgIOVlSi/VgJt3ZPKg629afsrKX1c3/6xT/PaP3C
evbp6VPNqHWI8C18lYoHDVvd+IZaULbVo/LSKK3eH2u/BD1vRH6l+dsfH1Ih
nTZw6z9COW6r6mzLmqLdl0p/4FhcPlK/nFVUnk1Fn6A2FwNtf8RGH3eaXUhF
+9H+W2nN5QgVFcwj/E7FRlsCG+U3Bb5dO57Lr6eiRGZA1dqpEa4WdHSf6NKQ
Lv72kl9gLWzpFyUTmNOw51wCk9SfApgWjpudYE2DwM+7U3xl8TBQek54R+Nk
7aDTmS7/eUNrvL0zYncaVK5cEeJ0JEA1uHbp6L405GXwpNqIl0JpX57okFAa
fkTEle14QIbc/ST9wENpKCjMOn+NtRqSRkExIuJpWH8086JoK23/rTm29p9I
w0Bsk/Fm2VgIZhrPeJ5KA+XCt6r+QHfwyGnw7DuThrYPOHLBMQkcrxXUH59P
gy8/YYZusRhbvY8GOqmlQU7cJDi7kQL6Xbw1u7TSMEHUCmoXasBa49YPbXo0
f4+qcUaY1+CnzhqbtVEabpfTHelQLcXsj5kzbGZpcKrr+8/SNgeTqaOuzdZp
2JT8hHXPpjy8legtvOmYBhFHfZMTFWQMDrQOMrun4aTjr9Oyq1Q8dapgqPOh
5dMfQiEfmtHJelv6WhAt/pBfgkzrTbhfHWP1X3ga4peTUhP314Oq5pNRHpsG
P+2D4ZT7JSDPWHdfSU7DYlXZ8LpAMUpi9VdX0mk6dkDxInGmGjkHLxwuyKTl
x8ztO+VQA4hPThqq5qehlv45vdhkExKtRBMWS9LQIdFH2bXUhEjGXfdvV6Vh
atOPzyY1tQgsZvyuREmD/97LEj7uBfBUXto305QGk5D/lE/vyIDjx0+aaffS
0PIvKEC77DasQl+FnHqYhq+dLQcvd5XgTVt/T+iTNDBXXRL8+b4WGuuPd/b0
paG4LnVaP5KCB3Idhuwv01DE03y9PbUS0t6txfojadhQtjSJss9BRWP9XO67
NBD3iKh/PxUKvh9VJz9PpCHt2Jp/MLMKUsVLgsWmaffv5lStUIkBo2Nut8e3
NHg02ix+f1kA38qMHfcWaf5zz7kv8NL4aDrlOv1yGt5KcgxufVALU5G4okvr
adjHl/dro78CQ2bh31LpCOCvuHP8pUouVPMDpN8wEWDezb2+Z2sq7o95BvFv
I2CTOdPXMho3S/I4P7HeQaDx6fJR9ofZKLlmw167iwDGnx8OTEqSsYdkavCb
h4DxewLex780InHweqGiAAGHV+iXOy7T9MmOq7MRogTEFWpxOVLq4XlZ40Tf
EQLor/ttjftYja/xKoEckgRwt6rwR94vgnEPHl8/SYClHtmb/0QhXjDJsRXK
E+BsmnRT7L9qnD93/NrXMwTwvnrKJ/u7Ea2hRwokVGj+vK86E9ffDLF24Rlv
NQIuJMoadd9uQcE6n1T7FQKM8vb4JodQwXWKO4BJj4Aounox96QqxHqzd2kY
ErCjSNXlKe3/3mhk2U40ISB7/sbppcIiuP7YpP/OkoDp9vkG/uoKTImv5wnZ
E1D+hPcSRYYCA8elL3YutPz48C/6c1LRX/ldst6TgIRezsR9Vxuh9GXab9WP
gH9rTeeyfKtAFZl4dCaEAB6zp++airNxyHx0W0wkgaaH6/gmaPojJ39QdyCO
gPVy6ccFAtHY8b4vd1cKATIxm+9kCWUikufxtDGRgHjtsY9zueVYvdYuUZJJ
gPKeiLxdDTVwJLX4fssj4GIGS/on9mpMDFIeSpUQsFvQyq+/vhC6O6q2+lcS
oGjpEOneEI+ey8VXH9YS8CV1NqU2yAyKCTk5LFQC2DvTT34wDAWlh/T5yh3a
90nrXOIO2RBhThG/1U5A+q7w0NlrVbh9LtbnQycBYjWXpver1IM1LOyBaC8B
ddu1tEJW6hDa7r/FaYCAlbdzLTUXy7G07qFDfUWr78xQzqW/+bA95ZS9/oaA
pp2cTO4BtzDmbT2l/IFmzzHX825gLrSoJsfiPxGwVUtt6z4OMrp+GHi//EpA
MIvtUcs6KuQkdDr2zBMQk+cReMK3GWRHdRbTXwSYSJy4xXWkCQJV57XLVwm4
f6V7+XdrPYhfTmfN/yWgsdW4/1BLOVhEZT+dZEjHvaKFSqPmQgSaS4oFsaTD
Wog40JFXgcX8w15d29NRx1HmNB1WD8v3Qu3bONPBTfa2W16iYptUd2DXnnTk
7dZ7OSfcgoZoB4Wg/em4qFT57IIYFQbv2NdOiqTD/MrVUX3xCvwnQW2dP5yO
5l+bRCyas1EWaeBTLpGOTBXNvqacbGiMbpw0PZmO8CNBMs6Sxfh1rHBpj0I6
WHM/sbo51CArXKXxpVI6JB+XuBV9rMfZ1zNu8RfS0WMd2tFuVIOvR5Mlz2mk
o2NOWs/XvAApoVIL69rp0PLXYBiziYLM8EgN9Vo6lqcNNsutmuP94QBHpxvp
KMrrL9noTUJkMP/RAxbpuHnXWGcunqZHX3XOfLBNx/675nYj3mS8PGhbccs5
HX0RklcdLpHhG8hqo+WZDo07I2+lsouw/yVFdIt/OrKufDvewJyKx6J6Uw9D
0sEyfnCf884IOPr/KfKPSkfnKJsfD81vzue5ZicS0qG3xesyF7UMd4WVBeZS
06HwQ/SkuHkDzHynP5RkpKM7zFOyMr4RLM/ic2/kpON47tSzGTYK6gQljLmL
0sG+0BySJkrjXe9XPM/L0/HZ1G/ubxDtf37qMxpTk46yrv/OGfwoRDE/322l
xnT8cHqWt4XGy2qeD/T/tKbjOfwt7Wj7YbHHcldDO83f07wyVtotuLVvy5B9
Vzo0LzFmHVxuAtxrCMJP0/EmXWQjjYGCz0+0tceep8OwM+H8Rk8REnmX2UnD
tP7pZ2TG5mJIuWYNXH6XjjV9V51ew2qMdiGJ+WM6bLoviejX1CN07yf1jul0
7MtcM7am8fMB55itvnO0/tJ60HItqRHPHh3tlfyZDjU2kVTGUxXw3P0iZmYl
HfU7JX0NbG6B19HzQtHfdDTykKqbaLrx0YM9TEYMRHTX9tyrLyHBdldbJ+cW
IhzPyWi5G5WC3d4svJ+NCJW97sbWNrVobmc6G8VFhLhoTEXSCBnGnFX/neYh
osR4pXoXbR4z2Gq2L/MTYdI/MtFQE4+q+z8D60SJiLE49ZflnSq0d95SsD1K
RHL5lwgW9XCsWimsCRwnwm7r+6GlV/nIuzveOipDxM+CxDUIkqHCHulDUCRi
cI/k3yQfCuYsDsmoKxPx7YjFSfWZShBa+5cYVIkw1rRz1rbOx6ntbo33LxNh
iUmNyREiJsx2uXtdJeKsR6NZ0usMxDTfkRS/TsQ5n87Wxy/LIL7t5sL0TSL2
JdpsemjYiGET+tp8SyIEvHNrDDc1I5Ba5mhgT0TFmWQXmdFGCG9RP7rTlYhw
kV9HzHZQ8PTGwkyvFxFsfu8YGFVK4dqQXhEeQLM7bQoJwSLs3ixnoxBGxHmP
8VenFWsg9Iz3xmg0EfRcgSq7QIVY+n86PolEtCtk/8nobIbM9U+quwhEKP6i
l3s61Qwl/m403iJC6VKJ/d3Geqh9rpLWzqWdB26GnRoqhl518pGFIiJm887J
Dj/Ogambu0BSBRE5i2tpEg5FsJfV5z5aS6vnY6b3clmV8Px7irW3kQij1+KV
h2zrEdy5j97mDhFFVXnOhcUNiI3btMrYQYRzaeFxOqFqpF/5/L2oi4hjj7m7
vb9nIW9X7yelp0SEpKW8s74ejop35NEPz4l4wWmvV/nZDw2Fqc8Dh2n1OXW4
hdUkA/dtPB/zvCOCLyMhWvVrGZ4cM7jXOkHLn89nCTvRGrz4pVCvP02EhnPp
WN6/Sry9w1++9I1m33WB3jE+D59DGHIJNB0W4+sXya0TiUWVLwTJFSIO3/lV
bP7FD2vb+mIHNmhnavYxd990MA7WBjvSk9BDSZePcioD222C51YWEtoae1Ni
Muux56a3fcV2ElT+OddZBzXQdKyh6QVOEgQop+tWP5AhNntaf2oPCf7081t3
DJdAliKoEb6fhAYemTlF5EHZm0lZQISEx6tUF4uQAmgozsi2HyYhPnyTBxNP
LfTpnx0zliAhQaXtWFZvE0x7KMJr0jR7BZ3XHQRbYJ9M3Htbnnb/lFqsXWAT
PHV92WWUSLAQ+/qqd4yCYB5jpiEVEh5cuiRQU1uCuIkz627qJNQqX6ttjy4C
sUz4B7s2CVt+8oZl0pGR57j5S40+CR66IVt/mTSgQurbmLoxzf7oVpFYiyY0
rA4MzpiRsMhs0jluRePn9oaeGBuav/v4z1hdr0V3ZEa7qBMJhg3ixt5TeRhU
86d2upMgJ9Ahe+dLOsZ23Kwy8yWBq+7MGdP9tzE9crbgvyASzsbcT7JZLsZi
jmhGbgQJHcwPpaVlarFmviVRIY4Ev3sD+j48FDAd/h42mkzCj5+Kh4esy7Fj
4YWPD5EE4nkrbiJnBniaqE67skg4P36m2o3FGSIBty0a80ngyTb/UuBjC/Gz
gde1S0lQ5A+dJdHqJrfZ9MpCFe375AE/pfgynHt2TiWJQkJBVItaMqkWmukH
FY42k/AmV+qX60MyDK5vO957j4TfXM/y7ioXwZx/4YDNQxKEt3GlqbGnw/Hz
IB9TNwm7fflLPy2lwLu6maO4nwRuscBJFaVshLllsZwdJEHMQro7PqsaibLB
/z68JoHz3lbzGVsqMv6aLQW+J6Focxq9/z0qCjpVZnk+kXDf/bo5q1I9quIO
T7R+JaE/IXkzU3wVJOe5539/p+UvmPpchFKEZh3GDalfJET0WNtl0Oqr2PJj
i+sqCd8KOU+yC9TiEe/47pq/JDzd/m2y5j8qVEP7RWfpM/DK/kLaAo0fBqbu
nDjIkoEHaiqs4b+aoXup/Kzl9gyE2Uj3Wno34l0N8UohRwZ+kB+lkgcrYM4R
fuPD7gw8VAgfNXLOx1dvFwfefRkIDUuc4tUtgvM7Yz8DoQw4WM130jlVYumM
WgzpYAbO+JqOh5pT4F8iSxoUy0DusqtZWGYj6LaIFrNLZeDkmt9z29sNiHbi
qNeQzUDfC5f/UXTl8VD+XVRS1kpZEkWWdiVLKtXJ0iJF2oRUCFkKlUiWLGWJ
7M0MZsbsdsYupVQqoaTsyk9IsmVJSsn7vH8+n+eZ53vvuefeew4fpvtrVwYk
3s89jtxNglCNYXS2NAUJuiP1Lw2IeG7MedqP3oFcakfH/IMkRD/4V3vOIgz0
uVcD+kdIuBv7YZ1qZjLUHEp+BhwjoVX/mKtiXDqyalhCDy1ICHG8XVYWlout
m+OW/TpDQoaLscFYcxZK4wNWb7MjQXngBvx8mNjz03XLVScSTo4Y1aa43kW1
teXufDfiesKob8k3R5g82W8y7EnC1VsSDp/PhOKdqrblBm8SLhs9tpSsosIi
YrWTkx8Jv3evu7IrNAsfhxd5sYOI+Hau6JJJKoD9sT/B3XeIOSeXovSYy8dA
yUDsqigSMidzSLUrMuAu30KzjiMR+yzh1hYeAz8Cn2eT7xPPnzFwTD2Vgpu9
/AdNKSQcZUBpVzIdAsb0V0sZJBR05T2YW5mNsJyoZjMuCS+/980aFRVDYqlv
b1QWCd5bIv9GiZYh4brTeE0+CYqHXDe9P1gCuY4TcwtKSLDVuB7kJFmINBgs
MqogYUDZYevTx5lYy96iEPSEhCeeOzNMe5jIEV65obKaBFg99L8dzYPWJdHt
M69JWGItFRQ8zUf5u5/7tjeQ0PNss8xwTjGwre+4VxMJU9RQt5kLpahObrQt
aCfOZ+nc+XO0BCb/HruPdpFQPFfXtN4jD+/sc/w39ZFg9kYgvMmWAYtXyXed
v5HACd/Nf3ye0O+bwincURJ8PhyaYFBpsI/z4vVMkmA9lCbj78bFwA+7YqXf
JEjlrEOITR7crY4+s/lHAmtjjJCHWwF+VO5+lzyfDF/5y/S7eTm4qbKxq0WE
DK03tZfNbzMgEL58WGoxGXsc87o9hsMRNiQ0Yy5Fxt662ndfpOwhYT4hHCNH
xuSV6qJmjxAkFP8nU7eKDGYqTySORIPcijeqIqpkZLQLKO5elQl6QIXm/vVk
bK8tif7Rmwu1nvS9IZvJqFgaeTNPIwtZB+6bPtEiw3Kb7t5l2WnQzA4583c7
Gdn9q1WXGEZjcK3Cf1l7yJj+11lh+DEcLFaRvZURGc5J8wUYsxScUTzSL3yI
jMdGzUzrqkxIp/S5lJqRUal5Rd/HndB3MgEjDifJ0A5tH9CpL0JYvMwVKWsy
VO53pjpq5WPvorwfTwlcF1Od1e5cJPxexIEbno5kCEr6nNqky0SB0H9/FN3I
8Flw2vGwDxuuQT633niS4coV7RWe5EP175L5/t5kyN0x35zxsBQffTLCNvqT
4ZIZZ1R2sAz3J/XF2oPJSD0/03dEswRmHu33wsPJqFVYIZr0PQ/CQ1eW6t4j
o6VpRvy9DAtVTmL3+xLIyDv9b4OWBwu+PSy5RAqRf4KNBPtZNrTO7aIa0MlQ
ly59cae2AEPtH5TG2MT1o7v+A3eLwTl1iU3PJKNwyO9w5XAhzjYKrTPNJ87L
kJlk6aZD1pSW9aeYjGMaUn++ETqooWbblqwKMm7Z9Prae0YhYt/bAssqMsZf
rz3NTiXmbpXTNuGXZLyxKs9e+5mDmV1z5SV1RH3qSayvH3JRVEbe7dD4/987
LWY9zcnBJe2tVctayVCKTZeaKWBhTX6N0dOPZCyjdo4d+nkXXRvtXnn0kGG7
3vKbovxxkHi/TRQHyJDZPqZx2S4UR1US3taPkGHtmCL0U4gBEfrG436TZNhL
bv4wPpGNqhXPmzf8JuMPP9tz9AMfvvfPWLX9I+OsT7eabhCBz9IfH8OEiL27
dbXe5lQGhqKjbbeJUXBw13T67lKij0TW9PUuoUD2WMW+pb0UnL1deTFBhoJR
HYZq2BQXsgIWQ/oKFMQ+Jw/7TRaiwW/U/ftqCqGra7aeyyxFxHTYBG0tBY5v
pFVFjhYTOlnJ+4g6BSaTrku7A/iYGS37PaNJQc0l5d8OnukocjUPyNxOQXEE
6aPGMBOX+gcELPdQcMD8F72xOAtr7INvLzSiQGPuuG/7YBG6Pq0QKTGmoMpm
wKI5sRRkq8KoC2YUxMSIif3xLoV5s8mSZScpYF4KHunaWQjRY70JVVYUkGPq
VFz5HDyr95P1OE+Bn9iFbYF7U+BnLJ2yypEC74YMjqYHEzrVOavqXSmw6LfM
2LAwEyN79zNvehLnuUiZjRbzwXv4SW2DNwUlZ0/YrdApxPnt3hmtfhRIRjxf
9HU8C3JFi9XDginYkVR1VedqMhq3pOfrhFMwVB3tVTYZiLtZe7V7oyn4qvwi
UGTOF0Zr20rjEyhIUljy5hoxZ/4yPfX0KRT8SlJXeK6djuJVoo9HaRTMP21T
q6Wdi8vJTAMam4LDY98X387PBKvI6NNgBgVrP7UE1fyho+XNlxs78oj7zkYb
Ht4Jg/hAuHRYEQWlg7+X+Uf7Q19wI/9DOQVxn9JffnuegOsr6w8rP6YgoHiV
jLgqB1m67l/dn1OgNc/4ydglPrrMJUMf1VCgrFYmfM2/CFJuhYpibykwq341
Ik/gYXznZMXpDxTMBPA+1apnwD/t5yluGwWno19ZPyX0UcEDyvjEJwpuqnat
Czyehv4Pevf0CV5Z7T36t12ZC4XRj+tjBigoajN8eL6pAOYit6o7Ryjolgqu
PqtehtsqyrYbJikw6LmhZyJfhge7n//x/kWB+VL7B4fvF2PUwpFcTcy5xcW6
PnaKfKhcEdZeNj8Z0dqDYaw4Dk5HZb49L5IM8a4LUdveMhHNPeyauygZblNO
H980ZuHpk5EFf5YlI9RXbMJVvhA/22OZxnLJWHF8wFuHW4yNPzT3kFYlg3pc
wCFBtwTnFze19aokI7E8JOLUqgIkrff20lyfjM+ZCeYmymzUGMpJ3tqcjLBl
2d8SrRMxa1ORXa+VDJObhQ+V3ROh5WNzUH5HMioTt7bL7KfjYvy/not7kjGq
smPCcH0GqNmMwBLDZDRENTTX0fLx7oWh/HzjZDzbxNmYQ8yTBd19JeamyTga
eMiiPY8NvZmwY/TjybgssKu7YH8c3KU3jAydJs5zlZ/Y23se7C11ETvPJkN+
ZGfr2l3X0GZ8WS3cPhllae7flhwkY9GFJVVNF5Ox/KmRldBHHgwDCs6oXE4G
qYkjqE3oX2/yiWkPgsdzFWu8ozTzkF0wlVDpk4zHI6fWWv7moLuOvEU8IBmf
rJxrdxE6SLp/Z61lSDIuMpT3uC2IxyGBj4688GQsW0tR+kv0WaB84Lwf0cno
nIl2e7CchyKd1TSDhGSsPWJszNEqxIDZsx2x5GQwiyMXvp0pwUoXh6aP1GTU
rXQfaKsswrHQhZ4bWcnIebbWsPFCPsJoGeI30pMxz6E2xWNdBirKTNJf5BD4
5WtriOiz8L1x2FCqMBkagfzb7s+4UBuO6bItS8bZA7kvctkFsFqoeTPvEXFf
RqQ0hVqKmNUfZP4+TUbran9x0pYyPNO7XnDoVTK6tHafS7xegumTy03J9clY
qeB8WfQGH+oeDwb6GpNhVK/9dFSXDdvIM7e1Wol6zZw6Ir6ThvvsWaWgj8n4
uzBzpHmIg9rKtIdvPhP16+WKK/XkYK7V4LTC12S49D2MjqougM5E74TzcDKU
w0edO3SK4CwRFlM6noybWy/P5Qnmg7Z2/Uah6WTsee8sr1fLgJDl9V3P/yaD
7uLZusk/Apcinx0JEUyBitNeEbXVIWiqWHLOQCQFI1H+42JyJOwetvEQWJwC
m6j5Q5+u88BZlRX0RCoF7T8tzduO5UL86HR84IoUrNb8eGG/QBauBu1j71FK
gVabxrYZczo6CuKL/6qlYPT4s3d940Ew7O168XBjCv5m6Lbb/ruCTGn11ptb
UyAceKr4tEYSJA/4DuzUTYGiSKfmiRM83PB5+fvXrhQECq/58nqEj+4MKfFy
gxTMYz0w8H1XgIMdtit9DqZgUmP+Qs3uTOSJ523WNU1Bh/apI9dHGZDd8wdT
x1NA9hdQm7xLRaC7sXmxZQp2RsbdEOhk4kvafbtr51JwLtBHOYOSjyONPVe1
HFLgrnNvTpNfimLBrbfHXVIwfNDmc21HKVbqBNzne6RAbtDU18imCLcda3ke
11PwPP8x+Qo7F8Ok5eVb/FJwNbQmdMSFjRM1Dq9HglKQlnI7cFU4BxW/Czpy
woh8luhvqk0h5s+muSG36BQIMNqkHo4X467NkdmNCSkwf3+hQGKyBBP3khcP
klNw8XZ2iEVxEayf9Ctl0lJAFQmbtHuTgadj2prObCLek63rLhJ7f71KsOG6
zBQ8qY/x/5NERtyJtyf681IgrVP5btifhV+3FRy5xUQ99CLsNp/OxvlSZ2+H
ihQcleF0+/Xw8fJrSbhqVQo2ixwVGprNwZYV85N7XqTAf4pk6X4zDSQT8yxm
XQq+k7ZNVE0EY9aP9tC2MQXa9xbHQNcODrmD9UqtKTBdJrIu1CMG9V3bu7o+
EvXYqk+LyWZDR/LOd1pPCk7srVpinZyDVIP3AmcHUvB1x9mNEaK5ELymtGzl
aArkzcK3+L0j9CHnkmrnZAoYu2Z+9OyPx/vmBzopv1Pw4KL9ndpXEdATFj5g
NUfgySqMnEmngLXj5Gm5BanYKuUir6CRAVFXpnOrWCreUsMvRIoWwTN11Jck
mYqNZ5oNbauK0Va/K+qUbCpmLE50mp/nQ/9fBFV6ZSoa7vs8jduQgQyNltwP
yqmo3f2pJe8pC5J2qk8S1qXCQKhLItiZDZ8Ez3fHNqfCxsQ01H0vsf+eV36W
1E7F/JlxS/ueUhyYEpts2JEKM12vkaQrZchbaykUi1R8MK3kqjQUQ8aSK2O2
LxV/+s5s3aSZD//IibWLTFKhfpEWG7WLhb6KvTvqj6binEeDxW0LJo4MRx+K
OpWKqzW5l896ZqNoVYe1yZlUSFc6Uc++LYD80XWXRO1SYSsbqdA9VoSQIK+A
GqdUkL+VqU8Q89JUdd7LS5dS8fva5qtD23iQe3lv8dKrqQiqttmTsD4Bvc7y
p0t8UjF9MfG5zIEIop/S06wCUlGtfmxxIaFfffO0B2ZDUnGjvsJZgszBvmNV
W1kRxPk8o3+e+3Ox5McR3wMxBN5fzqx9fiMHHaT2p4OJqbiw9Mmdv49Z4O50
EotNTkVKwmdRJ2YUPD9OHNdOS0XS1ksXhcinsevWrdRWTirq56yjNX1vY6GK
RJ9fVioY6U9nM48x0FhNUV/NT4VYl+bAuY5sUC+uuV5dQtSL9vfcNqkCOIsV
Vjo/JOLLEvvwfEsuCAm0cNHTVJzSzeB+r2Ti39E6s4KXqWB3v+ye+UHo+InT
5FP1qTit+qHTWTwV9+/3/fe7MRXRg7xPlRQubHdcWU9vTcXm7SEpGy0Ksalz
1tPwUypy774WFV5Thp8Bdx/096RCn9pCihcuwdPVywWjBlJhr/VPfegxH9HP
2SYao6moqVZustyQidNOWxM/TKYiPv3gb0UKCyqilZ0+v1OhVz9QvH9bBkay
D6mtnCPqobjQdKtiEcrNWi5VCVGRUp5o4BZXitBx+xIHMSr6flYZh6uVwizp
+6yIJBW3nfZKj7UWYsV2/wO5MlT4tSfKKxL+pK9dJPaYAhUt3+877P9DQb7/
/dap1VTM/rwmu0ePjptKKqtT1lIhPnZxrNQ0Hfuf5TlDnYpux3PGhxXyIem4
q6BHkwrZ1AzNlzUF6BSu+R22nQoRb9+tMua54GWdNNy0hwoXsoZ850E6rph+
vttgSMUhprzmCsEQ7B67/OGaMRX7Wk5YJb+/CuHEGQU5MyIeySum5Z1EP28L
d3h0ggrnu68N9gVzQGuTyrW1ooLPUtXo9cuBsx9jSug8FZUxY9Lvs7KhrbgZ
mQ5UrH7ytFjiJgv/qh6EmboS155H+HqUaNReONAw7kFFxPaFEvcjA3F/4Yfl
pOtUZC3YaM6JSYJt5nlbPT/ifStVQlsjuVA/MpzRFUSFcpDH2RnVAkyP3hgP
CaPiTF9b7q2+IjyLX6C3LpqK6e5gSuVKPu7pJITUxVOxeO1S8UXqPFi2KtZ5
kKmI6qw1F8hmQvVmtpQ0jYrW54nzmj8yMbpyh005i4qX7zL1r2dm48GTao5N
BhVfG1wlre6W4Lb9sRGBPOL9t0Zlp5aU4+iCrm3cIio41zZVLzxVAvkM18BD
D6g4/Gf/zk0owBeT6Zcjj6mYTO9UXb4kHfyR0CUJ1VRC91y8kvuTAb84SUvd
WiosdrvU2stm4oA2jdHRQEUj/1BtEKFX73lpz1NspuLP1iTq7YvFaCp5bWfX
QUXeXoVFYWHFUJg+/4zzHxXhH/6bnv7Kh/2OnyoDfVS0CS+esDBlI9M3OnTT
IBVbm0KNytPjMVah0uf+nYrl5mFuMQfiofu3fF/hDyqe7rov3CREQ8Ceo9yp
31TEG53I1ZFMR3XglwU756hQ7Pg+/iIoD2JVfk7+xHPGiY2tEQO5ODZv2asn
ojScEXUw2RPJAcUwY938JTTs0TkrHFQbj/9CEXFAmobQ0cI3u945YO2LpoHI
FTTIeVdm35/vicsL3Q69UaThQfqka3vOfRQfnJclqUZD00DpkIYED38iyGIn
N9Dg6/LNTn9dHgxrN7uRt9CwITgtR8QuH5Hi1XUd2jTErvHwn01Kx7sj1uqK
hC4TWZTXlEbovuUxY9F2oMFc0eXFcoK/5xrCRjhGNCyKXmHlIpgMjuQqswFj
GjJODH14McrB0LGivE1mNNy8FztqLlYArcRDSzxO0HD37PfXY0T/3mj6z6PQ
kobAzu1cNZkSPJHxfjd1loY16YFW90L4WHhaQnPnBeL9fsaNHsWZMKWw4v2d
aTin2a4ntoaDpPYdE08u06Awb5B+ax0HnfINx+dfo+FHqXzHX/18qNg4Fh24
QcPDEHFD8q8SuND+SN0NoGEowyxazLcM/K54rzchNFi/q5YPYRB6VWl9s2QE
DdgaPdRN9DvsHm87eY+GdQG6Av4PeLjDOkkiJ9BQafJFZhkxh+t7B392kGlo
PnS/SNiKiWVrgk8r0oh4w6/eij2fBSun5eV2LBq0skfWj9P4xBzPleOm08Ar
uN0feLcQ/QNGvgM5NOyuZx182MLH5o0d7ZsKafi6f1/6SsLvebl56nmU0bCw
+GBCyfs4PMxZmFr4iIaVveaCQj/8IDhK/TP1lAal5Q2/FhlF4pCGts3OVzS0
bPu17msHDXGerx/51xPXLU/nv5rMQGvB+VVVjTQs++egr3AoF4qTUwHzWwn8
9FNDvVUz4agT3XXgIw0WCz2sNxrTkXNdZe/dzzSo9l5uzRe9jcnS8rQ3/TSc
+F7dL73rCvR+mQksHabh8iNae8uaeATv/GJ7cpyG0TuBIt+PEP7upt9T8k8a
0l+4984zycOSR0tVOv8QeFwx7tkWXQiL2fQQxXl09LBfBcYX8QlmodduIR0D
Agu0yvN46LvVZMQVp0OCtBPzutOw6akrZ0CSDrHx8SdFYmm4KjhvgbosHeGf
jYLlx9koNyI7eijQoXLntPufnnzM3d78snA1Hakhz3YIUwi+fXKnXlxLx41i
Z5HN4WWY2Ma/ulKdjrbPBm/VbxXhUsy4caMmHTaSp8zTD+ahv19LKWw7HdUF
pnkvGjmw3es1pbeHjgT/G3+EDNhoJ5fUfTckcApQ8mn8m4fjYz+ZHAK3uMJ5
HylPilFvvOOGlRkdXi0Bcs9TSnCA6Wu2+CQd7bY5VAFGEap+V6g9t6IjsK42
YN/bLOgd/zvjc54Oq/FbjWunCJ+ftadR3ZGOQx0ilgG9iVCffyv9sytxXt0e
L8UWBnhnqgJInnRc3hZb9c01E6uL55087E1H496CHw9U+EiRMNoo4E/4ZtmI
iLRNeZB2vC1QEkxH9ufXYhulWIipfNHiEk58vkWQrLI0HCKywrmK9+i49e+M
53cRawS7G4d+SKDDXePtMYXeMMy8jLSKoNDx3rtlY4gLE15KdRp76HRcaw0d
8byUjVEfiYUTbDrqOJ7JTuJ5cH5n+pGXSYd6gJPG61Pp6FkfW3gmn441JVmj
w99JsAl+FyFZQodQr2mTY1cEWtqXnn9RQYeD4ac96XkkHNU6se1mFR3nHP5J
BedxUXM3SVzjJR0jxwO6D4QVEH6q+XNvHR0MLVJ/TXAJHu1aXk5ppMN2Iqrr
vXMhdJMsY0xb6Vh0wGv6m04W+MPJDoKf6GD+em1ymcXBxv2demU9dPx8ZN+n
qsQGh7Zy6aUBOgR2fpFUOpiNVT/Pfl09SuCxtTg+3bQEJLO0yuZJOm7Lu9u/
3VAOyfTuxLu/6bD/olY7nlCCu3PKrnvn6Dh19nNE76kCwm9e0P8hlIYtp9uX
HTjNQyCfI5tJ8Hbb631eVx3omBbpHz4rmQaF7xNiUhd58LRb93yZbBosztfM
hRLzb/CBc/IrhTTo61924YsVwWFZloe/chr23mgWD+4tRJfr0H7NdWlo2Xpe
NeNxNiyfq6/sV0+DkEZAAD2XgkYF94kULeJ5DS9JE+3bMPHKrzm6Iw0JxTco
j3TjUF0/RhdCGtJHOs87fWQAa7SuPzBKg7fT1R8PH2WhPODaYfdDaaDmc/Ep
OhdaLcXKqkfTMD5WJPRuLQ/ZW35Ot55Mg/Rd7W8ZlklQC9/+Nto6DS9V9lgc
/uIC+n83OAa2aagIC1s1vcoPcjsqbv50TENi04tTZTpUJMT9Mc92S8NY4PGj
5IlMSHzbvc72ShreNK4qeEj43TsGgbPSPmkwXt2jabecj3/JTz689k+D9Y2G
kcoODm5MCGQFhqRhYeopE0+XZEyYGAZpR6TBbGmWgtrHVFxih1oM3EuDoPsy
Hd9uDuxT3u7bnZiGOSZvcx+Tj9PxK7TjKGl47ZNuUVFRiiMRDsp9tDRkm/fq
HCD8ruGt/CU72GlwyuKKki4UYof3zGxUBoHPhVtztzg52Hx5//B/uWkwLVb7
u6KRCxWHuA7tojSc31jxQvUWG3JnOmvCy9NwScOhbOfTHCw+vrasszINP17G
WPDqijH/0BWuxvM0TM2LET35qhS/9j5KDK1Jw+LPK5fRNUowqisc0vomDbTO
I63XbAvQt/m456YPaQjVfEvLusVFuxrt3K22NHzVSFLt2UTGW4WBIx8+pWHe
kOcRJUL3Vy/T3rWul8hfNj9Y6zIPFaKBG/wG0lD5rFLR9kMu8gVeL28YSYP7
+tKrJKUCcKalFqpOEvw7pspfIpiPlNFzP7x/pSHk2/Y02jgLsV8ye2pnifh9
SeJ73t+FoftN59h5DBxeoCLTscwNld/Szu8UYsDUIDZqtjEUOxxfWPQuZKD/
jLt5jDkNRd2DpvdEGcgSoZUozWRgi43k/u0SDOTqbAvZdiQXGa3bdn9ezMAT
8VM59NxMqJ44ox21lAFxkTMFY6lpoL8N2rhNmoH3unv6ZYbCIWfCU/5PloGG
rdHmq8RCkfiiTi5yBQPduNDa8Y6CxQbjS7RXEucZrzm9fXc6Ih/JCn9SZGBv
z1BRqSHRnzt2/wtTZkDe5qvOBZNiBBbZTW1VY+D3N+VmF4cC/N4SPtyxloHC
KElR6950eGXl9N7ewEClnewPzSgWRte879iizkC+5YO6xxdYcGFON7ZtYUB0
6n3Q9jLCf6xc9TpEk4EX/uQN2lGFOE8xrFLXYUCFZJdQLl2ODinnshZdBkiL
Vep0zMtwMvZeXtBOBnT/i2j0My9Cg1gRd+NuBrS2v8m/Mp4Lk7A2ahMYEDPy
Pf1iPQfV8/4lBhowECsVKxd6lom9AapR6/cxoPhtwFqtMgsVv4xD3h9goEd1
Ov0VqxDbvNx9/Q8xEEHa2pV6phj874mea48w8LS/IrLwZhE2uj24+M6MgUdB
JfpjJ/LA7e86d5PwnY6D19RMG9Kw2l7IQu0kA8dX68S9a4hCyqcNpm8tGLj6
JqxXiR8PGauj+25YMXBxHe+GmykDcU1eu1RsGDDjRX3tnMuAuHmKVv05BqyF
ov1l2HkIq3uywduOwH9NnbrazWwIHPyyerUDAwXXv+4weUno+WdicrVODKxa
/lnHfygMP/dsXeLlwkC2SHrDhVZzeD44tVDxEgMJh4/zKW4hGNLxm33lzsCR
hiRfcUGib/mMH1euMJBj9f1Yg3wWEvocwxd7MfAufvSR6Lt8PJHbJJ/9/7/z
Vlvt4rojD8NHxnIO+jLQd1qZYpXHgVxwyd4+PwZexp+36BUjYV/JzfdBgUS9
owf3Rwsn4cq3vY6rghkwOjToLL6IAfqqBb8ehDLwzOHvvF3pmag9VnvXIozI
N1CwirGqCD/vxK6ajGBg8/6Q9kVfSqFacZIfG0XcL1x2TcOuGOajK4zUYxhY
57o7bGV8HvxV/muuiSOuTZ58VpxNR4YFx9kxkeBzS1VYgA4HzXdd/swjMTBG
citedYQHwSdbYugUBu5nXH0msLoAWyYnV+9KZeA/J5/G3f2lsF73oKiVxkDR
mdfjiWZlCD8TeMCLwYDq+8+h2peKURxr1C7JJviTu3rnY2k+up+LXMrlMiB3
r3TveVEOJH69+Xcog4Ft4dp3JZ8lY6d6Ynx/FgMGk384N9uZcLK1VAvNJeZB
cEPfwTvZSEhaVabEJ/pnTiFg/xc+Htf0HHpUyED8/muysr8KMPQ3/aNlCQPc
uOchqYr5kNO87DFVxsCGPap9dpdY2OeoJZhQwUDruPHR7NpIeCZPJ22pZEDh
i1d00lFv0N48Wlf3hMBze+8/V2XC/84Lqbj4jIH5IWbdaw4y8HPbQVOhFwxY
zWnKWT/OhIqrRDfjFQNJ2rLe9KW5OEpvvLqnluDrF5vLV49lwP89aUFHPQPe
jTEO215QkbHQhuLdQMTzo/Nak3gomvSUN0m9Z2DnpP6Gn8nXMc+jvzK/iYEt
mxCjtzMJW9jZ5kdaCf448nuktnJh3erZO9BO8Lf9S9sdx3yEiet63yH2rHZU
z+VVDYUo2vtHROU/Bt6coK+vWVqA7mtVqY8/E/MpeNWHU4rpkMi4s+VMHwPN
BglrqH/TsOOjydPpfgZSKlrHvhM8dJSUPJn0jQHy2D+j+2e5SNjX3L91mOgb
RtFL76UE3jdSfN+MMjC9zcDBh16KwZzzEq7jBN+v+yoUaZRj+We1tIU/GNBZ
n3HX+kgx9skMarIJH31zu4XhmZp8eB7Kr977m8CT5PpkWCQD1ACv0x//MPBB
8PJ/BgEsvC7YOXjjHzGPG6xEj21Ix88v//xl5jFRntXy5PCHAqjIVy8pnM9E
8YrEBK3rJTAzi2SZLWRiQlA0nzpXDL8Qs21DIkx475ubDDQsREapVE24OBN7
7nZXi2/MRNNgm7XaYiYQkrFb9yIFAkr0kSpJJqSqNrzU6I3D5hMXgs5KMfG+
w3guSYTwceHrpWZkmFiwpzFQ9BMPYQ9HuCQ5Jpw3FAZcfZSLI34Rk24KTAjF
T659752PZbtUDQwUmTi3XPrg83oe2mYqY2SVmZjSIXt6iSaCXmH5cUiViejW
jo0DtxzhcHNyw9O1TLRImzAv3L6OjXoxPqQNTJw22nVuGzMZY7/Xv3BTJ/LL
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
7YpnCn6w0WeVoxaQXoRdpypnfCeI63973vLJnwTVVP1okyk2zKk0oT7Ch29p
e7xGapYN8dtO5zYPcrFpxrZ0fI4N0r7W+wcJPa1TGt7R9peNTQ5/3sxLkBGn
oj1owcOBatpc+L4r6Yg2vqpYu4iDOze7pt/tiETkyVbvTYs5KOZ1dFZojEPY
ZYGaG0s4yAu8bFSUVYTgZOu/U3wc1Gn/9rEopeEyLcPIaRkHf03fSrsVMnCp
5d2NR/wctGUVc04xyuH7TrZHQ4CDeLbL6uaTafCe8lhXuIKDr2Ny+YW2ATgr
xD61fCUHTmVXL4r+JvqH4hTlohAHnHqPVv7cPCL/7x7vW8VBjeW/08fO03Hq
v3AtUxEOPLvf+gz9rYCj74OrXFEOSGxd68/SHNjfWHlfag0H0Y4ndCbXkDG9
4liPtxgHD/4dTEpeKEJyfMFgM5EL06TqeQQ/5UJ55afvohIc/JNg/ifTWoKH
N7fPn5Yk9od08fWnODgtdJm/dh0H5yomlLWnqrGQ0Cy2XIqDq7yhaknXa5Cz
arncceK+0rf2VZpwqqCZZKPG3MBButy1pufNHHQL5+xZkOFAu1foePcqEs4l
fzC32cTB3cmWx9bXSsAvus2uVJaDXb0OV5zaaShLueg6JcfB+eZbfopCXBis
bvA1UeBA7NfbO7z9VXiXuiQsezMHylXOy1co1uDyGsubXxU5OH64/Xnady5W
p6fn7FEizk9t17AxJYMl1k9O3MpBsLjIq0zjHJhnbK5+v43An+bzu0InCyPi
5++pqxBzXjbsmJ9UESIyazuvqXKwqD7JMEeTgg0SPH292zlEDhFXddPh4FaW
6ajSDg5s9Dt9Eok6HpFMnrmyk4P9ymUhG5gkjGe/XvJUnQPhm3biRsEZiF8n
K7pxFwexnnxXrp+7DMVcTxlfTWK/fGfDnij74N76SuVWLYIfnvmxd7gpcMyb
1xEn7jPfNxa/U6sMc1JGJh66BB8+7mkrcWEgPT/+SP1uDroe+v9xPcKE2oYX
pwT3EJ+3Vc80opWjo0D6vCM4kAs6lt6jlgkPGbdgjj4HRjyHFFKV4rG4iHWd
dy+Rc/hnJu+IpKBg40zGEUMOzFV35x45XgzdYv0y0j6Cz7U7ZpcRvuPlptiK
WSMO/I5m3tI6XIULJV2N5sbE9e+E7dt4uhKCcpIdeSYE/3oFj3QTfZJSeur1
mCkHR8NaThXdocBInjZiYE7oq8BV7pNcCQbKJn6lHODgcu4I20e2FEEKuxd9
tOAgZra/cIUloWNSpJCWFQetojmu/ueqwd3csf76QQ7B40PC+sK1sCKvUXpr
TbzP3OU9eaoGo4onNFUOcVC7U2HqB52La5TyfaGHifrkHb8a/JqMjUpj1s+O
cEB28gq1TipCA1XTUe4YoefX2865/CiD3dbQs5cIH61sPbL+fBgDk7QHlx/Y
ceDf/zlHt7wCSduEoyXtOWAyeV/2EfNyG8Mu9exxDsqnQ96rKnFxX7m46I4D
B+prLlX58ZHhzPzCXOXIwfopBxG3/Az8U9l5+9RJDr6rGqYF/ohDNivoYaUT
Bzd2VfPc+5YEje0tL/icOegr+Lky+FoRutgrhmxdOFj6NuiGoTMNXmpHxqmn
CX6tLjfl3GdiWUXe33lXDhK2lM9qR1JQsuOjgJU7B2955Mcc3fMAropEkQeh
u7OdXYzX4Rh9pe0v6ckBJa/7jqSkNzIX9j1POcuBT3/7xdv3UmC0+eBOwXMc
DB5XLGBwyzFuYZ90zZvgnzfp9XaCp3kXXcf+nefgpdhBcv0WDsxyfCwuX+Bg
b/PuIbYRCdPNV2g/iTl95GDCPZWpPJR8iuY/68eB14nBada3LFgJpbgNXyJy
McfO/bJ3CeY18ltPBHBw+A0uskQqQDlOke29TPRLscK/5rY1OBJRGWYdxMFW
kxOf38tVYxG1sb/9CgfNNd/XnHpQAVZnu96+EA4mS67bHnAk/Mz085yGqxwE
rPe8F76nBMukB2d3hXEgnzwrckuNhqp9X4+xwzmo+nqnjrK/Ek6e01VbIol+
1zt6tOV3NVYmL1pdEsXB0/84vjZqNaivFbywPpqDmftBlgJ7K+DWv7YzLYYD
2xyDUNP8Eqzmk1MRus7Bt9k3jp/yctC8TfVGTBwHa7w1RiZfFcPrkM4XnngO
dv/SZxTfoEIi0Mgk6CYHQaH6WSSxCrQVHiz/lcABX+T1pDOtHPjet198LomD
mx23XTaYl2PDd9dTI8lEDh27zfhyJBmPVl9oOplK6FvczPBsnh8CdIOlX6cR
+ERcjTn/Lgbyp2KuHMog+L31Hq+jZjG6YlJeP87kYJvkA/N6QTqCWfla+4kc
M3nOhhbnwYDSC0p6Yw7BjxvLcqN5yvByvvKXVh7R78M4hrclkhEh22RTkU/o
3yt7tYJKJLabPWJvLeQg43O+UdGONLw7/2JlWRExT1SdvH//LkdsxuBZ6RIO
NMdz6d/6KrDrztf2jFIOLDf/G95gWokPQ9OKwuUc/PmgwWzezEKCAG/0dRIH
jCR3+bd7SNi9Y+UwL4XoJx210afGivDZVsIwmMpBzhhvUGFWKdKuyhVN0ThE
Pl0rKr2nAnvLVf95M4j58LZYVuJVDcYe6zh8ZhL4NF3x1q4n5tGEUf0pNlFv
HH1yQLwKxpLWEm85HLz4zza3QYaBX/rH/Y9wORjo4Ln1vLwYRW5uz58QvpSc
+0zppTwJFjcv7DSp5mA187ZJO8H32crgpOYaDn5JOgg8C61E+ZuYMZ06Di4I
5soqfyPy8aJUi8pbHHjfiOiQIur8T7GApnybgyjP+L+mq4pBs6Lykxo4aKRN
xakJp8D2UpWbTCMHxrGtI8ziNCzJa2rNaiLmtVmIcPDbYnDuPZIVvcuB6dAa
lTkdBk58eRF24x7RH6y6DlgUsCAg/L5/CcGbA+yeid8z5ajR/KZ3tY3g44eO
XaOWqXA5MZMzc5+of81km909D/wPfTMZ9Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$750747#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
UzbU8tj1DaFkREk+2SVnwYZR5Yk3+whcf2m99efxMTYORfnoShPxGHqqdjic
ZMM6TfF3a0E5KMLfCv9ZE/10793ePc3B6saC65mn2eA/8+miaWchnM+fOqJu
x8aBoI5NvScT8WQt77ZXZ9nI0iqMEvKNxK7SR9PuBK8PDnppTkwnIML65iNu
JzYSwkqfX39RgNG/KhkkZ6J+zw0fZukwYFg8dknXlQ3lD3zWtvuJuXEkX6eP
8P16OnGb5n6TsXraSsjvChtrBBlSHbcycCGN54uQF/F6n+d01cgtnH2WcX2M
8G1vvDvI/xl5wOaP1MpGH2KvKDsrZnkn4phCWVLiDaLfHXL/xv8Ww+TsAQnn
W2zw2B/rCo7k4FBCa4l2EBvV1w7dNV9RAjRbHeQLZSNDkW6f8ooC9bnB9uEw
NlSLt2X+MCH0y64rtrWRbHA9vRnfeiQdMjZ/vsZGE/h4HWRreSsX4tERfg53
Cfwc3pnol8CEWIPgGo0ENiRiS6W4qisgNJWXui6ZjYan2xwZOZXgEZeXGkhl
I0dTd8P+7eVYfbymvCKDjecx8UF/qGwsCTukF5XNRr1+R7lTWhF+Vb18aZfH
xgW3c2V3tIrw44vtWZVCNmDO1pobYuPb5rGJVSQ2HqipuWtTyzFy1PtmL4UN
slzJfq+PlfgYsHRdCZ3Ip+2mbZhiJXpKYjNus9hgUjZ7SRN97BwUlbEpYSNw
u+Mv8nQeWoXIVQrlbJxdqqdcnpaJZgOVw8uq2PDS/WZIXVuAe76NXd01BP55
zi0q8dBQST/iwKhnwyNd4Mil6BJwPnR/D2xko8Xk0aP2IyWgbnAMPPGAjSDm
Yr3JVjIKdKZ4ZFvYqHTZvUSOOxlZXv7Zfx8T9Vza7Het9jqSi1fLvXrGRo/x
MYp2YiBiu5Nqyc/Z2OX5wKPxvyyEr9lh5N9BxDPnJ6N2jorAfcxu81dsZOYu
n7QldKbfJU0nyTds5J42q1MUocIrt2XmZw8br+ISyJ8sM+H20iKk/T0bd2W+
2Qvwh8NpWR9fYR+b4KW/67nSSPyn6pJ3fYCYX8HfN/5Qyob1hTkFE6LOVbc9
MPKFAYv04HvbPxN82M/0/P64DMatPCazX9jYeK3NW5lcCr3FjHdPv7GxSWDr
pjxhJrQVpS/mTLIxtiHIXj++GKrnyuY9p9lw0+1LOSiSB4XEA2EGs2y0bknd
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
CPzfFTK7P10JB9v5jPlHxPzDjqN+xFz8P7DgEp4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$750747#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
nm6hok84/s763UqCIDtF4yX6fyYD1Bg=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$750747#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
iqOFy+9lJldgvnJN93zD9o5xDY321RQgu9Z3L6NZNu9/7qjB+a19+5UT2y9v
n5JffkyBaotau16MH1ux0rKjjgLLKSk+E+i8rjWxBc8ocG5X4v459CRDqfJc
E17P/5lrC1ozTOezVgsFNHvbnr1FXztmKS70ggIfJZ/0j6Dfy3geHmynwNNp
tu016C0/I4NZryjgy2N+pQl9vjmDHtWF69VP9qE36KZbt3tM3lKgrm2tEwMt
du7JKpkPeH8/kdpyD3324Bu1mT7Mb2hV/lN0mdiYy9OPFKAlP7h/E83+dSnr
+jAFHPifbyOhUxLEzVRGKWA0oztRgZbasVPw1RcK5D5YkE1B3+482uY7jvmN
0LeIQasFnIkT+kaBmvivnQXoZ2LhuqzvOB88D3ji0SbVWcvHf1DArSEy0xfd
Z8Oq+T5Hgd8dfOypaPe/LedTFiiwQeRgCNF+vuDTLuVFCnQ53Jt1REcf/Pu9
fQnvz8PBHoFowVHxIp9lCqzd3jt3EZ0bt9NNgJ0KrTXCxy3QilsN5Eo4qKB2
Pz/bFl354sygMRcVdCmT/MFo3XPhud94qCAz4XXCHN25+oZ1Eh8VgmduvjqC
titniW4XpMKREEENZ/S4ZWvni9VUmPmtPXeMyP/vT4leolQgi+w13oXmyP2r
z7eGCkNcP71M0NdhDWfRWmwvv+26EVp6aOdTQykq1KTqxm9G34kxCJ+QpoLc
7YhkDbS6wtl9CTJU4DrEdoq4fkNz+M+tclQorWvZvZHIn+eN+60KVPhknyqy
Cd3Pf9/bQ5EKVcp6uZpoD1arIq8SFfrV9rKvQy+Yjoze3oH94zU1+A99+edf
0lEVKhzlpE5sRa/OXmP/dRf2Z3e971p0vobKuqtqVHixK+bM31HcH/Ub9GzZ
RwXlR7z+RLw68mxasyYVBh+u9xBH68lGHHMD7N8t66lv2P51ww1ebh0qcMQ+
TyeOP+16v4mhSwWfdnYPfqL+edqijxymQovRTMkYxkOKRuCLPhXixMRuTKA5
j/9bjDWkwqodmQNc2D5tZk2VwjEqVJTOriLaS2eoBDSZUIE/7FZ9F/qumqGy
ixkVkrhV236g974/O8Fpie05Xml9QjeGRTBo1lRYuDc234g2lc4+o3cKxx93
O56If6y7v2HUjgqh44UCX9BeZ9p6LztQoVF0z3wt+jfn6A25M1RIPH1i80t0
LPOfWYMzFcYZr9UH0CKGEkJn3aig+oirqBpd+E3lxUpPKtjtlquuQm9PNYyn
eFOh72dldA/6oarzIV1fHO/VkM816CPdEWyf/KmQvbT8h4nuOp/9KDqICnNe
zs7NaMd1pSGyIVTIU45hEu2nHrXtrg+lgtfghPAtdNjp0WnHcCoUFbxtL0dz
sy8XrYiiQldQgNxDdCZVwp0UTYWEs92v0tGyR1Tlda5QQbRLvL8QXfLVcGgw
jgrV/5mdrkRrJjrnRV2jwij36x1Ee6eH5qInk6ggkaPJvI6OH9NNUEmlArfA
MLWIOF58FztvOhXCXbOiYon+H5K9MJxJhd3+woEx6EX/1dMPs9FL0qnE9WRI
bK7ptzC/IUeNItD6Hd/7PfOpYEHfGh2O9vk7YH6IRIXms2NGOeiMbe1tUlQq
rN8reziQyN/Jxwd/0qnwvbzmkw96MK7owcvbOL9nNG8koLkqb+2kF2H9O+ff
dUfvGLnGiLhHBc/aiWk3tLlwqLRVKRXel9VHxaNDtd0zlSvw/jgQ8uAsMX8+
1nzc1VjPRZHh9uim3CMxgw9xftfKsYWhJ1vVFqsfU+G+3VyONVr4t7zf9Toq
HGpXV7dE79ssNub+jAp3rR/tPo92sOA4fbCJCjnzU2uJeGzMbPe6FirwClfG
mKCL7g8bzbZR4drDexuI8bz++OpZWzsVtpk29xqif/E/1aC+osLStxmeI0T9
72fdv9hFhbNL5lau6EMeBVss3lLB/gfPNiLumZ1csP0DFXZd2vdXB53WFC6+
qh/H1zIf44iunvNKGviI11NMq9FGD8jaclQN4/k30a9roDlOGIaljFLhIUfX
w5PorZEaP1zHqLAuz4O0F21SrOiuPUEFHUnjzaro4F6JQYkpKpxXOThnis7j
4baamaYC+6nfKrvRDeoLL1tmcf54yyx3oMedPx8iz1Phd78V/zG0UEZ3Tehv
Kkx+/6SjhFarb1A1W6LCmVOnjDehbafLbm9bpsJLLZc/uugYacpGDnYaCG0L
dVRA3zFKu9HHQYM7S5qbZNCdoZcEKrhowCFP3U+0n2f6XknipUGJ3Y/Xsmip
t6eXnPlpULM9a4ME+iDn8QAQosF6u5RNxPjcd8G4uAgNjEjFwevQqY7bHb+L
0UBap+KcKLoyRerdcwkamA5WVRPt+x7/d7xQEq//LEtTEs0+udgYIk2DmzOG
2ULoLevG95+QoYH16crenejj+u/LFOVoEL1zYkmYyF9w81b2zTQ4ZP6xhhed
S60ifVDE8907vkMZXf+aLlGmRAMFFfd3IugxtqyUBGUawM9V/ER7AeUrq86q
0kDsfGPPNvQeu8Dw/Xto8Lr+xaQAkb+EM3Oie2mgUzdWyIGOfmDq+U0D+x8f
XrkZzfyiM9x4gAb2jlUOfOh2MZWT+do00PsCeuxoVRF528O6NAjOiayTQ2cJ
rT09pYf553jwnhjfIj+/U5Y+Db63eMf+GcH1/r8VzmBIg9H82Y9SxPxz/3T9
bEyDLYvkW2JEPlZ99Ug2oUHkxc9357B94sp+bzUzGnzWmG4RxPg02yvfAQsa
RLBZcBL5N//XEBBrjfPzr0p7AdtX/6kO3nGKBom8tqLcxHz+LrrQY0eDerKB
mzQ6ar7wYoQDDZbU2p//xvYjsxmRCmdosLjqTuIvtP5MfHS7Mw2qutr/rCHu
v6mLV4LdaHD5lfrTfxhfPekbL+1JA5PDs/9+oIO/nk1o8qaBnQ3Th6iXD5+t
k318afCBsjBD5B9GjK6LB9Ag9k+5xhS2Jw9pZzwJosHCpUBZIp+rPu6+4RJC
g5UTfjv40R59W3IEwmjgXj9UMYHt299L5VWG06BWRKaTmB/Vt0KF9lGYr0aj
l0T/sro4KKtiaHDe8LUbka/FV79oJVdocB2KgpfQ9h2TTMt4Gny925pJtH/2
YvDuv2s0qDP4o0yMd0trVwk9iQaFV0XTiPEkPm++fyyVBgPiLgPiRL4bHpXP
p9FgnK9Enbi+eT2rKj+TBlO+jdRpIt+11IeHs2lgfnFNBFF/Uo+zH0/l0KD/
9OVrxHiiHibWZeXRYO/1gXZi/KNVUc+gkAaKtX1b/8O4QUVg02cyDeRFMi8R
909JqVtLMo0GeacSuGawvTDL9oUakwYtFRQLot6Ci006Bu5g/1PUNYj5/3Dn
0OvYYho4rJm5QswnMPd272DRIPmcQi4xfjJN6V1PKQ2GaIM3iXrjomzsjaig
gTfHTZ4VxPO8UHRAoZoGvt9T/xLj78zjHmp/SAMXbqkhYvy7by19Cn5Mg9BF
xZfEfGZnT3+WrqOByIF66iy2X8oc+dpUT4NtOiudifYO6e8mfRqxPuZufCLy
3ZD64rt4Mw0qZp+dI+ZHMbnux5NWGhif+RVNnC85ofyny0sapP8w7SDG8yOe
+UugkwYdw9YriPFYxub+qXxNg2GXYf9VxPMtJvWffTcN/iixUuWJ9f7S5RVc
72igP37Blou4fyNCOO59oMGG9JeaxPg+h3lxWfXTYKO7ozSxXhpccOBd/kiD
XR62DOL+Lwk252cM0+BxSM8YkS/hQH2h46M0sFHeqUi0D/bbL7LwhQYxBmHU
Dehen53iBeM0CIrx7ibmY1quoXzfNxo0dTzQJ+Kreq3Mur7j+hWZtW4rUQ/X
J2Z8fuD5qp57EP1TPRKZyvMT8/O1nULc7/p/hZWpCzS4KtO+nnhe2JfRX8Ii
DXaKCbsQ8UB3Da/3SzQoeFgssxp9bUM7b+AyDcIz5c33EM/jbsfbAux0aOyt
iSPyUZnw88htDjrUsle8ItaLFzpXP+ty0UHYYlOqCnp4QerKAA8drml67NpF
PD+LWZsu8NGhTSNek1hvBc4eqhcRpEP6p9E3W9By6945lKymwzOawE5Aa3R6
LuuL0uHFeYFHxHpiEruc90mcDg0NH+SI67vsT98fsZYOj6f1zA+jL/5Q6JWQ
osMq5W6F7cTzlvnwQpk0HUhv/pDWE+ur/TGJYzJ0MG+3syWex09EhyvHNtFh
du1OOU1iv9QaZBGjQIfCg/tPE8+v8SieufWKdOg/e/M60Z5NPS+tehtaWYNE
PC/Fv+1UMdtBBzvmgUJivVeiNHR820mHkHthisTz6OBJa5/4XXQIN6xTMENb
C07ybVKjg1nETzc1Yn/VGHn38V467NBvPUI8ny+HiRhYa9Ihtn5L8Sl0jgpj
7McBOhxp39VsjGZ90YhL0sbr++5aQZy/Ka9dfosuHY65kY4T+4M+M6eGej06
jHAJ2xPH/+CZd7LTp8OmqUP5xPi4666u+GVAh1fHTTaYE/UcvL4wzZgOW677
RHoS95/SfdhuQgf1+LRmI6J+hw/1Pzelw/txtwZiP+GQ/S7MyYIOWlXrvYj9
X/Axr3V/rbA/6R+d7NCJHGwPbtjQgZr/R5fYT5Efplup2tHhJ593ShCx3/Hd
PP/iNB2yRCZbzhHPN4WaDFcnOjw0Gl5pgR7pO7aL3ZkOa2/ltQSgf6cNv8p1
pYNoecO5S0S9HA32VfegQ3J7WRixf5Jb5hF87UUH51Hmdj+iXiryir3O0UEq
XPR8ElEvnipGXP50IGs4ThLXc5FpHCcFYn28+3OOGO/Ft9ZX95+nQ4Gvxs1U
ol6SJje/vUAHB8FkXmK/zNSNavK7SAf/3XPhvkS9/BZx5ovE/uvfN8ok6uUe
YyXjEh2M12y8k/3//ZQmWecyHc79iGkl9ptsUh3afbF0gOncIaI/4q+dPgZf
pYPEvgxjClEv8fPhqxPp4KuUsHSZqBe4JlWUTAdPR8Ulor313Pqaw9fp0P4t
l7uMmD+1ONF1GTgfV1gKxH686vy097csHP/3QIkMYnwPTj6vu0mHMOkt3cTv
H/E/9RszcnG8mzeVE/v9xv1Koa4FGNd6+oX4vRIYkflGg4zz1cXO2UTks+6f
kgCNDinkHqFS9JsVbrFDDLw/PxY/u02sd7qvPpbfoQOPmnlsJ7G+XNHYF19M
h4DII5HE76GhJkraKRYdxL9IWtxHp3LzT+4oo4PsNeeyD2htg2A99kq0nsbH
FvT3hI/53dV02HX08f0n6PyX+r+YNXQw2EHyJX7/HRMsPXHxCR2+1/yQfIv+
ZyJ59/hTOrRItRgRxxenXebY1IDzrZxVPkPsr7q+2c030aFCMKRxGM0nblXV
0kKHNa/8Vr1B11jVCeW9wPG2c8ktEc//m4oevh10MHF1fjCNXteb9kz3NR0C
z73+OIhukVqSWtNNBxGbw5M8+Ps3xN45ePwt3j8CnVL/iP1TYXvH4w90kH4j
ceYr+u2QuuL1fhzPUwb3amwfu4kUfXYQHbIlgDhezZm3T/0THeTMvpxewPaj
9IA9/32mQ+ngwEcZjGeM9SUPjNFBaTCsSBJ9aOvhsfsTOL/FvtUr0XOe93Su
TNGh1+NUlCKaUixxy3oG15ehX4tyaNPvl+a2zdFByGWjpSDx/khlwnh5HtfP
GxPl+9D3/c0Zr3/TQWWT9yri/YZD+WM2+hLW13ZdLuL6QvMKNheW6eDTZTmu
h65VTy0zYmdA0TEuBcI+F37zbeRkwD3PuMvbiPcnNU4us1wMeJ/BoWSGfrnU
VtvEy4B/gTsdrdEXYc/aHH4GqIXtKgO0UlS+v7cQAySEpI6cQfc+5XqhLcKA
AD7j+67E+7aVfvKi4gw4EyQVZ4jW0PsQ8UWCAf5FBmHn0F9jdd89lGRAx8vh
S+fR2c1FKsnSDPhusOLeKbQ+r3iCowwDPkblvI8g3rcYRo7slmOAWNiGL8T7
K3rS2AHuzQzYklSq4oW27Dhxo1eRAVs73e8loTlX10yXKDFg8othZja63FTO
IFqZATZKm8gXiPd1GUkUC1UGxKxXP0u8nxPpmV/asocBb9wv/yXe79WvcbBc
UmeAoOptywS0/8mWex0aDLAc9qu9i5a5pcpDOcAAE479GcT7w86+W07B2ti+
6GxrDjpKmvPRUV0G5K1TVa9EKzv4iK0/zACaV/vf58T7Pr++xVp9BrT7FuoQ
5+ONNhh0MmTAX7cSyXpivGnVjZzHGMAaXCoYQo9QFO4yTRiw9JXETbyffF2e
kWpoxgDfnN5tzcT8NrIHT1kwwP3J8MdJdFGP76nr1gzICHnx8gM658uA9u5T
DBg91L66Ex33y0jhrR0DTtrtmFkk3t/y1PwX6sAAocdTvYSd1inOSJ1hgNTF
JINP6OPbbvTUOjMgtmq7NceXLq39+zkfObkxwM/X8CzxvnercQCJ0xPzmeum
Oovt19gPxTK9cb61ei14MM5x7riXoS8Damb0pjej34XvfHYhhwFUK3L2ZXRj
cj5TKo8BPOvUVALQpQV8ybUFDGh1zA7xQheyQgOcyAzY6ztw6gY66emYNSeN
AZeeHd+Tjg59bQlMBgN0F/eUhqHdPjVsMrzDgOOko6/z0BZzqjxTRQyIEL0Q
c/sL8fuUNJV6jwGLu9I3J6OVxQW7dpUy4Mp1czMiLrU5/EFPOQPq/i0VPUfz
7p3Iv1DFgMH9knNF6AX9k5elHjJgfnTj+XL0yMnn7rWPcHyXJ0feEd8zPPYc
d6plwAbpT+saie8VYZTdnPUMuGlrZfqE+B6RuHodswHr1b+NbxwddeuHb88U
A8TTxE6eGMP99l611aUzDHBda9dog07uunA/aQ7rg2WVo4sW9Xt8wn2BAZUy
2h3E96pb/Ct+HFpkwPQOv4QAtOydQ2kb/zIg3pt390k083C86tIyAzTDYqYj
0Mqf2l6/ZWfCn+4DtbHoykjBgDJOJhT5tcf5ovdLmYmkcDPBulGO/xb6WXVW
mcd/TChX43lLQRtYfDA7LMCEHopO0zV058z6OZnVTNC5npLDQlslO2b8FWFC
7s7euEr0wFba7vfiTPBaqTdagD77fKyrfC0TVtb9WteGnjijFJQqxQSxpcTq
LrQ/m6+Y1wYmRM8flX+C/pVbVnFElgmrShojR9GR+xYsNskzYcT4d/I4elWP
xvy/zUwQ4GC5vUEn+kdkfdjKhMTf+/P/okUE69Uqt2N/f+4UXvUV74e7nG+v
72TCm9f71GeI74f6R89772LCbfszUeswzhhJXHNUDfvz1/3DBvSOS51VcvuY
0CEVG8ODLl8vas22nwn92pveqqI1H1r96gUmKPoV5xLfX+stb2VX6TDBrWc4
fxNaf3Zgb/ohvL63zhPie25Hiux7nyNM4L2h62SGtlRyuWBgwIQv5D2yWuj+
5ttrFYyZEL76i407+qzztwcrTJggTAmVJr4fj69Qsek3ZcKNlaBkhfbLD1ys
tmDCsNnYE+J79S+N6pwMayY8HO+/dAUd8faPhu8pJrQLbtkSgOYM1Oo1tGfC
Gm/mvQJ0olBM2GZHJvyWsE+goIWLmyRXnsX5tCprTULfPMr7aMCFCXF3jpVU
ojd+NrZ96I71oUxJIb6/06OvL2V6MSFl34YSBnr7hu5cv3NMOP1keLqbyFeN
xAFjfybMJjkKEt//Naxt+7cEMcG9ocjiOfrpXEE4RwgTbpKLG6eJfF3/tH4w
lAkGfTJCP9Dt2zc/qQlnwuLTPTc/oi1aPexvRDHB8JIslX8c98suJf/8Y5jw
LMpgjvj7A6eVP/KPxTJBedz74Qr014I9WluvMsHUJ2dYCe27/8JHzkQm8B0/
2rsdPf/uUeRQMhOWwe6kJDo8iG3j4+tMuNJ+nl0fzSF8qC47gwmbC0I8iL+v
uFYS5xB4gwlfgyMNNNGrDdvYTHKYcFKz7xvx9xjZXwRI2/KYsLRJzc0dLX3Z
VIerkAnGUcfcrdG0jVlDw2SsV2mVm5fRSo/fX3pCY8JQ5UerK8TfV2yRLXFn
MqH0jeGVAHRFhscH0btMiPBUcLyFDmUrW1VXzASTw9InmWjw+qPqyWJCcNIK
j+vole90T4uXMeHvmb7k++hm3cSEpxWY/57Q7W3oxHtdVV7VTKjilQ9ioU9I
rh9ZU8MEus2BR0/R4nHOQs8eM0GffjhxFP3hR/F+nzomtC38sn2FLrCfd1v7
jAk8pX6Md+izrZDZ0MiEplvdTzgncD+lFvf0XDMTAo6UHFrE+DdSx7d1bUzY
wO+cPI0u5ZdY1/QS+3tU3WMdtg++4HDYr5MJLIHn2oRr93zhlfvDhJZtyxq1
aNOSufSrJrfho/q/u8TfD421/U36s3Ab2Nn+sc98x+dJh/uB3OI70MIR5Vgw
i+s7hWdqg9Vd2ParJ91wAdcHOz7z1wJFeL4rhWV/sP50/5K2PSuCV9oLF06w
dWuN/ZKZcfUshv5Rvc/LHN1aMxm3f76WKYG6dxxGQrzdWoFszn82vigBu9ai
BiHBbi3XbIGvYgH3gCRRzvlXpFvLJoG/SUqUBX/TmvUC13ZrQel2iUI3FtSN
WH7ykO7WGn+3N3itBws+jrC/zEbfWNbtSvPE+NnjUjfRhxSOq/J5s4D9S5sD
Cz1tZJN6xYcF538+ePUOnRvgPPXvHAtmJ1NHetBHc3yNQvxYYDXW0jyHnq8L
uzPjzwJSgOCzdRu6tchfYrk9A1kg9f1MiASaa/3grz1RLFjDR5vsR3fGpb1v
u8GC4zw9XHtkurUuluSp691kwYyMl5MdWrGbmfkkhwVv+8d5Cff8KZtVz2VB
+V++86HoaNnaE/fzWBB/8LIfCa18tPXe1gIW7LuUyypA953r5qcWsqBkc/lS
LTo+a9BzPZkFp/K4vw6i9zyeaMmisMD60tuIAXTOj0MPHe+xYF5m6GC+bLfW
4bUmEr0sFiQ737hMQs9qnQo2L2VBoqsJTye60MWl62UZjmfkpP0g2ijJT/VI
BQuGPrQ9+4r+VXYxta6SBeckhXXXbOrWon2Im9pXzYKDhW8CpdGmK9KNyh6w
QG5gW/YW9L/N+XeUaljQsBiTZIm+c+w2N/0RC+6BVbE92iqo3GXDExYYmrrI
+qM5cmsbsmtZIMP+ZigfzapvlRV+yoLbhRqkArTd1+6ohHoW9Fj9YitD8woN
DXA0sCDN6WpVL7pSbXJ/RCMLHr9mV+5Hn7FbyFloYsHoD0XORfT/AHoAHwY=

          "]]}, Annotation[#, "Charting`Private`Tag$750747#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
MnbZ8JJ1DljfKRS3QleJ9dgbOeTAqY8T37zR681lfFe55UCF7FkRG/TZmJBT
rZ454Hpn3sgQbbpxySNf3xyYergg4IwWfpTIveZ4DrxZOd5jgB7wWm9THZYD
k+5W7erkfVffyLM7lQMQfLDeAn2SpTT872wOyCnfCtZG61k27biekAOe3m12
29E8v0xO6l/JAW5361Q9dE/6u+aRlBy4Vt5xUxFdqO7JeTUrB4TNBm9sIPno
nTqglJcDdxv+JKqid58+nfOmIAfYAvMuyqI5pLgGI0tzYId+c7kQ+vnDTPkN
FTmQVSN2Zys69+jmEw+rc6DbwPyXKNqLs/KuV30OXC1N4FmJVmICx3/NObBr
FS1cHL1g3mZ281EOcLG+U/nRT6dsMqzbc+DCe0nxBXFcv6YNfpx/ngOx66+W
8GG5q1rQFuqbHDh2NENuBXrr+3+Be/tyYJXwq6QJvH7m1MXaL59z4HzQ/f3L
sbx5w9qll4ZzQOZVy+9/WH75Qb7R9nHM9xIDoS9oG88dKS9/5oBpNs/YPFpq
1d33YfM58GSzmN4U+nuZ4SbRxRxY7Ft9+C26xuy1bxN7LjzOMOL5jo79cbj6
CGcuVHSUf/mGNkud+LeSNxf4Bfq2P0OvU43SZwrmgo5T0tvP6MF3K69aiuTC
o/kVpz6iy6PS3kxvyAWHUr/FB+gICakN2dK5oFilz/UGve8+ywvkc0Huh4kS
eT6vx+6bn3fmQpf+vMNd9PsVrfNxqrmgEGqo2IkuKrXau1UrFxbYPf4SB5l+
uti1NxcGFUxiK9Gak34vgw1yQezYCTPyvBUpv0WEzXJhO8XsYCv6xa74Iw0H
c+HCsdevGGjKW36mq10unE8WtahHe0XSptldckHrr2FpI1pJfBuUHMmFwgfG
cdfRC021cabeuXCUM6uoAv3UXb/rR0Au1HtyztSQfHK8XJt+Auv/lMpGQbuW
uLhqROZCilTh22K0vMlY8YeYXJCNfeNE7p8dD/9xNg7j4/qiNhl9P2m5hszl
XODx3vOX3J+onHy2LSkXfGYD/UvQtm/E2wIycuHSt06dRPTGiDJ+AUou7Pa9
ZZqOHhdVc6y5ngsP1nEL0NG1jQ8LHItzIfZwj0ss+txhy+9srFy43qqVeQlt
vvzDrsKqXGBar3TLRq8v9o42rM2FKPXF69HoIaPZR9/v5UJrdVb5OXTF91ie
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
VIx2d5rNnn1UAXn7cncUov8H9hYaxQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$750747#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$750747#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$750747#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/KNhBhRG5FUHOZJRLGPpH3WUAVSdg8s3XckotS3nDf8YAwZj125kHCDyq9Gu
vvORiM9xotfKnIzyxm+uOE8wQCr2vinFmoyKz8O8/00ywMLsjVGsCVEfD1GD
oimCf8K2+ZsOGVV/1m42/0nMi18/f9CMyKhx3uHX1Azx/514XB2iS+TPN9+d
MsuA/Xp9X5p2kVGflnFTc4EBC+6xLmkkMp69es0gVvYGWHKJVYhO+eDsyQun
t4TeANrPCt4pex9iHncmxyoXwqKC1tb2P9644st/GckfCsFg2+22pwFeqHvF
ixZ1uQheLW2uSnx9HHuF9zjlGxSDVsi9sia+Yzjkt1ukYLIY4iS65yL3u6Pj
b8l7psk3QSuA27Z2jRuquPsJS5regk8yZundRk4YlTsT0P/9Fvi2+06yxw6j
0v03F5qKS+AUj3H6y8M2aMP+nXrJuhRMRgc5NTKscKLrz9Xl+VLYGDX2/bK5
OS6E3+N/vlQKJ3tWFcVKm+NqpTOpJX9KQW97ePodEXMUfashcp6jDGbYnRtX
rTZHhSu/sw5zlYHG8z8JmiNmqKFXJa7EUwajZ5+v+v3SDE2/+eevWFMGKTMz
Qr87zNA+b5fMG94yuEx5vtedZobell8LK/jKYLY13rEk1QzHu1/XH99WBvu3
3FMuGd6Hoz3VH7tsyuDqpIG3WY4pvn5K1s9jlUH6Bme/79tNUP6gkqVRZRn0
x+fl7NpkgkG9350nqspAfFrhPaewCbYcuE1OulMGoXSFS06LxsjXExSmVlcG
SY6isV9HjdHVUiN+sKEM7hxYXZb1zhjLuhbSo+6XQWD/BkG3J8a4YHGvSL6l
DMbe6n7rYxrj3ieR1d0PysDepb0BS42xqi15x5+BMpjbSuf1lDTGq/X1wkdW
lINRdEPRsJQRDmpFyK3kLocx7YQz73mMcHsdkMpWlUOJgM2X3dxGGKLJaWS9
thy2buTyefXLENvuPrSeW1cO+600OD4PGKKARtzRvA3l8HBwqfLIC0M8esfM
z0igHBL+DT4+2WmITDXeyAmhcoi8b3pQsNwQl6p7EpM2lcPRf/f2FDEM0Yf9
nrNZqRw2OEps8NtliEaFa75LO5TDvOIIn6q5Ae5gM2r/OpVDYmTCEL+yAfLX
a18Ydi2HcPHufWKKBjj/sM+i8Wg5VBQ9jH8pboAjvWSh3GPlkL32m4QlpwG2
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$750747#9"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{0, 
         Rational[1, 1000000]}, {-1.939626230288128*^-8, 
        0.33333333333333165`}}, {{0, 1.*^-6}, {-1.939626230288128*^-8, 
        0.33333333333333165`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"|1, 1\[RightAngleBracket]\"", "\"|1, 0\[RightAngleBracket]\"", 
       "\"|1, -1\[RightAngleBracket]\"", "\"|0, 1\[RightAngleBracket]\"", 
       "\"|0, 0\[RightAngleBracket]\"", "\"|0, -1\[RightAngleBracket]\"", 
       "\"|-1, 1\[RightAngleBracket]\"", "\"|-1, 0\[RightAngleBracket]\"", 
       "\"|-1, -1\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontWeight -> Bold, FontSize -> 12, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[{
               Thickness[0.2], 
               LineBox[{{-3, 0}, {3, 0}}]}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Bold", ",", "12"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.71263881975902*^9, 3.71263959215586*^9, 
  3.7126424681136436`*^9, 3.71264944346973*^9, 3.7126565017651443`*^9, 
  3.712660089223837*^9},ExpressionUUID->"e342e02b-9a7a-4c0f-bee1-\
f722a7a9ce41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"funcs", "[", 
    RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "tStart", ",", " ", 
     RowBox[{"tEnd", "/", "5"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"funcs", "[", 
    RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "tStart", ",", " ", 
     RowBox[{"tEnd", "/", "5"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"funcs", "[", 
    RowBox[{"[", "9", "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "tStart", ",", " ", 
     RowBox[{"tEnd", "/", "5"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7126361930584297`*^9, 3.712636221607627*^9}, {
  3.712636885659911*^9, 3.71263688610914*^9}, {3.7126369592318363`*^9, 
  3.712636959609654*^9}, {3.7126370223105907`*^9, 3.712637023634684*^9}, {
  3.71263708258571*^9, 3.712637082840917*^9}, {3.712637296286997*^9, 
  3.7126372965112553`*^9}, {3.712637569390829*^9, 3.71263761811386*^9}, {
  3.7126377764704227`*^9, 3.71263779826483*^9}, {3.712638341820595*^9, 
  3.712638344244294*^9}},ExpressionUUID->"878faf0b-a53a-4498-ada5-\
d6158b11dda0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$750861#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 
      Rational[1, 1000000]}, {0., 0.01994052023327623}}, {{0, 1.*^-6}, {0., 
     0.01994052023327623}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.712636203618482*^9, 3.712636223300845*^9}, 
   3.7126363683788767`*^9, 3.7126369623608503`*^9, 3.712637025441895*^9, 
   3.712637084339293*^9, 3.712637297848567*^9, {3.7126375835441027`*^9, 
   3.712637619310461*^9}, 3.712637800523657*^9, 3.7126383505240517`*^9, 
   3.712638502088187*^9, 3.712639381335288*^9, 3.712639430969122*^9, 
   3.7126394931088037`*^9, 3.7126395563899097`*^9, 3.712639592772471*^9, 
   3.7126424683009863`*^9, 3.712649443826518*^9, 3.712656501865937*^9, 
   3.71266008944687*^9},ExpressionUUID->"1d513acb-3b59-4a45-aaf6-\
c7c25db19cc2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$750902#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 
      Rational[1, 1000000]}, {0., 0.006860208039081206}}, {{0, 1.*^-6}, {0., 
     0.006860208039081206}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.712636203618482*^9, 3.712636223300845*^9}, 
   3.7126363683788767`*^9, 3.7126369623608503`*^9, 3.712637025441895*^9, 
   3.712637084339293*^9, 3.712637297848567*^9, {3.7126375835441027`*^9, 
   3.712637619310461*^9}, 3.712637800523657*^9, 3.7126383505240517`*^9, 
   3.712638502088187*^9, 3.712639381335288*^9, 3.712639430969122*^9, 
   3.7126394931088037`*^9, 3.7126395563899097`*^9, 3.712639592772471*^9, 
   3.7126424683009863`*^9, 3.712649443826518*^9, 3.712656501865937*^9, 
   3.712660089585073*^9},ExpressionUUID->"032359b4-d7dc-48ed-bf5e-\
669034162954"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3k8lP8TJ9GhJFdyRqIkyrqPGVdCkpBbUcjuypEchZJcpZT7XHZDOXaX
UI7kKKQcpYMiUlRSKsr9rX7P76/nNa+53zPPfGZkjvnbeK3g4ODQWMnB8f/v
RZf6EoMlEf2OvsbifnMOXVG5kLv9grP6SZuPKUvE7IDi579bSwS5wfDWRY6h
K84Aqezt3rQNwBcGr0QOesO3HTWPkgWF4ep5B8FuMQpord0YHuAoBuEKu7m7
+iMgdvKk8kGaNLDF/Sajf8YC2evjT5FAWbjwoEdM9HscXHuVahEnuA0mJRMC
ftZdh7t7jYpm7yjA/qrQZBepLHh75+cfT0dFiGW6jQztz4YV8gUOL5eU4HJE
bc4Wz3zYnnHgtjFNBZJOcEQlPC8Cj3KuK1GC6kB5efXZz/TbcHpsUKvOUwPq
9V/etJatggTxqo8/7miCjn3LzNGVdyHX9lKKwiptEN3my7l6Tz2wE93xqKMO
hH0VDHdIrofWh5rfMkp1oWpf4dNorfvwcpkvu3dJD/hWCt6+P9MCn0mf9vJY
AgzHDo/8tmiFJer9GX0awumnrqu4Wx4Aj82TpzqhBrBJvKFWq6kd+L+r3+yX
NgTqLMvjaWoHyMmvt+ULNIKLRq/VR78+AYuMe8xIwb1Qk14dUZfaB3aqChc3
N+6FLcUm1KF7feDWm+J0x9MUdrTPSDbpvQBvyl+VQ+v3gaTyvRYusVcQwEPh
mbqzDyLTxh2eub2CszdevU04YgbDRzrzT13sh4tgWC23yhyc4349q+5+DVcG
mZdaKsyBul37xTHKG8gIEXV3dbSAjdcVejm3DQJdIEZjgWM/+LCMTpwoegul
7B/r0kr3w4dOeekXz4ehysJlTMXGEk54HTpZTBqBxk8d9V1LlqBcfY/ny6FR
GLMPFtSlHYT+3xdTwqvGIOTMz9NfZa2h9TV/4fV3YxC+T95dO9QauBwb9/0q
HYcoYdf98V3WoJ4astqV9Alix5I1Xkkfgpoe9bVqOZ/g8u1HMltPH4K7QZ+u
NWz+DEnn/6wL7DwEyg/YnyNbJiD1AGmhScIGRHafOHz24hfIEiePrQu0AYfL
Htfftn0B2pf8Xud2GxgOm1IYcvkKN2pf1pdstgWJkOMK169+g5uxa4vnTtrC
5PWUPdlV36Dc1uC6yQNb2Gtt9jaM7ztUyoSEp4jYgaf1vcdry39AzY9y71GK
HUh7aunqjf2A+vvvDyk328FpS37y71M/oSlxk36E4GE4ohzxbtpnGn52/41+
73cYBPgFZTaVTIMs36dO0yeHYXrro7DVUjNgd7CHj7nNHsqEazlk1X9B3PUa
u40X7OH2rwPACvkFVumHfG9+d4Dj13nL1N/NQlS/VhWvhSMUXp69U8c/D1Wb
tiwEFDsCMmOOvrGfh3HHVdDP4QTZlrKbTr2fB5Gc7xd1XZ3Af0NKtfiWRTAb
evWYXusEr5tEaFSfRTgrcX8Dj6AzKN6wnxRbWgSmW9Fhqp8z4FjpwOjeZRjO
T8x99tgZ2g+VZh64vgx8o6feq29zgWObZAJ27fgPDGScFXKjXCAqZSKWO/oP
nDpmeJLjrQtIJm2ti+j9A0WF26u9NF1BLtas86bfX+gf37D4JMUVRvsta+Ne
/oPV8vOw+7srvIyrXhO+kQN1TozEpJu7wW4+nt+GXhzoW9L+ZKnIDTRTZmMr
pTgx/wuT353jCLjcr7UYMuXEZ4pp9u0uR0Dz29tX7vmcuMI3PE+x9gicuDmk
Y3ZkBaqxjn24JnAU1okYBrjFr0Dv7+bbZ08eBcnQthPsDyswS2WPn/PjozBB
sv25qpQLvbTWDR4VcAdqpUXzv+dc+Pf1vwgBA3e4qR/5b7vqSsw880u6/aQ7
+Lnrzk39XYm7xT4/CM11h17PD24tO7jxccOgl+JjdzBqPTfee4Ubj7n0rh6e
c4c1FoN1C0d5cHm5tfyanAf0Y7A/LZEH0/LuWBnZeICUhpBD/gwP7tIvnf59
3gNatjdEy3evwo7hvLRbLA/QbeLiSF9YhVc/aDP1xI/DtckmL3/bdSjxLWjI
e84LnMTcN+4LFcC0qBoQkPEGXfdT/tk1AsgrPMu4v98b+k99euuiLYjRperc
5BBveJr7wbr7iCAu6Yf4CDG8YZ9S96u6WEE89fxuV3OXN5jf/xGUvl4Iv3jP
K1PnvMFmUqG2fL8Qui9rpojInIBVFhw3ZtyF8PW1sNnW/SdA3Wbg3fn3QphG
itwgyfCBDQzquUHVTbguPM74xX4qlI//UP4ZIIExGx7dPBdChdaTND3xCglc
Lly1VpFBhU1RO/Lu2EriKS2zk6+6qLD8fXD/vyuSONmd8Cxqjgq1ggercm5L
4jGPxyQlGV9YPe3Y0WMrhW9m12QO7PeFN3qeu2eYUmh92WIpOsQXtP4m235q
lsJOqUQ3ZYYvzBQsHQq0lcaYB9dCL82dhL//yhNHNsng35juVwXWAdC5Ef7e
1JDDzjSK52WvAHAxDnLKtpHDlKLVv06fDYDsuk9tx2/LoWvNzQtHrwUASeZB
deewHG5rM+G3KAqACv70d3Nf5PD7iw/5avUBINk34tGE27BuLGqXdG8AIMeT
sG0x2zD6l1TjmrEA0HN4l/no8ja05Lpv8Xs+AIrCDQpW9W7D7AusZrOCQGiU
L+76m6KAaueSSqenTsFu2eaCwa07kRpqHWmcGAzxSYdjVx7fgxzjOR9+MYKB
nW48rnl5D6Zbf9xXVBcMNdpptp7Je1DxvgrL7mkwdMlGvvzVvQebd5wV4P4U
DHG7SvSZs3vQLqMt9M5/wbDxCUdZ5H978MuKDcNegiGQtWnuyD9NVTzn72Qk
ohgCP/x/2RgdU0XBt4W3OgxCIHGLvWqTjyqWmH1fF+oQAh1NItzbilRR/47W
KQW/EKBQqbfnn6ric5mLAwMxIaB2vSNDvl8VTyT16CXkhsBm17sxxzeS8J7B
fJ/5XAi0ih2fqGaTkHdtvry1RxhEUlqf9vxSx/K8r09dNcNhvdNEVzjo4rt8
AZF9hlGwoar2qOwfI+xbfS87R/oi6MrIo06KOV6Qk7h/idg7Tk9+rbjpYI3i
5yw/rkxOAOUnU9GXpm1RKnD1mA4lEbTEdcLufXbAtTdSP/4nkASfa5grmptc
0OXBV+NdDtfhTS+l47jfUfSKenFeuzUZnvmtjE2q9UDPYdkmXsFUmL3qGdka
dBw3rdI6oXshDeL9irzs9nth2aUdo3UT6RDwhuIZP+6Ne8qjXf7TzIRPNus6
yQo+OCkv/q5MPxMqo5zOdmr54I0b1cecjDMhq+JtVqWOD7pIWX5aZZ4JBq6T
73Zr+qBQzjj5rlUmzLzOehxk5oM9wpFTnnaZ8NJ//boCCx+MSxYOFHTOBH+u
u7tfm/ogrmf/bj2aCU/nZ+X+OPjgQoJpWIBXJvSs6t3t6+yDLd5r08dTMkG1
e+RxV6wPnvlwQzQ1KxMMyzgT11zyQdUjunmG+ZnQ/i7WRC3GB7++eSH9szAT
ThR8YHal+WDRYd/C/NJMGF7q33swywfd+lYqHKjIhPc9bDmdVB8UOUArW67J
hOMXA7tKCn3waae6cllDJtjF69JO3fLBBJPe244tmUBX/6YlfcMHDVu81Vd1
ZILPg3Ku41U+uKT7r+5OVyYceM5zLOiuD1bXZup59hH5eRg6jFX6oC9pd4vA
QCb075DZudTig9sqOo1b32bCzo0cLofafXBE0eOR/4dMmKj0s4tr9sGMm4sW
UhOZEGYmIOP31AcPyqb0dk9lQvcLbud1L31wdb6iTfivTLARHeJZ3Uvgs/nh
qx2LRD7p0o1NwwQ+6S5Or/9mgkxKtnzRBwKfjb/fxq3MAsYVMPZ5S+Bz5Yq7
+tos4E1xffv1K4HP6m3jYxuy4Mi7I6mi0wQ+MfdPpAhngWO04ujNSQIfDvuv
BuJZsLnYxWl2kcAn/Lvfjy3E3nvunA/5H4HPfNwMTT4LVF9YVT1cIPAJkg6x
VMoCLy4xoaFVZFz6Xru4tCcLjsVdOJOxnozVFOvIUs0s0OMpvN7EQ0bfTxMc
jvpZ4Crj9TFPmIzbjl2I4THOgomDcdcKxMk4Mrx59R2zLKAIqVtnCpEx06kq
8bhVFngMxVXobCWj9SuLDQJ2WaCQfOR8zA4yrjk0ltLilAW2V/o7D8iS8UF3
uIj/0SwQ5pq0rNlNxnAzoRxJryzIS4gQ3KtJRrU2pmQ3JQvkq2yfvVch4xTu
ZZwNyIKRu2aMNUDGm/eG5XaEZEGNsYbsexMyHtUMKRkIzwIp+Utoq09G0Wo+
pbgLWXAvbTBBZz8Z+5RvVajFZ0F1oFuoow0ZL5chaexKFoS9m/3GsCCjsfzr
u8kpBL5C0l9MHcn4HyNAxyArC7hFCyfLjpKxRnJN03daFoSvg6oeBzKezGYY
0gqz4Et6ZYGyFxlvVBsPT5ZkAb95d4HWSTL293wM02JngWDIwVgRgs87ES8U
V03Y42/7scaPjAYrFCtf1GXBh7flf9POkjFYonu/TBNRfyPPMecgMpZp+H32
e5gF1oG6Z7lDCbyt+S82dmbBAzd/n5NxZBSkVkmt7c2Ctj2j6/dGk7Fe7+Fy
yEIWrHSYyzG6QUbu0fE71geywYZ2XaJxiIw0+e2KK+ezYXfndu2dJhRc6Ris
+/C/bNgusXBZzo6CvpceWEavyIE1Vx8MGVtR8GXDhiOGq3MgSHtRI46g9b65
+nPw5cDNxGfTFkcoWCRZFtUsmAO1pgKVvxwoyHtwPvnc5hxYXLadvudIwVNR
JoX60jlAuatZuNeHgoO3k2v+k8uBtAznvAgPChqNjbTfU8wBD87L+7uPUbBU
SGng7O4ckBD1Oyd0ioL8pmcmtDVyIJnnVeEIhYJhoR2LC7o5sEuYi1TrS8HR
EkHeOsMckDZowNpwCu4bdJcI3ZcDx4/7Ptt8moJsXvYujQM5AC4K9hEhFBTR
X4ZZmxw4MGuZsSuWguf8zKxrHHNAkCsblSMp+LEg3SPoSA6sqJW1E4+ioGXf
h1OqnjnQ9+SacmgSBWtW7I6ZJudA90Q7v0QcBSXUItMr/XNA6YjYm9RLFIzx
enLTPzgH7Nr2b0/LpOC3jE11yuE58Oek6akxQt+20/PxVBSBpzIl82MKBRsW
bw8y43LA140/NYZOQdmd/75Sr+TAmxXXTscQ+pddLf8opuRA03iqHX8eBWeu
ZvNNZhL6be+DzEop6Nz8SbqUlgPULf7//hZQsPUnaY9PIaEf3TsmWEzB7bIX
jBRKc4j/9Szz3W0KXrfttf3EzoG/Yc+4bEsouBAj7lVckwPqQm+kf7IoePSu
T4hnAxGPr7ygRQMFOz7fid/akgPNEWevRFVSUHkzV/aH9hwwC950t+guBTMs
rMsYXTngpld1OP4BBf+E0+659+VAvMdwRXwdBT1Zk93SAznwhVvTfk8zBbtH
NEdG3uZAuZGZU+YTCqrxx/6gfciBaZmD2T4tFMw1fM7hNpEDp8sPlac/ouCK
IGkBie85kOEnue/scwpSiny3Dv0i+m94c+TWTgo+f1WvlrOYA8o3tvr2PaWg
zqpVpk7/cuCBxcze3YMUvKFl5yDKnQtPlG2O1BH8NRSGz8DaXNAo22Q9PkDB
gNzvZzL4c0HQR8S1/j0FX3frJh4WyYX7vx+vVyD4Bn8T8oQkckEksHFr7zsK
lqj0s17I5MI/eZU44S9Ef3psbU5RyIUFfvtQ/xEKhqYEPDu0KxcOWDvdTvpM
wZGH99/zk3LhtcPafJOfFDSdXfvrqVYusD0tspM/Ev0p77jyGuRC+ROLxm0/
KCjsWCxsZZILSiEMP9N5CkZcmpFfb5EL6em5iVe/UXC8AbW6D+aC9bprCylz
RH9+u2KeeDgXUsRu/BH7S8FqyUFnCxfCP09pyPFfFBQ7qOC7xiMXclo2SfX/
oWB01OnITu9cqPDfE/9gJRUPbOXs8PXNhYLNQeJblygo2nGVb+OpXKCsP3R6
H8Ef8xFzuBOaCxFWt2+U8VKJ/+lWgVNkLnj3usmMclDxDJs08Sc6F8KGi4/p
rqWiyaGW3TcScmF5aqnzmAAVN/y2PGOalAumNjE2kauoOJjxpnUyNReu3N5v
zsNPxWJt77XXsnOhZ8Dq4qQoFQPeztiQCgj5SPMDS+upqHv+fO5AEYHPzx3t
JcJU5JFdNx5elgv1Ie0BhtJU7GvLUtpSmQun9/WW2gtRMe/EtuC2O7kw4BJL
3SpORZ+1Vfd97hHx81cqn9hGRRILeNa3Evn9G/mVLEbFvwe7rG535AL3VOfr
kC1UfDLjkHm4m+AXrAh02UnF9PTxd4t9ufCR27K6nOC7awVuzx/IhbMqL+mF
hL2dQ38CjIYJ/rrgSck9VJyLvFz/6UMuXA29d6xQnoqtWzatSJzIhUcx+a5l
ilS88rDQQuV7LgzaKHqxNajo4L079cWvXLCoqjobpkRF2TX3h0IXc0Fv63Ru
ogoVp8rN5ST+5cLunl3sdXpUrLPq921ZmQeie0VOKKpS8eL0sTuea/Pgomnn
9D41Klql/fizmj8PCr5yVmkZUnGzZoQpSzgPbGvrU+s0qTj+ZvW1Q+J5sNo3
4PM7LSpWRKQPzG7Jg7+WPs6qplQ8Ky27JUc+DyS3nnGX1afi3gdsH1DKg/rs
M6vsCJrfS/f2hz15sCnHp3TRgopDqzoX4zTzwJtLVuWEERVvltkZ7dTPAw4B
5edFhP/AA+8vPzXKg2DHeXrSQSrq/Tz5IsgsDyzXStvH7aPiqtQlcVGrPNi9
+l/H871UfK4e79lomwer0je6TNtSkfZakOXulAdD80Uq5y2JeobTZ1cezQMZ
OS7nEXOinlK7oNQzD5hnrKZlHIl6ttTHHaDkgTGVl/fQIaKex02fTvvngc1Z
5uyjA0Q9eV5sygjOg9OaxWlbXIl6lh511wnPg6dFJvrLh6moZPmtZCSK8GfS
MX+N0J//HjYdHUfEE6UdPHWUig+SuXUUruTBtNXGjZHOVLyqlhLdlZwHRW+D
6zUIfccBqS7/zDz4Pdj1JuE4FbeeLRcUouVBuNbj16+OUPG7hJZr3Y08WHQL
jW8k4q1vbityLckDQdUfq355UzHm2KEpDnYeaG+7NLyS0D/IPaJeXJ0H76eO
35Ih4hUroZwzr8+DCK91LkoUKn60mO+YasqD0Ti1U2tOULFy6uKGlLY8uPbo
no03EW/4dX5HjSd5oHWJf5f6SSqakmj0wad50F9b8+EDoX/1NIlT6lUevJa8
qXjgGBVf3nns4TGYB5q8HWOKflQUnz/6oOhdHty/8n50TSAVj2nNyU6M58E7
lZ83OryoWHrmysWdk0S8j/4TCSHs/2yQHff7kQdK87fS+oOpqPFfnUnV7zyI
NrEQbST8ReofLJ5dzIOP4qwopi8V28595Nb+lwfug+bqL8OouLYl3DtiJQ1I
27iLmAFUPMQp8Kh5DQ0Ovt0wWUDIZxmVKHBtoAE74lLrzzNUfHcREkyFaPAv
/tPalyFUlG9/OXFpMw223uBp/UbEc5KHat4jRcgXltdGEfI1+zjL+OVoMHdk
n6VjBBWXEzLX2u2gwdDgL6EBwp/Rk13UTGUaHD8h3KVExHOJt61rkEQDqDnA
eS6Kis8snZWktGmQu543UZfIb1PSzyseQIMA3aStXYT/I0/jpoqMaeAjcO/R
82gqFvFLWk2YEfFUtUHGWSp+PVTN3mlFg+XKurydhLxqqvkGf1sabHIyeGJ6
kYphL9/5VznSYJ1Nev0Wwl+zcMizWTca+N7dnTxByPM4rNujfZwGbXXtHXsI
+weybiRH+NAg7vnLHStiqZj2Rmum+SQNciRfbTIh8h0Se2rDFUQDd1JTCBL2
ZF29qk3DaKDpcfRpVAIVybRlwcuRNMg7/idiUyTRPyPJp3uiaTCc8zJ97zmi
/6W3v+JPoMGPlZ5TOy9TETya1O2u0kDh0ITq0AUqxt6wy8hMoQHfVo8PAoR+
99jk3GAmDTI5WP/mLlFRYNsFBykaDaxuMM90xlHRyXtTnccNGvivW7pkQMjT
b7FEi2/RQJW09EWfiOfThPGZCSYN4os+rV2VSMVdioNvdlYR8c6uurT+PBVP
UwN0/Gtp4Mfd68oi8r3H5MmtaqRBf9zNx8NXqbjie97ybCsNCim1D60IfMxV
SK7aj2hwvo6hIE7gez3gcWNENw08QiQbR5KoOHD7qGRLHw3KRsW2hRPxSf2a
jeQaoEHG1I7V9kR+XmpXRkzf0qC6aXGIk5BnBsvi5fdEf26P2NdF4PHrbl1B
zycauL3L+vmbwFdnwYpj4zeCJnlsLCbiv6D90d1umgatJvXG3oR+59nw1sw5
Gqxy7o5VJeLb0LhRdmiZBh3OryCEyN/+z61oKc582JcVmpZ2nZh/AGMePPlw
I7zI5n0MMb/PvzQu5s2H31vPhFsS+e9spRRN8OeD3+ot5t8I+VMrOLmVRPIh
x8eT8X97dcaZXv7i+cBUnbkzS/j7F7Oro2pLPozM7f564hrRb8N+eSfk88E4
3PzJPJHPjHrlKQmlfJDxbzYMIeR9k6bN+vbkQ9HfOOEjhPynT6rScZr5YFdZ
tHqIkHfH07M6+vmgSBV7dpCQf5N5p+uHUT6MaZd+2kHI2/ycYxSZ5cP3uL7/
Ugn5bjOtMCcrIr71SVv+EfiaMs5Y8dnlg9YNHs8uAp+WxQa5h0750P/ApkqW
kNex+W8p9Gg+KNXtUY0h5KvL9PuUvPJhr+tInBEhr8R1/tZ7Sj5kvCraGU/0
202XlsiMgHyo2SW9+h1Rjy01nHb7Qwj8Vre7XyP6I2edsSJHRD68vBZyupXA
R8grhuPOhXzweWdcvIGQT7rf3k+Ozwepseml21eouFpkFUvqaj64vOS91hdP
1NPP7OKLlHwI5G3mFyH6canjklNCVj48eTrsU0bU+7R0l4p+PhF/klFcLdFP
30PX8cwU5kOEatChGaLffZ4deHuzNB+klS/cDiPy+7D9WpVLBYFXdbNTEFFP
1wvPEvjv5MMjiu+pImI+9b/ZeLS9gaifNOcnCSK/g6q26mdb8sHQgyzATfRD
5+U0XpWOfBAItjunFE7Mr7FX78e68uFqBjdvJhFvo+6muqy+fNgt9q3al6iP
Rppj0oGBfFgdzRVzmZgPld+yPVcM50OSeYLKZ8K/4t4hndoPRD8VHbcsI/Ao
okls9J0g8jvwI7kplIqSc26ft3wn+kHXxn494T/DquD+q1/50Bi+/cN9Yl7w
3xpNvbyYDwtyZxo7ifl4+Z8MBf/lg1fLlytrCP8rHY8b/F5ZAIevlcXeIvI7
V1kkUrq2APwppiKlQcS8Wf3pmxs/wXeVfzVE4BvgofBQQKQANhC8E8T8nKz3
yX4kXgD2du3FR4n3yFOgzD9CpgA2WW3RiyHwHaF83btHoQBy22pk/hDxOj5U
kvikVADSagN+34j3rE/cbyZHtQDe6TU+XEHgZXG6ovOgVgEkPcvVIBPxtnX/
zF8JBcR94njmIPHewDbV4HrjAthlaXHGgXgP6iKD9vuZF8CH2Ijk8lPE/O6v
kdl6sAC2o1l3ApmK5cpz8wN2BcDZ0uUWTdiTi9fsveJcAH+q/um1+VMx/11Y
kaF7AbRdfXoqi3jvRbUazs55FYB5yJXLFwl7KdeXrcupBZDZ4WlZTfhf90VP
wT2wAPbyaYSeI/aBWMNzf4RCC8DpqAG/C2Hvb3bzi8cRBbBFovhxGOE/bIaj
7Fx0Adxm//ms4078zxZGUaSEApCzSVuzhrDnW3jRfuJqAfCtYHcIEf6P5fSa
6KUWgGPpAZfrxH7hkLyZdD2rAMz+3vcmEfuEZYKnzDiNqMduo9gq4r03Ol+x
QauwAKy/lmpJO1FRK2TpT2JJAYS45nvOEv52ndz77R2rACrH1x6N8CTeG8/r
g6TqAlBvOruxx57I12WoM76uAHbQn7lbE/sTn4187dD9AkCVx6ECxP7BZR5Y
rPKQkOcyij1B7FML2Jh6sbMAvnLIaXYR++B3jVXRAz0F0P5iJNOA2KfGd9kE
7HxRAJ+iRTiu2BHzR4525PzrAtg9v/P5e2Lf6xWfsHwxXAAd/qXR64h42wRI
ugpjBZB491hLI2GvYc25HeETRH0DZ/p/mBH7MMfjTU+nCqCfW7m10obo/3lB
nq2/CiDdg/doEEHnfD/yO2ShAJQ4pm9uIfbVax9LPzz5UwCfOftXpe4n8PE7
63ONkw7CJqXJatZUvP+l4Kj2Sjqs9ylN9ST2Yy2vdvsxHjok+wuZqpsQ82x0
8sDVNXQ41HHsNYvYb5Vd+fdqrqPDl4Xr2uEGVCwZUNd7z0eH3BcH90gS+/dW
WxdS4kY6nJwv9r1H7M/5vVGK6kJ0sNz7QXIRCHwtbsq8E6GDoyFJupm4L1Lb
u0QvbabDQLjSo1PEPs5nOL2BJEEHIYnYu86EvUuNIquGpejgJeV/0Ye4X1Zq
6f2Nk6GDxG0JOwkd4v+s9pjdLUeHVdwTp8R1qbioHP9tUJ4OoZ7jxuq7iHlX
xhyL2UGHdfVjt7YT98j3bc8HlZXo4PrNebGLuDfIjPm+18p0yPht2buKuH/G
JSQfR++hQ5qmfYEEQR/NMmpRUqMDaYt6wjYScR8K+tT2a9CBZnuYkqxARbtr
V9lR2nTYbP9nf7gsFZ+urS5W1CNoVkmNEOHfIu513kugAyNky2434h5r4/yb
es6QDiVHE96yifsPI7cmbjehw8GTCpzNBL9hwSz6uSkdLuR4ZX0k7HlX0n8H
BtJBpfA5rxdx76aMe8XznaZDz1RUextxXzeL7hQrD6FD3UOFW47/UfCb5U/m
vjN0MDy+PqGUuH9FL9zB8XA6GGkev5g9Q0GTO2efR52jw1XvQV0k6MAv6CV5
gQ55V2P5vxD3db4k90L9RTpITVnOVBP3/pNDTy7bxxH4dmkLz0xQcC72muSv
BDpwxWXI/SH0tzbYVV5LpMPUI83KLVMUtP6+2VgpiQ7pq7Lt9d9TMEL23avO
63RILfsYZfWFgiX2RT5eqXSg97qWdBP0q8vkZc4MOtTKtsUFDVFwRbNyUn4W
HZoPKByuG6Gg8q9fW3Rz6RCSiGHPxinorFBfPUCjQ2vw4Bv7AQrGu5wzPU2n
g/4gGFi+pGDNNeM3/IUEX2zRtXKYgqMPV/uyiukQNRryZwfBX7fQ89e8hA77
E7hu8XRRUFspNflTGR06aJGe5wi+t7uj3EUWHeZfWNWMP6NgSppkrXQlHYzl
inZeekjBps4P5o1VdLikf2f25WMKfv3v1lvHO3QQuXHwVUQ3BUX3nPSfraVD
fPuNsu/3Cby9VFekNNChcX5yBbOJggHZ82nK9+mgqPlDQaWDgrSeRoWuZjr4
dgart9UTeHNGN5x4QIewY2eEhGsIvNX3HVjZTofuuLzhGsKeLGXdKP0RHT5I
tbO336Xgwfy+U/pP6NAUPGPys4zA+3kG92A3kU9NxH/21QTePK5ZIU/pwEF9
Er22ioIvdWR2Cj6ng9PrtAx2IQU5/T/dr3hJB3Gh9OzBWwTeheXWlgN0eLhx
xjCISeA9EDA28YYO76/ezVDNp2Acr0ZI7Fs6PPgRuM0ij4LVuLxa9h1Rr8IC
WlcRgXdQS27TezrIX3MVfZNN4F0Sq+wyTofX3HFj5ckU1Hpr0Tr/iQ7+XB9L
VuZS0Iuf3y7tCx3MIlaF3Uwn8DZ59Wn3Nzpszd/F35BA4B2Wc6bnOx3Kv8nF
5F6j4CTz6DrKNB3EEhrZidcpuOm9XAHPbzqMXzi4sfICgbfw5J7COToEZunw
hl4k8DavaMNFAo/fs+WVlyiYF3na4e0yHXTKgvfoRFDw8W3tybC/dIi1740o
CSXw/vg3QpiTAZ4X19dVRBF4i7VtqOJiAFeZdcQVgh93b6o4Q5QB7W4Sgg9c
KWgZnvCLKs6A/qnfAkvHKSigu9XQUIoBljtCra0PU/D10v0kERkGxKDgx3Yb
4v9qcHz7dSsDKmv/Jeg6U9Dz7K8drfIMMD59+03Hfgoq6iSFZuxgwKs7HEnF
ZhT8ubi9narEAOXu+k5bawreqX8oYKjCgA0qL/duNqLg2TNH3EVUGfDkobSf
B1DQQHuR9VWNAdM2HYLGphTkWUxdbtFkQMSzaeY+LQp21ymbZ+gQ/pofNy6S
CLzDHmdQ9RlQJj2SskaPgo5anuMGBgyQOxopaqNMQamFv3tEjBkgPllL89tB
wfHa7PNf9zKgWqTR4NYeCpaFqvW0mDFAcu79cS05Am/Np2IZ+xnQuO7qvhYp
CmrMk32oVgyoL98vLaFAwf/urrxrcIgBGSsjE5Y2U/BBSAGXiB0D3t/3X/1D
kIIJGjqHvtozQF9AP8ZHgoJWcy/zW5wIPDmfJ2dtoKDQXf9v6a4MWDy85sDy
agoOBq/VoR4l7Ot0P76ykYJ09eJ4g2MMcKUOpglwE//zLL4S9mJAyg5Jw49/
yKh0Z1D26wkGrHjXKXaJh4Izp4MDWigMeHNIJdlniYx1avxN6ScZcLcmgos1
Q8Zzv8t4qQEM0BNOuuK2TEbjmr1OBkFEvd0OBOT8IOPq06M3hUMYQBcNarb5
TMZeUvjvyTAC3+Lvkmt/kjHtl7BRSzgDUp+t3FkyTkbn6spr6ecImku0vX+I
jFuC9g9TLjAg0XC/yjWC/0n1k6JBDAPixF68SH5DRuZMVJhwPANGAhrPaz8j
46kq8Y7JSwxYHi2WnHpNRq1TdwVbrjDAaX5NqEMvGf/uOeSRfo0BRWHyMuFt
ZGyb/sqmpDBAjXpip1wPGS/fjvsP0xlwIf2O0OIDMloHylgIZzHgl+mL2tw6
MorsacyczGHAR620U2qtZHz70/5jM43A9/Kq7JBaMt6onFZNpzMg3f0zNZdJ
Rp+AK1GUQgYMWLxZI3WHjMq7FXrxJgPmjfR5n5WT8fePVnHhUgY8t38TfZZO
xoYKV/JkOdFPfseM3peQMcp//m4zmwF+mnvDuQm+qUrKyvTbDFDvDCdrp5Fx
3Q8lG0oNA45/EL96Lo+MfexHBVjLgMioxSURgp/hd2xKqIEB4y0HbV7Hk9FV
+Y/OZCMDGmSGds5dI6Ps98yE5mYGBA4XnVuZQMYJlmp/2gMGXLQLNHIIJyP7
ZM9WSjsDLmW2HTS7SMbTu3wCsZP4v3St/vQQfJ2pFc1CXQwwuP7c7q4fGTlY
tHWTPQy4ds5RKDiEjCv19D8lPWOAo/3DobIAoh+63jaTXjCAY1bf0fsYEb9z
RPbrVwwQHTvi3XCCjBu+iAdFvmbAasbUmBVBC4Tds5QdYsBsLTnKz4HAf5WL
/KNhBhRG5FUHOZJRLGPpH3WUAVSdg8s3XckotS3nDf8YAwZj125kHCDyq9Gu
vvORiM9xotfKnIzyxm+uOE8wQCr2vinFmoyKz8O8/00ywMLsjVGsCVEfD1GD
oimCf8K2+ZsOGVV/1m42/0nMi18/f9CMyKhx3uHX1Azx/514XB2iS+TPN9+d
MsuA/Xp9X5p2kVGflnFTc4EBC+6xLmkkMp69es0gVvYGWHKJVYhO+eDsyQun
t4TeANrPCt4pex9iHncmxyoXwqKC1tb2P9644st/GckfCsFg2+22pwFeqHvF
ixZ1uQheLW2uSnx9HHuF9zjlGxSDVsi9sia+Yzjkt1ukYLIY4iS65yL3u6Pj
b8l7psk3QSuA27Z2jRuquPsJS5regk8yZundRk4YlTsT0P/9Fvi2+06yxw6j
0v03F5qKS+AUj3H6y8M2aMP+nXrJuhRMRgc5NTKscKLrz9Xl+VLYGDX2/bK5
OS6E3+N/vlQKJ3tWFcVKm+NqpTOpJX9KQW97ePodEXMUfashcp6jDGbYnRtX
rTZHhSu/sw5zlYHG8z8JmiNmqKFXJa7EUwajZ5+v+v3SDE2/+eevWFMGKTMz
Qr87zNA+b5fMG94yuEx5vtedZobell8LK/jKYLY13rEk1QzHu1/XH99WBvu3
3FMuGd6Hoz3VH7tsyuDqpIG3WY4pvn5K1s9jlUH6Bme/79tNUP6gkqVRZRn0
x+fl7NpkgkG9350nqspAfFrhPaewCbYcuE1OulMGoXSFS06LxsjXExSmVlcG
SY6isV9HjdHVUiN+sKEM7hxYXZb1zhjLuhbSo+6XQWD/BkG3J8a4YHGvSL6l
DMbe6n7rYxrj3ieR1d0PysDepb0BS42xqi15x5+BMpjbSuf1lDTGq/X1wkdW
lINRdEPRsJQRDmpFyK3kLocx7YQz73mMcHsdkMpWlUOJgM2X3dxGGKLJaWS9
thy2buTyefXLENvuPrSeW1cO+600OD4PGKKARtzRvA3l8HBwqfLIC0M8esfM
z0igHBL+DT4+2WmITDXeyAmhcoi8b3pQsNwQl6p7EpM2lcPRf/f2FDEM0Yf9
nrNZqRw2OEps8NtliEaFa75LO5TDvOIIn6q5Ae5gM2r/OpVDYmTCEL+yAfLX
a18Ydi2HcPHufWKKBjj/sM+i8Wg5VBQ9jH8pboAjvWSh3GPlkL32m4QlpwG2
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
       "]]},
     Annotation[#, "Charting`Private`Tag$750943#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 
      Rational[1, 1000000]}, {0., 0.003365003104591805}}, {{0, 1.*^-6}, {0., 
     0.003365003104591805}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.712636203618482*^9, 3.712636223300845*^9}, 
   3.7126363683788767`*^9, 3.7126369623608503`*^9, 3.712637025441895*^9, 
   3.712637084339293*^9, 3.712637297848567*^9, {3.7126375835441027`*^9, 
   3.712637619310461*^9}, 3.712637800523657*^9, 3.7126383505240517`*^9, 
   3.712638502088187*^9, 3.712639381335288*^9, 3.712639430969122*^9, 
   3.7126394931088037`*^9, 3.7126395563899097`*^9, 3.712639592772471*^9, 
   3.7126424683009863`*^9, 3.712649443826518*^9, 3.712656501865937*^9, 
   3.712660089741251*^9},ExpressionUUID->"952cbbd6-e243-4572-bdf2-\
4a654ca6ece7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$20506#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->NCache[{{0, 
       Rational[1, 1000000]}, {0., 0.4958893751040806}}, {{0, 1.*^-6}, {0., 
      0.4958893751040806}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], "1"}]], "Input",
 CellChangeTimes->{{3.712642396527513*^9, 
  3.712642396544477*^9}},ExpressionUUID->"9ca01ff7-f734-4558-b80e-\
e90af178276c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$20506#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 
      Rational[1, 1000000]}, {0., 0.4958893751040806}}, {{0, 1.*^-6}, {0., 
     0.4958893751040806}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.712642468637694*^9, 3.712649444245749*^9, 
  3.712656502040291*^9, 
  3.712660089821578*^9},ExpressionUUID->"ba047541-3460-497b-be6b-\
01716a3e9cc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["v"], "Input",
 CellChangeTimes->{
  3.712637628007361*^9},ExpressionUUID->"a9124b41-0bcc-41f3-aad2-\
3b0684e687e1"],

Cell[BoxData["v"], "Output",
 CellChangeTimes->{3.712535458521215*^9, 3.712536210560768*^9, 
  3.712537180291471*^9, 3.712537563121862*^9, 3.712538426391841*^9, 
  3.712538723220418*^9, 3.712539091809854*^9, 3.71253974611703*^9, 
  3.7125398653981247`*^9, 3.712539899633627*^9, 3.712540414829588*^9, 
  3.712545333630535*^9, 3.712549008927782*^9, 3.7125490403098392`*^9, 
  3.712549120659017*^9, 3.7126122097879744`*^9, 3.712612865865046*^9, 
  3.712619975603387*^9, 3.7126233819064503`*^9, 3.712623757698184*^9, 
  3.7126239128937597`*^9, 3.712631224675544*^9, 3.712635589554926*^9, 
  3.712636418582658*^9, 3.712639593768525*^9, 3.7126424686510077`*^9, 
  3.7126494443102503`*^9, 3.712656502046653*^9, 
  3.712660089880705*^9},ExpressionUUID->"47ea4d81-505c-4ec5-a819-\
a79ed1fe834f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3.1431151730484695`*^9", " ", "+", 
  "4.980766242049094`*^6"}]], "Input",
 CellChangeTimes->{{3.712637162810494*^9, 
  3.712637229536572*^9}},ExpressionUUID->"dc625360-e359-4736-87d5-\
dd7ef84058ae"],

Cell[BoxData["3.1480959392905188`*^9"], "Output",
 CellChangeTimes->{{3.712637182697666*^9, 3.71263723009619*^9}, 
   3.712639593835927*^9, 3.712642468704598*^9, 3.712649444379798*^9, 
   3.712656502065043*^9, 
   3.712660089972275*^9},ExpressionUUID->"0fe6d7a2-f689-4b7f-8aa9-\
c56d18993882"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run simulation", "Subsection",
 CellChangeTimes->{{3.7113406549606533`*^9, 
  3.711340658260653*^9}},ExpressionUUID->"400df2bd-2225-447a-820d-\
ca2f16c7d59e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stateVecs", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", "9", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simData", " ", "=", " ", 
   RowBox[{"RunSimulation", "[", 
    RowBox[{
    "pulseFreqStart", ",", "pulseFreqEnd", ",", " ", "pulseFreqStep", ",", 
     " ", "tStart", ",", " ", "tEnd", ",", " ", "\[ScriptCapitalH]", ",", 
     "spins", ",", "stateVecs", ",", "density0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totalSimulationTime", " ", "=", " ", 
   RowBox[{"simData", "[", "\"\<totalSimulationTime\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.711340659287634*^9, 3.7113406616108027`*^9}, 
   3.7113409593149033`*^9, {3.711341636991076*^9, 3.711341640040976*^9}, {
   3.711341732441669*^9, 3.71134173686668*^9}, {3.7113417999192677`*^9, 
   3.711341827117606*^9}, {3.711424676672743*^9, 3.711424678598373*^9}, {
   3.711682274707357*^9, 3.711682288731346*^9}, {3.711874609692787*^9, 
   3.71187462356533*^9}, {3.71187715063233*^9, 3.7118771528558207`*^9}, {
   3.71187863269071*^9, 3.711878658214672*^9}, {3.71192294085842*^9, 
   3.7119229447053127`*^9}, {3.712020042608818*^9, 3.712020043257062*^9}, {
   3.7120262196324463`*^9, 3.7120262248071737`*^9}, {3.7120266615361*^9, 
   3.712026666384459*^9}, 3.71202687571187*^9, 3.712452299223648*^9, {
   3.712454923885626*^9, 
   3.7124549401356*^9}},ExpressionUUID->"606c61d1-0adb-4511-8b29-\
9d9ddf5ba0bc"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,383,17,27574284285643904845,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7126239325144253`*^9, 3.712631249392633*^9, 
  3.712642471655108*^9, 3.7126494484222193`*^9, 3.712656505218473*^9, 
  3.712660094093865*^9},ExpressionUUID->"3b3905d8-5c59-49e0-ac67-\
9e69ee4441c3"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"t\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"4.5890666679733816`*^-7\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.896302649387771`*^-12\\\", \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"1.4968953037272438`*^-14\\\"}]\\) for the integral and \
error estimates.\"",2,383,18,27574284285643904845,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7126239325144253`*^9, 3.712631249392633*^9, 
  3.712642471655108*^9, 3.7126494484222193`*^9, 3.712656505218473*^9, 
  3.71266009424642*^9},ExpressionUUID->"5a000f35-15db-4a8b-9bfd-e7fdc73ab115"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,383,19,27574284285643904845,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7126239325144253`*^9, 3.712631249392633*^9, 
  3.712642471655108*^9, 3.7126494484222193`*^9, 3.712656505218473*^9, 
  3.712660094454546*^9},ExpressionUUID->"978f90c0-25c1-48fb-8d3c-\
1fa207de8b2b"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"t\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"1.2010941667973382`*^-6\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.1265479029468126`*^-12\\\", \\\"+\\\", \
RowBox[{\\\"4.911851960222341`*^-28\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\
\\) and \\!\\(\\*RowBox[{\\\"1.401953908401297`*^-13\\\"}]\\) for the \
integral and error estimates.\"",2,383,20,27574284285643904845,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7126239325144253`*^9, 3.712631249392633*^9, 
  3.712642471655108*^9, 3.7126494484222193`*^9, 3.712656505218473*^9, 
  3.712660094561084*^9},ExpressionUUID->"156264cb-f016-4ae9-89fb-\
53e3f0266aa6"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,383,21,27574284285643904845,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7126239325144253`*^9, 3.712631249392633*^9, 
  3.712642471655108*^9, 3.7126494484222193`*^9, 3.712656505218473*^9, 
  3.712660094701393*^9},ExpressionUUID->"84b1c970-b9c2-4046-83a5-\
ec4705e6146b"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,383,22,27574284285643904845,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7126239325144253`*^9, 3.712631249392633*^9, 
  3.712642471655108*^9, 3.7126494484222193`*^9, 3.712656505218473*^9, 
  3.7126600947722473`*^9},ExpressionUUID->"6d795225-6f7b-4015-b9ec-\
a71db5322e7f"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"t\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"1.4061722917973383`*^-6\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.165074030567207`*^-12\\\", \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"1.3061120020853627`*^-13\\\"}]\\) for the integral and \
error estimates.\"",2,383,23,27574284285643904845,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7126239325144253`*^9, 3.712631249392633*^9, 
  3.712642471655108*^9, 3.7126494484222193`*^9, 3.712656505218473*^9, 
  3.712660094848168*^9},ExpressionUUID->"ca77174b-f169-4821-a4ec-\
c3d7996b3b56"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,383,24,27574284285643904845,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7126239325144253`*^9, 3.712631249392633*^9, 
  3.712642471655108*^9, 3.7126494484222193`*^9, 3.712656505218473*^9, 
  3.712660094918931*^9},ExpressionUUID->"1fa1e2eb-1391-4e6f-a604-\
4b421e256434"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total time taken (min) = \"\>", "\[InvisibleSpace]", 
   "66.67139083333333`"}],
  SequenceForm["Total time taken (min) = ", 66.67139083333333],
  Editable->False]], "Print",
 CellChangeTimes->{3.7126302123735332`*^9, 3.712633946323166*^9, 
  3.712648843120902*^9, 3.712655367423354*^9, 3.712659827149705*^9, 
  3.712664091763155*^9},ExpressionUUID->"7fdf3b22-4839-4b17-b749-\
4b03f9eec692"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsection",
 CellChangeTimes->{{3.7113349490780897`*^9, 3.711334949853162*^9}, {
  3.7118553074089212`*^9, 
  3.7118553084434223`*^9}},ExpressionUUID->"8214d20f-0e1b-43da-836e-\
a05559a345ef"],

Cell[CellGroupData[{

Cell["Full simulation results", "Subsubsection",
 CellChangeTimes->{{3.711340636335628*^9, 3.711340639461668*^9}, {
  3.712402574159871*^9, 
  3.712402577759878*^9}},ExpressionUUID->"a5914ebb-e3a1-40d3-9974-\
157f928747ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fullPlotlegend", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<|1, 1\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|1, 0\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|1, -1\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|0, 1\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|0, 0\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|0, -1\[RightAngleBracket]\>\"", ",", 
     "\"\<|-1, 1\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|-1, 0\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|-1, -1\[RightAngleBracket]\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fullplot", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], ",", " ", 
    RowBox[{"PlotLegends", " ", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"fullPlotlegend", ",", " ", 
       RowBox[{"LabelStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Bold", ",", " ", "12"}], "}"}]}], ",", " ", 
       RowBox[{"LegendMarkers", " ", "\[Rule]", " ", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.2", "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
         "]"}]}], ",", " ", 
       RowBox[{"LegendMarkerSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"comments", ",", " ", "12"}], "]"}]}], ",", " ", 
    RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
     RowBox[{"{", " ", "\"\<Pulse frequency [Hz]\>\"", "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"Full", ",", " ", "Full"}], "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", " ", 
    RowBox[{"ImageSize", " ", "\[Rule]", " ", "1200"}]}], " ", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.712026403468401*^9, 3.7120264859840918`*^9}, 
   3.712027206832596*^9, {3.712027308789228*^9, 3.7120273137134132`*^9}, {
   3.712027361938842*^9, 3.712027396613812*^9}, {3.712036629308642*^9, 
   3.712036669709046*^9}, {3.7123984096708307`*^9, 3.712398421190097*^9}, {
   3.712398532888158*^9, 3.712398540685336*^9}, {3.712403372016094*^9, 
   3.7124033936914988`*^9}, {3.7124287742700357`*^9, 
   3.7124287753362217`*^9}, {3.7124544023837137`*^9, 3.712454408009027*^9}, {
   3.712454636334882*^9, 3.712454643059864*^9}, {3.712455338264407*^9, 
   3.7124553416637697`*^9}},ExpressionUUID->"21afe862-2486-4022-960d-\
dee69b35bb30"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwt2Xs4FlsbBnCFUBKlEmojotJBVHKqKRVSiCRRthSFEJVKkRSVpJKzqBCF
nBJCkpxSJIpSJHrtkA6KSvXdPevrj7p+17NmvTNr5l6z1iRv77Z++0g+Pr5N
+Ovvv/jj16fH47glpnZ1blf1YItpS3ncjbKFeeKOZBUTOP5wSGLNLvKwLzxH
fqVu0jZyfSZcM2biltX25MQ38BUPQ8uJ28ne45fxuMCOH2eVmY1XwAufBtU1
svZyXrDYnqBd1bbkgURYv0JZ5vy/5KomuDfFTlbWhhw7iuNxf6wMXNK2kN0X
w/bysZ/Frcj6TnBZs3evDOtPKgo2N8o8WmFJ7q2Gzyw5XddrQi79Abf8UbWM
30QOm72cx521ljnlv5nsZANLStQfGbuRrHMG7uY7W7x0A1m8BL626YvHd1bv
/AAH2n/tcTYn5/+zgscN7y3gF1xGDjaFs6RfqYxfR7Y7CkulRo4ZYUDWyIaX
fYsTUTEiC7+Fn18fllFj/bVO0Mf1Zs9KsdQnZ+rDGtOt5cSVyQF7Ye1Zfnej
nMlWyXD3tp1SrsvJqs/h84rdhy4sJfMJr+RxPmuXjRrDzq9RE1ZxVwlT6Lv8
1yk74fWWFSVTdKnuEw0vPbTNQEyLbPoQDtE0GioaT1YchpNfz3IyXUQeUl3F
4zrrv51QZq61hc9I1+xer0lOCIFb4rzddy4ke92FO36OP6bAbPAR5i7uiqtm
lpVfjfEUPXM/V5X80QyWL/TqFppDLveH/UNUPIRkyJE58INjttwhJbJLJ3y4
X0Vbv+3KXy+baMDjKowqCspmU11yFaxp3lS6R5HcvQ/W81H1zGMuugYnWih9
/ChHDm2Gv5kYzCufRnYQMUQeXrnyOGmypha8yd7edKsKWdQZ/nRyjNRIdnx7
DOw47uBSJ3Z8bi289YTfNCFZctAvuG5C9iwtZpu5Rjzu1/LPOiETyfO3wl0H
11/0ZnWBULjb8GbUTFZvLoW36/wJ1uQnp32CI+5unGAuSfZTWIPxaIn48oOd
n4U5/EBmvABviMZHJQDeN+ZVdrkoy38u7H1WzWvfWJb/Lths79S7/iIs/5OM
eVxJx8JOdTGW/9Xwk20z7eeNYvn3hmfNb1+b9Zb6l0uFle7mGsQLsPy3wLGp
Meoi7HyrRq/FfFJ+bEPhD2ofqw2fi7p8se8P2d0Ftq7atUj7N1k/Dh4IaB1R
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
LOzHtLa2KVSw/G+BV3v3jDG4maD3P3prQJQ=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
BHzmrebLDC7y/r8YXNrTyWTjI+//34DPLnJ0Ej6K7fsXXIH53EbnRKdJdKUO
eF7f0sT6PpJ/L3CPJHODgC/Wba+Cz6X5ZptvRit3gm8Fvo94uR3NPi+bptY8
80yIrESzNoBlP3ganE5FFzmDS42NwnNasf+Ii2BjhS/9Fbzk/f8T8OdY+/vD
H7C93A/wwKMWx4dp2H5W9irkUXertNcxrHdYg9Mfz/9V7oXOPQW+dsaZ8fk8
OrAWLGZzRcXsItp4BFy/oEtvFTdaUjwH8rWIY9Ntcn6njMFSl2zTlE6hm0LB
KjF7jIJqyfv/EnA0rTEpRe4Pr7fgnT1K4XevoPUFrtHU0szRpO0xaFEKvOHH
uQbRcvToMbBSnppD23zy/S8HXOPLnCcvSr7/dYGPVjbemWUn3//Yc+F+4Lau
z9Yk3//UwB1JARUqS8n3PxewQLb562428v0vBfwz0Ozopn24v+pGcLqm7QPr
g+iEabDhbJpu8QW0g3weTQV0cf3WIflQ3Qd22nt/28FMrHOfBlfk/Y5zmiDv
/+/+ay/A46L+i7z/HwXP5y372eeM7aOXX6ep4zv6jD1s0dYmYGZYQIHVEbRi
OJhzuUFIlhyarQycPu0ypBeL7u6//m89rlGZNYAuWJQP678BN6Ydub9DtoI/
/JyqHXqLNvMB55/YXdhHrrd0LvhBrZr1lePo6W5wt70zzSFI8s9RQFMj42rb
EuSxnr0RLMaz+CNjPsm/K7jZcd1CWpbkPxX8QzHYKFSf5P8puCnPrMxKk+T/
Jzhx6tGZ+WEk/wqFMH7YJ2vdtif53w9e9WfOm3pBtEcC+BafXM+W9ST/98Cu
ixt2u7iQ/I+Bi1xbR5ZGoYdX3IDzE5UUYCZB8m8KTs4tLb/pQ/IfAV4aaHn7
z1/8fc7lYKE4XVH/bLT6e7C1T1fXZw5sz7f4JsyHrEM5H5K89OuBnfiH3Gez
SP59wS+7dTuFotFxeeAHJx58l80n+X8Ozv/xKNWYtFfmKoLx/XWZ5VE7kn91
8NY5ky/v85L8u4HP+l3kYZ0l+U8Df0/z1pJKQUc0gwu127xZPXi8Fr/AnE99
clo5Sf4Vi2mq4VnR8v/I96dZWzBPzOy2+GZ0RyL4lYTCYQdy/XLr/7W39Huz
1pzkfxz86Ene3Bkrkn/JEhgvTaaPPbqP20uag/u4aeYY6W8qEuyiJPZ0yXKS
/wrwgm0+mSWWJP8fwCtMnxZ3k+eJ15JSmroZePdRD3me6m8Df68XMXMNJPn3
B0tpmSnqvyDf/66DzbxP2vWEYp3xApzFoxBTL0a+/3GXwf5eT0kXkee722bw
vlb3ve78aC138Bv7RfO+JKAF0sFtX7ucOeaR/LeArac3J+WVkPzPgl8+ebyP
bRfJ/9pymhqPuqC+djXJ/wGw8q1M2kemVPt/OzJfKQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
PtNUkA==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwt2nlYTmsXBvAiSpImqVSKIpSSUInaKhWVUIQoClEqhCYqX6ikktAkzYqi
kiGKEBpJhRCSsotKCJXou89e7/nDuX7XftvveO+1nvVs5S2eq7aO4OPjW4d/
/vs//gvqXswyVpsPNIqtem4I2yoassxu64pqEbLaCvj4j17lUeShQNhVZb7F
8ErOdfnwB/vJ9wfIGR9gD8/hru9kHwkjlrnwbIltF9nSGI7/PL6knazkDYfm
1V57R+7LgJOkngw1kSuew4py9m+fkZNGMyxjmWEoW032WgBva9b2KiebuMJX
pNcdLyXLxMM6JQvzr5O7KuG7YXyfr5DLBmGF6tYn2eTYWUtYJrmnVj6V7OoA
p906+CKebHACVg7/HRxDFrsDn5uW1hpObuuBJc4u6DtMvjnZmGW6hWde9idH
2MCnp784t5fsFAxXWM11ciTrFMKp+s83uZCFPsI3ZjjxbyQ3S5qwjHtk1zQ7
cr4JnGKiv3A9OWQf3CC3daMp2T4Lro19Nn4uWf0lHGj1QFOHzCdkyjLvbY8t
mEVu1IXj274EeZKzd8BLOrcEyZIDEuBMt3whcbJNNaweaqAnQlYZgi8mPrv4
z4Zzv/pSlnn86YrJT3LNRrha3e/PF3JKJNx88P6fVrL3XXjVwuq1r8nmvXCH
tlhiHVle2YxlOiMO/LxK7l0J3xa5Xl1CLj8MmxYHxt4kx12Fn4S/eXWB7N4G
Hx0neS2XbDTBnGWqxp4LiSFLLYU7DxqHhJI79sM7qqpOHyKXXIDX3FTv2UuO
boJ3ei49sIPsMsYCv+dTqjIuZF19eBbfxBJLsogbXFolXmlGbkmEu0+OszMg
F9XAJklbvbXIoX/h1K+hxipkh9nLWEZbdr2UDFnLEc7UWHBzLFkgGq60v2Mw
vIJzUxmsvrd0zA9y7je4eXmJ2ydy0JTlLOP49ZbSa7LtajjE/W7DNDqfWggs
4zei6B4dHyqCd7mxG4rIde3w/eS6kCxyhrQly2iaSC6NI/uYwfNGrTcJJ1v6
wPkhh3v9yUo58Ki2lZd3kftewclBz80dyRXCVni9q/2SbMhJC2H1y/xZDNnL
Hb52IbZOm2xyDq4cONY2lSzzBP4TN9NTmNz1D06MTnsqQC7TtMbv28T7V581
5d8JztuyLbeN7HoStncoDXpNNrgPR6hvC31AFvsBd+9J9Cgk43mRP90T7Snk
m7Zw4yS375HkiCOw/BqBLwFkp+twakXzo3VkHRaW3K9w2J4sJGOD1++749xS
crM5fM1Ne7EOOd8XNnp6ekCZHHIR1qoJtR9Ptn8DJ+WonPljRfkXWckywg7j
hj6R+RbB9W0q4c/Ijbtg5xnVbbfJ2clw+I6NqzLJAU/htiVtH6LINnyrWMZu
/eOnfmSVOXCTRPqZreT+zbCzTtIDG3JNDBx7zqhdn5zyAN5s2KKhQvbug6vW
fpkiQjZXXc0yUf75wz8sKf9r4JAJekdek3uPwkf88hrLyOU3YE/BzXIXyHEd
8Lzsl6knyO6ytiyjV204x5tstAxW+6uduI4s5Q+7pkWlLiZ3XIKv9itVTSGX
NMPn2RlfgsnR4+xYJn1vu+fn5ZT/xbDzybZXtWRdTziov+BzPlkkBTYLiU04
RW6pg2+om0TtIxfxr0G91AsvtSOHasM5fvfydMgOzrBhtW2KJFkrFi6rjrv1
bRnl/yHsfyhOro7c9BOeeuTyscvk3GlrWSZh05WB4+SgtfCFUAGznWTbULhX
xjy9iKxWDEvnX445SR7qhA0qrmrvItfJ2bPMN9nWXWbkjOXwGuMmVyWyTwDs
GCFwps+C8p8HD27cr1xDVnoHO5/RTUgn94muYxn9MaqqvPdTYQh/vhj18Dc5
yQv+WJL75BnZKxXeeuOeWBrZpB7Wait97kaWGbke7yfI6Y05uWsuLCcXvH4K
ucwFXpVb8nSQnj/2NGyU+lCkluz6CO6e9y+e9/oMfsN2nbIeB8hiahtYRpB/
MGk5uc0e7u58KTuVfDMMPt85X/u3OeX/Frx9to3gE7LTF7gocm1XGllH3oFl
nuWfljhAFrKClQuvdlqQmw/C4iMbF08i51+Gx+3d//unGeX/Pbzn54D5XbK9
2Eb0Q3+aG76Q1Rn4WJqUfiGZbw8cmL5tkS+5MQ3eeNv/wiJydgN8+JHHDGFy
gMAmlhnhXNj8bCnlfx78PuJ/MxLJKttgDYdb4lvI/WfgIxF/46aRax7DD2WH
qltNKf/9cNZZHdlEsvcMR5YZXiVhKU+PN18PRwdIThw2ofwfhz2WJzteJvfe
htOmHuxyIpd3wWYWQqfFyXEKTixz75tSdIUx5d8aTs/M2RNINgqEr/RnvKym
x0vlwxLHNW2OkDtaYOcQ79+65BLxzchDW3VaF/199BI40nN7uCnZZS/sZtvd
/XEJ5T8DrhafN8+fLPIcblk0zqeDofyP2sIystseOz4yovzPh2t/WFswdDx0
O+ydln79LR13iIMt4s4tCCRrVcLThDeVTyYLDMIFbYJHSwwp/zOdWWZRxdq6
dnLuBvibzBflPeSgCDixO3ZKz2LKfyksoeutY0lW64EfpBnMK1hE+Vd0YZmM
6lkJouS6FfDmY04h7gaU/yD45jNf3TcLKf8FsNkpxWXGZMtWuDsiKcdIn/Iv
uZVlrDOvXi/Uo/wbw/wtvxqmkiu84YQOxu6ELuU/Ex5sSe76tIDy/wJ+mJV8
UJNsIrgN9cySX9VlPuVfF/42c8X4nzqUf1c4e0Wu4QhyWTwcHnpo0a65lP8q
eKRkwtHR2pT/P/BR+agtonMo/+rb0e/ZXimW1qL8b4R77gwPq2tS/k/AEtMv
blg0m/J/B05wVD5qqUH5/wrnjBLZbqpO+VdyRX85rUly2izK/0o4dXpF5ocZ
lP/D8Esr9yhfNcp/Idzxa2//l2mU/49wUHjmGjNVyr/UDpYRMtXQjZpK+TeF
38nmBTYqU/73w1P8Du1WUaL8X4CzrPf3aE2m/L+EbeXPtscpUP6FdrLMF1UF
o8FJlH89eHzMoRfGcpT/nfA2y8vnV8lQ/hPhR0piw3LSlP9qeN2S4jRhScr/
EOzxUUNWXozyr+GG63fj79BWEcr/Jnhyu1/4gTGU/yj4bPKotzWjKP9lcL7m
0Uf7RlD+e+EPpc2T+v41cvlXdmcZgSi7sOwhznGr4Eu9CZPtBji7/w9WixG/
8uYnZ6Mi2Klsk9z475yl2uGyQGejyC7OHRN2YX0XqrJmN8u5ZCkcbFd/dscH
ztEHYNGta9SjXnN2yYYbK48ED9Zz1n0Ft8eP7k2k4yLCHuj/VzaU8jVwbtGH
5x4UunK7mnORG3xjlPgakYecQ5PgmM77fI/vcHaohQVHvOgLuMlZ6x+c8+vV
+jGXOQtoerLMwN5CXeNMzk2O8JMJWTOmJnDOjYY9vifXvjzOOegevP3SO4+Y
CM623+FCmU+1vi6c1aZ64ffz916MlBXnodVw9mB66JU5nOtC4I37e04ISHPO
uAYvMpqhbzPYwOX/E7xcYOi+x3vOlhN3s8z6EfY71pVzVjKHCzVTJ0Zd4tzn
A+dvKbx7O5JzRQ4s3aB8N38n56TX8JmYvKhPzpy9xu7B9eDv6bljB+q5/BvA
pdpV3b3JnGV2wbM77xkWT+fcdQ5+UfNb1CH6GZf/J3DUbYsDx5vquPwPw69D
ulr1RnJ21drLMkNPpg5Xajzh8r8Z1q8NmftZv4bLfww80bp43cDSKi7/92HP
mXVvpnpWcPn/AScVKA5m1T3i8q/izTKbXnVPtjj2kMu/HdwQ1mS482I5l/+j
cOe2WcHXLDgL3YAHmxVVb7hzbmbhhKONZTJi3N/ny+xD/u7WZ6xW484fYgEr
XM39eTD1MZd/P1jISEGxtrSSy/8lWLnn2NH85dVc/pvh2TZXbDqZWi7/IvtZ
5qvJucZZM55y+V8EO7Vn3Aj5yH0eAR7wi9wdwaMXcp+fzXlY6EnSB4sPnFXq
YF/bmC9ra7jPu5/vAPJfkHX6WC3nmjmwhWlG9nFZ7vtL2QIvXWlgHWbD2fsU
XB9lrRbtw9m8HL4fbfrI8Sxn+Z+w8nYJ44cFnHtVfVD/Dtu1qlZzLl8D33gw
/cj2ds5xx+DJTNRHLX7K/0347nMPx+8KlP9O2PSRfrjGQsq/nC++z4Ult3Ps
KP/L4CmVI1Xv76L8+8P6zxu8zQ9T/nNhQV8Xo4YYyv9beMbxecEZ5yn/on4s
sz/33ci8a5R/Q3huwG0ryQLKvyds5dp+M+kG5T8FnqW/svBjKeX/GXzhhsKs
4HLK/wh/lrnIdv4ro+uF1lz4g7Am/0m6ngi4wNFe5zIuvaH8x8K+4e/cMj5S
/h/CXYJVfqJfKP+/4CXT1p+K/Eb5nx6A+qualvj7F+XfHn5/cMc58z+U/1D4
6gG5z3rDlP9iOPtryAI3fqr/n+FbAfMVukdS/Z90kGWWlfSILBlN9d8SPlPl
Me6DENX/g7Bol45Dzniq/3lwtYT7riFRqv/v4NOa+97YSlD9H38Iv2/Ji5Mv
TKD6bwSf5bM7UE71x2Q3/K50Vc//qF7JpMGHXmuPaaR61lUPa8WVBeRTvSsb
GcgyYTpS79WpPsbqwGcnvP3qNoXq/1a46XbDupNUTw3OwHeNvznfU6H6/xhO
cuT/Lk71uO037HLsicLY6VT/1YJYZoz49dU2VL8j1sGX/BXjZvPqfzh8q/j4
poO8+n8bVpwgZKpE/YJQF3xgZFMeH/UXzfLB+D3PtjqlT/1HvhX85W70hw5y
yCHYXU9hcT71K/ZX/nv87VWrN1E/o94CH7/rt3IU9Tt84odZJoLvTvN1ciMD
i6YmaovPo/q/B65NmSn8ixyQDkvb6maw1F/ZNMILCt/XvKf+S2XU/5D358On
j1G/1j8PljZZlutE/VzNNrigdPYGJer/Us7CLsWPGu+RvSvgsc2TG3g2H4Dt
NYpnalD/KD8zBJ/3qsX8z+j8vethA23zW5vo/OXH4bkJle+6yXEl8E/BtSMO
0/ncu+H4ibVr0qm/NVI8gn5tar73AJ1fagWcsPdr82XqZzsC4aYCyzAp6ndL
8uFGcbftV8nRH+Ac7cL3DJ3PReIovm+j6XfuknWN4R3u7wTnUL8t4g0rLn9X
H09uyYBTl2Yv7ycXPT/6Xz/WVuZG/Xzo6GMsoxNduu46r/9fAHtfeV4qR+sD
LVdYhP/81yNkgXh4l4OYax+5qRLmty2s3Errj9xBWO9Gz/Lv5KBZofh7kSIx
TVq/2DrAv/KOPIkiq52AR/WmX2fJQ6XwvrsPpebReqiuB+4a/1bRn5wxOQz1
rIlf4Q7Zxwb+vaf6ET+t7yyD4TAH+WQzslIh/HHFwIpT5L5WeGh1yKRr5ArJ
cByPj9cfSevBJBPYaNKN8zZkr31wZv+zyCSySRYsNm98eQtZ5iUcotB9VpHW
r12Cx9FfjPFT/kjHy3ThnUfyPfPoeOwO2CdYcV0o2TUBnipv71VENqiGG/02
eH4kiw3Bs0UeZkrQerxNPQLreZG5J5eSb26EjWQM1P156/9I+FR+9+FC3vr/
Ltz9QDi7k7f+74Wdw1VD5Wh+IKR8gmXKvULO5pKbV8KCDZ933CPnH4Z966cM
seSQq/B9p2p5UZpv2LfBnb4f1n2l4+oTInH9emOdIknH+ZbCZnVCZxeQG/fD
7JrDhhvJ2RfgpKwfxSHkgCY4bHKa/yWyzZgovJ+tRh4NZBV9eJXcltH/yP07
YeGswhGqNK+qSYSNK/3TLcgpNfChgq/lbmTvv1H/XW82/wojm8+OZpm2b7MS
ssjyjvDnAt1P98i9UbD28RfhzeTyMjhH+fFfYd787xs8fu3ADV3e/G/KSfSb
lcYaa3nzv9Vw11Lj/b68+V8IbCou9/w2b/5X9N/jJ6T9r5k3/2uHBzTshCt4
8z/pGPQLlY4xrWQXM9h5UO3hRLKuD2ysK2s4hyySA7cOOgovJ7e8gtf7eATy
Xm+R8CmW2dM//mYAOXQhLNzkYcV7fgd3eMBxcsIVstY5+OL5Iq0qssATeI7o
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
8P8BttdVMQ==
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
X+HkQJ4q3d3/6oaC5v+L74CU
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/7OZHNTk8pvHRVbnfyUkbN4=
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
So+g/3xy44Hi562bQtD/K7Ll287N2pexnYd7L/2+M7KWdG7E9i4dsmB5TlGL
aij630NepvlqjjLnUfSfTj52ZvfP602w/VPynl2jZdwpYej/Lzns4gKOTFY4
+l/uTfvjU/esR5MR6H8n+ZJc+rxR5+PoP5bsJ8FndET5BPq/Qw70+rnjoBBs
8Z2cwTJYZbroNPqX9KH9UaY5/lJYLPrfRo5RO5yxSSce/YeTu3kSLo0Nn0H/
V8lnd8cFqZeeRf+fyX4PjR+c3pGE/oV8WYxt7PyfY+amoH8jsst0+dTV6ano
P5Dc/tG4Tdc9Hf0XkF8u0HdZcSkT/b8my25a7fF0QRb6n72PjgdLM3fKfchB
/7pk5ZBJlS/lF9C/Fzn94T27XM8C9J9B5ipbFJgkcxn9N5JthmaLi/woQ/+T
5A0uRgN7ja6if5X9NJ/if6Z551cl+nci580+szPwXTX6jyebKcoPFe2qRf93
yQ0im18fXXUX/f8gfz2ytXvyVR36l2LSepLbcM4OyXvo35IcPL7LXJftPvo/
Ru4ICx8cdIS5rpPZfzT3DayGO1nkpVU990+l4vmlwn4sxi9GTq7F0Xr0v5Hc
MfdumewsvJ/1QfLckTSrV334fIqF5F4Rn0+fbt1G/51kmzzpp8xnVeifx5/6
DO+eO8p+Hf2vJp9ZMPJ9xQP8PkF7ya1GvE6q7qXoP4sc/rNTaVV2IfpvJicq
n1zQZJiL/tkC6O9ppXfNUg9uUCU/s6/J0357Dv3/Rw421ZExXZaN/s+QD8xQ
FdnckIH+68lBCqHvVd6lof+f5BehwkaT2thfBqUDWQw1n9FDQznJ6H87eXi6
Vv+1v4no/zh5587u2QvXYn/0rCR7qfS3v/DD/qr/hSzid1pUPCcO/S88QL/n
oZytaj9j0P8mstdwyTad79Ho/xC5Y55yxRank+i/iJy337rnq2kk+n9DXrxP
nf3C1WPon/cg7Y/KcvG5w+iVZw3Z+qVuZPdx9NrlTbYcmFZbdA3br2STR8e5
mh/0T/X/jHzSNPC50MKp/tkPsRhGK/2tJNUwXqiokwNk7A4t0sZ4wuFM9gxZ
ExbljvGmPYEszMzrSd2D8aroHrl79JHuvDiMbyEj5JgH8kLCQxj/LGSC6Hif
5Pe8PBHjo6w12ebcZrH9RzF+TkSSBxKW7Jc/hvG2+Qa595oIR+MvjMe5X8l7
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
++Xu04a3y9b8D51kcBY=
         "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.1190625*^9, 0}, 
     PlotRange -> {{3.12*^9, 3.18*^9}, {0, 0.33318324433466556`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Pulse frequency [Hz]\"", TraditionalForm], None}, 
     AxesOrigin -> {3.1190625*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1200, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Pulse that acts on both nuclear spin and electron spin. B0=0.01T. \
Frequency Resolution=100000.Hz. Pulse amplitude=1000000Hz\"", 12, 
        StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{3.12*^9, 3.18*^9}, {0, 0.33318324433466556`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"|1, 1\[RightAngleBracket]\"", "\"|1, 0\[RightAngleBracket]\"", 
       "\"|1, -1\[RightAngleBracket]\"", "\"|0, 1\[RightAngleBracket]\"", 
       "\"|0, 0\[RightAngleBracket]\"", "\"|0, -1\[RightAngleBracket]\"", 
       "\"|-1, 1\[RightAngleBracket]\"", "\"|-1, 0\[RightAngleBracket]\"", 
       "\"|-1, -1\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.03333333333333333], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontWeight -> Bold, FontSize -> 12, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[{
               Thickness[0.2], 
               LineBox[{{-3, 0}, {3, 0}}]}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Bold", ",", "12"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.7126492490040483`*^9, 3.7126492526317997`*^9}, 
   3.712655369364287*^9, 3.7126598285507383`*^9, 
   3.712664092168099*^9},ExpressionUUID->"526393cb-7668-4423-8ea5-\
7362ac7e6df4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fullPlotlegend", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<|1, 1\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|1, 0\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|1, -1\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|0, 1\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|0, 0\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|0, -1\[RightAngleBracket]\>\"", ",", 
     "\"\<|-1, 1\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|-1, 0\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<|-1, -1\[RightAngleBracket]\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotRange", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Full", ",", " ", "Full"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", " ", 
       RowBox[{"PlotLegends", " ", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"fullPlotlegend", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", " ", 
          RowBox[{"LabelStyle", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"Bold", ",", " ", "12"}], "}"}]}], ",", " ", 
          RowBox[{"LegendMarkers", " ", "\[Rule]", " ", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "0.2", "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
            "]"}]}], ",", " ", 
          RowBox[{"LegendMarkerSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"comments", ",", " ", "12"}], "]"}]}], ",", " ", 
       RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
        RowBox[{"{", " ", "\"\<Pulse frequency [Hz]\>\"", "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "plotRange"}], ",", 
       RowBox[{"Joined", "\[Rule]", " ", "False"}], ",", " ", 
       RowBox[{"ImageSize", " ", "\[Rule]", " ", "420"}]}], " ", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"4", ";;", "6"}], "]"}], "]"}], ",", " ", 
       RowBox[{"PlotLegends", " ", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"fullPlotlegend", "[", 
           RowBox[{"[", 
            RowBox[{"4", ";;", "6"}], "]"}], "]"}], ",", " ", 
          RowBox[{"LabelStyle", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"Bold", ",", " ", "12"}], "}"}]}], ",", " ", 
          RowBox[{"LegendMarkers", " ", "\[Rule]", " ", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "0.2", "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
            "]"}]}], ",", " ", 
          RowBox[{"LegendMarkerSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"comments", ",", " ", "12"}], "]"}]}], ",", " ", 
       RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
        RowBox[{"{", " ", "\"\<Pulse frequency [Hz]\>\"", "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "plotRange"}], ",", 
       RowBox[{"Joined", "\[Rule]", " ", "False"}], ",", " ", 
       RowBox[{"ImageSize", " ", "\[Rule]", " ", "420"}]}], " ", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"simData", "[", "\"\<allstates\>\"", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"7", ";;", "9"}], "]"}], "]"}], ",", " ", 
       RowBox[{"PlotLegends", " ", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"fullPlotlegend", "[", 
           RowBox[{"[", 
            RowBox[{"7", ";;", "9"}], "]"}], "]"}], ",", " ", 
          RowBox[{"LabelStyle", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"Bold", ",", " ", "12"}], "}"}]}], ",", " ", 
          RowBox[{"LegendMarkers", " ", "\[Rule]", " ", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", "0.2", "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
            "]"}]}], ",", " ", 
          RowBox[{"LegendMarkerSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"comments", ",", " ", "12"}], "]"}]}], ",", " ", 
       RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
        RowBox[{"{", " ", "\"\<Pulse frequency [Hz]\>\"", "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "plotRange"}], ",", 
       RowBox[{"Joined", "\[Rule]", " ", "False"}], ",", " ", 
       RowBox[{"ImageSize", " ", "\[Rule]", " ", "420"}]}], " ", "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.712028345417307*^9, 3.7120283460687027`*^9}, {
   3.712028396293599*^9, 3.712028619994772*^9}, {3.712402656462327*^9, 
   3.7124026742871447`*^9}, 3.712402762540565*^9, {3.712403396088296*^9, 
   3.7124034011667843`*^9}, 3.712428819098002*^9, {3.712454650661215*^9, 
   3.712454660010991*^9}, {3.7124552894909067`*^9, 3.712455293490086*^9}, {
   3.7124558446205893`*^9, 3.712455912919362*^9}, 
   3.712612502061042*^9},ExpressionUUID->"33412708-8d10-4a8f-be1d-\
275098f4f0b0"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwt2Xs4FlsbBnCFUBKlEmojotJBVHKqKRVSiCRRthSFEJVKkRSVpJKzqBCF
nBJCkpxSJIpSJHrtkA6KSvXdPevrj7p+17NmvTNr5l6z1iRv77Z++0g+Pr5N
+Ovvv/jj16fH47glpnZ1blf1YItpS3ncjbKFeeKOZBUTOP5wSGLNLvKwLzxH
fqVu0jZyfSZcM2biltX25MQ38BUPQ8uJ28ne45fxuMCOH2eVmY1XwAufBtU1
svZyXrDYnqBd1bbkgURYv0JZ5vy/5KomuDfFTlbWhhw7iuNxf6wMXNK2kN0X
w/bysZ/Frcj6TnBZs3evDOtPKgo2N8o8WmFJ7q2Gzyw5XddrQi79Abf8UbWM
30QOm72cx521ljnlv5nsZANLStQfGbuRrHMG7uY7W7x0A1m8BL626YvHd1bv
/AAH2n/tcTYn5/+zgscN7y3gF1xGDjaFs6RfqYxfR7Y7CkulRo4ZYUDWyIaX
fYsTUTEiC7+Fn18fllFj/bVO0Mf1Zs9KsdQnZ+rDGtOt5cSVyQF7Ye1Zfnej
nMlWyXD3tp1SrsvJqs/h84rdhy4sJfMJr+RxPmuXjRrDzq9RE1ZxVwlT6Lv8
1yk74fWWFSVTdKnuEw0vPbTNQEyLbPoQDtE0GioaT1YchpNfz3IyXUQeUl3F
4zrrv51QZq61hc9I1+xer0lOCIFb4rzddy4ke92FO36OP6bAbPAR5i7uiqtm
lpVfjfEUPXM/V5X80QyWL/TqFppDLveH/UNUPIRkyJE58INjttwhJbJLJ3y4
X0Vbv+3KXy+baMDjKowqCspmU11yFaxp3lS6R5HcvQ/W81H1zGMuugYnWih9
/ChHDm2Gv5kYzCufRnYQMUQeXrnyOGmypha8yd7edKsKWdQZ/nRyjNRIdnx7
DOw47uBSJ3Z8bi289YTfNCFZctAvuG5C9iwtZpu5Rjzu1/LPOiETyfO3wl0H
11/0ZnWBULjb8GbUTFZvLoW36/wJ1uQnp32CI+5unGAuSfZTWIPxaIn48oOd
n4U5/EBmvABviMZHJQDeN+ZVdrkoy38u7H1WzWvfWJb/Lths79S7/iIs/5OM
eVxJx8JOdTGW/9Xwk20z7eeNYvn3hmfNb1+b9Zb6l0uFle7mGsQLsPy3wLGp
Meoi7HyrRq/FfFJ+bEPhD2ofqw2fi7p8se8P2d0Ftq7atUj7N1k/Dh4IaB1R
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
LOzHtLa2KVSw/G+BV3v3jDG4maD3P3prQJQ=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1: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
BHzmrebLDC7y/r8YXNrTyWTjI+//34DPLnJ0Ej6K7fsXXIH53EbnRKdJdKUO
eF7f0sT6PpJ/L3CPJHODgC/Wba+Cz6X5ZptvRit3gm8Fvo94uR3NPi+bptY8
80yIrESzNoBlP3ganE5FFzmDS42NwnNasf+Ii2BjhS/9Fbzk/f8T8OdY+/vD
H7C93A/wwKMWx4dp2H5W9irkUXertNcxrHdYg9Mfz/9V7oXOPQW+dsaZ8fk8
OrAWLGZzRcXsItp4BFy/oEtvFTdaUjwH8rWIY9Ntcn6njMFSl2zTlE6hm0LB
KjF7jIJqyfv/EnA0rTEpRe4Pr7fgnT1K4XevoPUFrtHU0szRpO0xaFEKvOHH
uQbRcvToMbBSnppD23zy/S8HXOPLnCcvSr7/dYGPVjbemWUn3//Yc+F+4Lau
z9Yk3//UwB1JARUqS8n3PxewQLb562428v0vBfwz0Ozopn24v+pGcLqm7QPr
g+iEabDhbJpu8QW0g3weTQV0cf3WIflQ3Qd22nt/28FMrHOfBlfk/Y5zmiDv
/+/+ay/A46L+i7z/HwXP5y372eeM7aOXX6ep4zv6jD1s0dYmYGZYQIHVEbRi
OJhzuUFIlhyarQycPu0ypBeL7u6//m89rlGZNYAuWJQP678BN6Ydub9DtoI/
/JyqHXqLNvMB55/YXdhHrrd0LvhBrZr1lePo6W5wt70zzSFI8s9RQFMj42rb
EuSxnr0RLMaz+CNjPsm/K7jZcd1CWpbkPxX8QzHYKFSf5P8puCnPrMxKk+T/
Jzhx6tGZ+WEk/wqFMH7YJ2vdtif53w9e9WfOm3pBtEcC+BafXM+W9ST/98Cu
ixt2u7iQ/I+Bi1xbR5ZGoYdX3IDzE5UUYCZB8m8KTs4tLb/pQ/IfAV4aaHn7
z1/8fc7lYKE4XVH/bLT6e7C1T1fXZw5sz7f4JsyHrEM5H5K89OuBnfiH3Gez
SP59wS+7dTuFotFxeeAHJx58l80n+X8Ozv/xKNWYtFfmKoLx/XWZ5VE7kn91
8NY5ky/v85L8u4HP+l3kYZ0l+U8Df0/z1pJKQUc0gwu127xZPXi8Fr/AnE99
clo5Sf4Vi2mq4VnR8v/I96dZWzBPzOy2+GZ0RyL4lYTCYQdy/XLr/7W39Huz
1pzkfxz86Ene3Bkrkn/JEhgvTaaPPbqP20uag/u4aeYY6W8qEuyiJPZ0yXKS
/wrwgm0+mSWWJP8fwCtMnxZ3k+eJ15JSmroZePdRD3me6m8Df68XMXMNJPn3
B0tpmSnqvyDf/66DzbxP2vWEYp3xApzFoxBTL0a+/3GXwf5eT0kXkee722bw
vlb3ve78aC138Bv7RfO+JKAF0sFtX7ucOeaR/LeArac3J+WVkPzPgl8+ebyP
bRfJ/9pymhqPuqC+djXJ/wGw8q1M2kemVPt/OzJfKQ==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwt2Xk4VV0bBnCFQgOJkoRKJWkQiUIOiqgMkSFTqJCiIoqikhQKSYokERki
EUWSKElRhNKgoqMyJb0k6bt71vf+0Xv9rmedvffZZ997PWuZ6eRptnU0Dw+P
Nf7593/8F9SlxeVYTz1U/cD8hhZsLr2Ky0mf90nq5XSyvDEss6A8zSuAPBwI
a/1qNF2pQ67LhRd7T7givZOc8gFemcd3gn8D2U9Um8upsuvZOmkfeZ0u/NeG
k3nTiCzrDZdOa3WIVSL3p8BtahonalzJVS/h2EatQx0y5IQxHC7nePE2pUeq
ZK/lsN4pLaVDXmQ9V5hfrfHE1FqyxHn43C8J2/Bv5M7H8JacsTIne8hlQ/BO
5TQHvTJyzAIdLkd/28WiQ3vJrrZw/WDNHR9jskYEvF7g6uhT7PpESuETEbt4
UleT27rhO/qiyhd4yEUyulxOdL+wnbs8OdwEHi8t8zczh+x4GH59VuD2Y1my
Sh4c5Rp73nM8WeAT/FK3UTe5O/ef30zW43KuzEn2M1Gneq4eLL7xwbaac+Rg
H9hl1qpXhYFkq6vw3W3G835tIys2wRseTxlwH0PmEVjN5cRPas+7MIHcoAZf
t9aOesd+j3Q32O2jkl5qIjngArzORWHyTk+yyRO4wc5huWsaWW4Y9ulSFen2
IQ8qruFy9vNtL3jsTK6xg6+Oc16/2YycdAp2lHwStoTVve/BZ1sEVb13kQ16
Yb5z+7RMzpOlZupzOfef2TlXx5N7TeF3FrsLy9nvVXEEFrWvTxphx4+7CZ84
ETKyYzvZow3+/bls2M6arC1ugOchw4jnQTNZbA3ssFa67PkTcsc++M9/X0dv
mkEuSYNd3lW2SXbS7xHZDCcaCb7+wuougmu5nMoTDfZWz6mutgIWuWxp80Sc
6uN3wBbB7hKFI1RvjYe1z1yLfa1F9fwaeMvjoF5+FXLoH3jjmCbrnT9pvO0i
Qy7ny5QHB+vEqL7EAa5J9lWVEibzRcLVLwonRfXR+OYy2OSBGL8nL9WzvsOh
fwwKLQXJQbOMuJzHn1c0yOix/G+EL4812y41m+U/GN51sEaIV4LlPx8+uor3
zrpBOn5dO3wk4+uhP1/IKVPWcTkL7kst/sHuj58+LHD12NHZk1n+/eB4vfyB
O+x6ZK/Bm1fohQiyfPe/gtuTfro7svNXCa1HHrbEms3ooeMlrIQnOYS1uLWT
vTzgc0Emqq1CLP8X4Ylfp23znsPy/wx2bdnE4z2N5X8ENv3lZ6cjyvK/eAOX
k133rK+FPf8xjnDT5ZttA3Ys/1Hwvaas1Ce9dD6Ncrha+HDzLXb/RX7Aun99
3nex47XNNuZybvAXLD/RReOLzOEtO/rXnmL3I/wYPLBS+f5Udr2Ot2Bvd+5E
Sy7VVbiw+v5hmTWNZAEJEy6nY5GC43N2/W8MYL5ZNiKW0iz/++ErPw7PfvCH
xgdnwPwJfnwKi1j+W+BufeHUIAGW//GmXE4rd/Ubfva88GjCSxLCfyuy57Nh
J2y8x+GJB8tPeiLsdXrr9P9YXgJq4f2tnxYe0mf55zHjchRnS179zMfyrwS/
fL6oJJg9X4Nb4IdF7R+EprL8R8PXN5+Uqmd5SXoA81uqn09nde9+eKzZVvUo
dr0GczYi37puM1YO0feT2gQXXZ73n9x3cm8I3NdyrTXFkOW/EP447mgwh72v
4zrgl480NcqkWP6nmXM5YaGXHsqz69M2hPVKJLweMov5w5NniXbrOeRR/jPh
qv1LExxv0flK3sC1okdbv5ux/E+w4HJGbsgK2z8iu2jBsUuvtgwNs/x7wu/9
K625NeTxSfD+QjWzDex5aq2DD36xcJ70m5w/ahOX49RwL3gve55Cl8Kh9/Mr
7VhebJ3hkFaR1R1NNH5JDLy1rTdsF5uv+SphmQN+D+rmkZt/wtZxh/40i7D8
z7XkclSF1918/YM+H2QJhxU/9pP8RTYPha0qxsbcOEyWvw331FUvzHEmD3+B
74cqB/aasPxLWnE5NytapfUiWf6NYJFoNaGZbiz/AbCE44wdPd7kddlwQPTG
mudsvOw7WEYir7Pan9w/0Rrz+wajqCPuOZT/VbCZRMyqc/zkBK9/9XhOyJz8
65T/y7BDUZiT7wOy3gt4oIZPdFQ8WYLXBvP7k8RS80hypzI81yXA9/Q4Ol6Z
C9z4VGdjwTuqx5yF55zqTnF/SHZ9CKu/kh5xaydrDMBlW9ueL/xJFpHfjH4o
YEXDxVF0vDYrOMwpsHvBCnLRCZjvrfGOF4Lk8DtwsfLZta+r6POO3+Bog94E
t+9kFSlbzCfNwc+e5ZAF1sOX0+4Hd40jvzkIH1iT/jHqCDn3Oqyk7HDdfg85
+D2c+eCHoJcQ2UrEjstR6Cx6x5+bTfnnwP0zn/X5fibz7IG3+7WrDXSRG5Lh
bJ+RLXpnyOn1cH58+/WPTeQAPnv0hwdzPxZ8I5ssgz+tlogYL07nk9sGn2kP
EBd7QfXBWLjaPUnOqYJc8whOSTPUrTclJw3Cywbs38QZkb3nOyAvAb/ypLOz
KP82sMMLDXfDi1SXCoPbE/eYjokn9xbDMwyb/hzdSK7ohE/mh0geZ9cbN8MR
z3NhgMgnG7LHBti/0WHRfXY92oGwU0yOSE4WnU8sF/7u6fttOT+5o/Xf+AK+
D+/lyCWTtuB5covd5aZDjtSB9ZauVNykTHbZC0v/Eav2C8yk/KfAPzZbGG4X
Io9/CUu9OPr2qy6Nb+V3wnx1V01Zln2/fFV4+4x0Yw89qoduh/9Ez01WPEu2
jYO39I6cn8chL3kMDz7W3h3nRMfnG4JXlG0wjLlJblZwRn/wdewhPlEan7UZ
lnw5865OGdWDwmFd2R135JzJ5nfhQv0UXc12snw3rCiqdYvbRh6WdsF8FKIo
vT2DXGcMlzTcjFsjRMdPCYLNV29weGJI9rsBf05TKF9YQOPXfYTl706pNRGj
uuzkrXj/4ceZmU71fl1YXVuhbhy7P1XecOHz9dt4mRNS4Rutj+RaNchejXD2
qDnCvLvIemO34X2paK6s4EaWUIPXBIb2XDxB7nSFN76unSkiSC47D8sPzT99
7zCdP6YaNht2WNpaSXb9DVfvfLZv5Xwar6G4ncuRvVa8oK2P6iJ2sFqm4+TS
/VRvi4Cl/et8Zw1RvagUdlEpmLiAXU94D/xHbw2f/mqyo6wrlzPh+LKnvGPI
Kqaw8mZja4OVZIEjsNWNgjPPmN/kwUc5xkErE8i5n2BOefTRYXb/gsXcuJwM
vdflZ2ZR3Wo1PMozfLr9b6or7oMHhGcMuX8h86TBLUWT+oMlyQ1NsF7L0qAE
H3K6gDvmsynWR/xukwPUYefvS7d5dJBN3OELcacve06n88nFw4qSnMCEP1Qf
fAJL/Fy0+0M9uWYYvh8QxSc0j5y0cAf6z5iI0+PsyN72sH28iWXVc7LBabgj
zaDmeglZqgwWWl7mG9RF7u2Fj9t8Ol35glwx0wN5eDDGMew8Oc4MzvglfbCv
guxxFM4cdSXiezBZOx/mvSCuIHmFLNYOq8T27q/3JneI78R6b7s6z/fZ5JI1
cNSfvG+zjciRvnCs0yn/PnOySzo8qblQ7lQPy/8reMzhu0/zFmRQ/oV24XnL
+TpUu5ncugKekVzhVNtxjfK/A9ZSNLYYbUH10AS4TqH+XcFjqts+hVPHvrEI
LaD6khFYeOBAfFEkmW+xJ943Z+tKnKLIzQ7wGZW6I67s/FmRcN7m5ll5POSg
+/DZ4eoo3dJ0yn8fvLt8VoSfGtXlZ3shDzocceXfdP7hjbDGPf22ukPkumC4
ubl4N+9yckoB3BJ9XvlbFdnvM6x85/PdZHvyuqm70Y/vffvYLZ4sawB/NA7h
Dl4l9/vBS99oOR+7Q/ev6hp82LuuxeE6XU/Ca9jNN7V2+VMa7zVuD5dT8DIx
88N+qutp/PNSwZFQCapL7IRv3Yyt1dxH36/zIjxVoelpVTm57BncdVsp8IwA
jY/5C3smV0c6v6S665K96BeqeVoOHCZrbIEjBvf5X3iZRvmPhktfHZ+f5Udu
K4dPl0o/WLGJXPQDNjUoK75tRg6X8+Zy3ow+N33MGLKjBbzUwkx51OWrlP8Q
uKEvhVu2lixQCPNYZptmOJPfcGExfsXPGZvIuRI+6CfbIq21Del4wWvh7l1D
HkP9VLc6ACea98SKCVFdMRPeMu7YN5VCMs8b+OeKPb5Ps8kN4/chv11PS98d
J6drwttqsmaZ3KLvH7ALtndaIdgYR3WTS7DvXr/X1h1kuTr4wYLFBekO5EEe
XzwPrb3HVl8g1yjBd9v+7DPWJCc5wdvWXTg9Q5/sfQbWLahKE9QgG1TAznYC
37si6ftI/YRVl72a+lOT3DvHD/3bx75fMpPIFZtgu4osu5G6VMr/cfjF8sSr
3YJU9yiCn7xqlz14neraX2BNw/XGcffIYpL7uZx5ozQyYj6TOwxh+fB3o+pH
yCX+cJKs5Y0T2XS8yCw4/J2P4ERLsstb+HGtl367CF2/2sQDXM6e4Vs9D/vo
/o1fBY+48I8dVU31Vk+4TNxCP4vdv/wk+PndSP5qGxof+hxuOZr0I+Iy2Xa0
P5czbZ9DYtsNel6XKMOmgU76y1PJfC7wyTbxP6mDNL45BuZo2kWIVZGzKmGb
3MbIPfo0Pug/eF76diGfqWTzeQFczvnhW8ZLh2i8vBVsZDDv7ZA2y38oLG70
Ub17M8v/bdjrjdKUUgWW/69waHVJzmZbyqPf9INY79k5Kz4OIK9bB1/YMNrt
wFyy7EHYU/TRw51f6Xz92fDWPHWBqt10vKp3/5yvr1UfTk4QPoTPP1xr/YO9
T7y04WO5qerXt5P1dsOeC8K+3VnL8p/8b7wnp2gru/7OF/DAvNkGeVrkMt5A
Lscwt8nI9ATLvwo80PMpnzeW7LoVthDuyxyaQterEQtXv3qUnxxNdZFHMO9c
hdhaE6q3DcAJlkohhhvIRfJBWO+UcO9/eUfjw63hxsuVKt6HyY4nYU+zthcZ
XWSVYnjZpgopX1X6vEAn3DU+Mv76NpZ/qcN4f94Y67/ehMbnrocjo7lKddPJ
wYfgdYN2mcG/6X5a5cBdqxKGjTSprtgKp6orhU67TeaZdAT9yr5DIc6r6XwN
HPjSw1OXPhZSPX0PHHnxlboh+z0CrsCxCsa5bivIJg2w/5Pdxz2CyXL8R/G+
qj35N8mSjje4DM59mfHZ8wPVa7bB99QG7y37S046BwtXpL+ILyV7V8GhR9RS
s3fQ5w1+wZMfWWeH/6C6lEIw7qfD+7TKAPp+vTZwz4XDW1PnsPk/DF4S+q1L
kPWncSXwsTP7DRb5svm/C7Y19z8+cS0dX1v6GPpDs67SOC02/xvDoe7qbwVG
s/k/EO7zO6CasJHN/7lw+UJO6KVLbP7/ALfpRzpNcGXzv2gIlzO9Zarb4uVs
/teFA01nzjtsy/p/b3htZ7RTfS65NQXmb5aQGLWXnP8S7gw84LKI9SehY47j
fTlN0WReDtl2OXxCP79cOoS8xBWWtbAXVVxF94PvPBzB+R3x+hjr/x/DP1ZP
6f//eiVrCH5kG9x5n/WvQQtCMd9E200WPUPvH3NbONhtwa061g/LR/yrv5q/
R8KB9f934bW6KhHPn9D9q+uGVWK+xs9i/VeKzAkuZ/RivdCRu2Q/E3jc1MoV
pyNY/38YrvPaM6KzjyybBy8dbDIae4r1/x/hc6Zb1DXZ+qRq8kk8nwd1LQbq
yAl68J6fDf62wqz/94ErdXaHN7J+TO8qrLB4vMr7d2SJJri7zykggn2+c2wY
fs8rOVcT57L+Xw1u/ZFrWyXK+n83ONNiSZ27PNVdL8Ahj/ZVBnqw/v8JvPmz
3P2XA6z/H4bDplVUrf9BblMMx/pljfq+iqk0vsgObus+GSnD+vPwU/B2y7CS
SNafO977N35kjlJUM9VVeuE7iTaNl9n6S2BmBPrfjykaU8xY/28K+15O6P4c
xPr/I/9cYL1h81vW/9+EnXnHCPKGka3a4J6HPzTE2HpQUfwU+vGWKrX8x/T7
8ayBLz4X2Cm3gPX/+2D/kNRur+Os/0+D/4stsz9eyvr/Zjg3TTNu2IbObyJ4
msuJ3v/oFi9bz8mtgMtKMzS0VpEH3WHbhW1OG7NZ/x8PL3cLUr+Zxfr/GviW
gvgzt5s03vsPPHpNcfNpV7b+XxTJ5Sit9wpp8iFLOcCqpTnjPkiQe0/D676O
JDfNIVeUwQlysuLzWT3uO3z4F5/862qW/1lR6EeddfUNjKmuvRHWD/wyuXEa
W/8Hwxv93furZNj6Px++9kuzpDyZ5b8dDl/Qa3lMnK3/p0Tj/Vg1tL/Mna3/
9WGf0WJRSmw/Q80PniObqeNYSfXx1+Dpmo+C6xRpv6T1FZxiaaHq84zq+UJn
uJzkzODR2Y/Y+n8lLBhvukaI/f62HnD5W5tVhbJ0/CUX4XyHTqmPjmS+Z7BI
U4D8yAFy8whsmHz1ixnb/8laHMPlcBVdHS/4kIMcYY+rXZtv8pHNo+ACz/oY
UwmyfDncu6fpovg48nAfPNdBdY2oMLlu9ln0I3du+ByrYOt/c7jzbcGxS6pU
9zsGL63v3znfgbzuFvyRc3T9RGeyLPfsv37IcEXfWnL/1Fgux31i9w73MnKV
AVws5jTj+CK6Xwn74cufJKc+52X7fxmw99K3R2LV2f5fC1xbqVG6fBnb/xt/
jss5YP68NvcG7b91asB5tR7fl7LPl+2E36Q6b/V1ofPFJMKXZ6tdXGTE8l8L
T9ky0FTQwfLPE4fnd5eGUt1OsogSXOjyZGZWFFv/b4G/FWv0bRlk+Y+GPYek
E4020fHDH8DGC32GRluSHfvhvTN3SE08ydb/c85jvdbxO6pxEdUFNsEaJ/fL
184mvwmBZ+6tlNTsZfkvhGPSxiw3YOODO+B624cz/jMhW027gPeZWHng9mC2
/2cIZ/UcXSuixfb//OFrJ77GJbHnpyETni+08MoWGbb/9wbmfhfKOKJN9y9g
QjzeD96FMp93kU204KGNPTm+V9j+nyf8sypKXoXle/AS3HrTo3wD2++sqYMz
LHVnzPlDThqVgN8naEeDzVja//VeCmuu77FK96XjGzjD9SfVpi0LJkvFwLY1
3MSrY9j+fwX8q+2OlwyHXPETFnTlHnSXIcfNvYjv11i/pOA1nc/DEn5YYdRt
e5qsHQoP1D2x0s8li92GLWY3a79i37fjC/z1VdGjyq9s/18ykcu5aWuT0b2E
9tMjjWAdB+uvmxfT510C4OZtnUZpbWz/Pxueo6ltv1uT6uPfwcueH/u23pfl
f+Il5OdsXO1Kdn35q+BNAvvm+Kwnh3rBkb/v1RzdTddjexlWS6opvpXF9v9f
wDo23RMsP9F4Pt4k9FetRlL3g8nNyvA1VVUZfba/nOUCC0+XvF+5iRx0Fn4q
emzC3lKy+UM4b1ZF890gsvwA7FCtp35+Asv/vMvop8/o7B6eTPU6K3hj/pv3
5klUTzkBZx0N4FmhyPJ/B7YS3uD54hrL/zd4594vc62+sPxLJWO+11A83WhM
x+tfBw8J7A32Z/v3VQdh9ZuLCpVDWP6vw/vH5TkK72D5fw9H7Kqa7zmG5V/k
CvpTG4P6gT46vgQHXmD6qUKjldy5G9b4ldshupTlPxn2sxuT3G7B9v/r4czU
AzqXMtn+P18Kl+PS6q+z0Jrt/y+D3dfahNx6SscT2Qa3/O21LB0ht8XCYw8t
Fkx/Ti56BCtOF09bzOrhg/CVeP7eB9ps/39+KvK18XzgtQdUV7GB+3bf8haa
yfb/w+DEggW3E2XZ/n8x3B99cceOCBqf2wnvVwu7818Qy/+Mq5j/xmjGHMlm
+d8Am8d1zE1h51MMhJOStlsNhpF5cmE/IftJy3eTG1rhkoM+kSn+5PRJaXhe
xkuWL3MgB+jAHitEJ//NJpvshQd5z76LamL5T4HFZ4sOzJSg53WwAU57tSz6
ciC5hj+dy9mVx7enmDlJFW5auFI70Yzsvf2f51v8yGV/3zCIg//8XZkQqkeW
egzb7+ia6lFH7v0FG8T3BMY3kCsUrmH+sykWWyxPjtsMf6mWD+DnY/kPhydv
iLSbb8ryfxfWaPA90H2M5b8bnjKZs2EVy3OHdAbWWz7TVI7bkEuM4dMrc5Ie
zyZHBsGTuoUnLfFj+b8Br1Psb7/6i83/H+GcmB57m7fk8ZMzkZf+V5vnWbL8
6/6zMs+R0ex8+d7wZPf8S7mvaXxoKux/YsFDXTb/2TbC39bKiaROIy8Zm4X5
aPXa5atYXvnUYFE+o527DOl+NrvClsF3i2ctIGedhyW/iGVnrCcHVcNfjwk4
Bcey/P+Gs7MObQsfz/KvmI37+9fcVXUUedgWXrZ1RXQXe17rIuB1rdPjh1pY
/kth9S35PSnnWf574NX1ZjJz/2P5l73O5bzTKRULYe83WVNYWs5zkqoHy/9h
2ODDkZQb1+n9VpUHy2vMGepqZfn/BJd/7U+7zp5HL7Gcf/sJJhcc2e+ptxre
nq1R+5T9PUxiH/ytX7RlXBTL/1U4dG7GzLZacllTzr+/f67PLzVk879ALt7f
DuFHj0ez/KvD1T7uZ2TY863hDisdvaf66Bz7+188rOdYfGmlErntCZzyn8R7
hUXs73/DsFRB0CsZ9vfG8IU3uJwnHckpe+NY/u3hvwVZe7m917X+B9KrQt8=

             "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {3.1190625*^9, 0}, 
         PlotRange -> {{3.12*^9, 3.18*^9}, {0, 1.0950652085413723`*^-6}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"Pulse frequency [Hz]\"", TraditionalForm], None}, 
         AxesOrigin -> {3.1190625*^9, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 420, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox[
           "\"Pulse that acts on both nuclear spin and electron spin. \
B0=0.01T. Frequency Resolution=100000.Hz. Pulse amplitude=1000000Hz\"", 12, 
            StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{3.12*^9, 3.18*^9}, {0, 1.0950652085413723`*^-6}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"|1, 1\[RightAngleBracket]\"", "\"|1, 0\[RightAngleBracket]\"", 
           "\"|1, -1\[RightAngleBracket]\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontWeight -> Bold, FontSize -> 12, FontFamily -> "Arial"}, 
             Background -> Automatic, StripOnInput -> False], 
            TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 GraphicsBox[{
                   Thickness[0.2], 
                   LineBox[{{-3, 0}, {3, 0}}]}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], 
               ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Bold", ",", "12"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]& ), Editable -> 
          True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {193.5, -189.}, {Center, Center}, {360., 360.}],
     InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1: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
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1: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
PtNUkA==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1:eJwt2nlYTmsXBvAiSpImqVSKIpSSUInaKhWVUIQoClEqhCYqX6ikktAkzYqi
kiGKEBpJhRCSsotKCJXou89e7/nDuX7XftvveO+1nvVs5S2eq7aO4OPjW4d/
/vs//gvqXswyVpsPNIqtem4I2yoassxu64pqEbLaCvj4j17lUeShQNhVZb7F
8ErOdfnwB/vJ9wfIGR9gD8/hru9kHwkjlrnwbIltF9nSGI7/PL6knazkDYfm
1V57R+7LgJOkngw1kSuew4py9m+fkZNGMyxjmWEoW032WgBva9b2KiebuMJX
pNcdLyXLxMM6JQvzr5O7KuG7YXyfr5DLBmGF6tYn2eTYWUtYJrmnVj6V7OoA
p906+CKebHACVg7/HRxDFrsDn5uW1hpObuuBJc4u6DtMvjnZmGW6hWde9idH
2MCnp784t5fsFAxXWM11ciTrFMKp+s83uZCFPsI3ZjjxbyQ3S5qwjHtk1zQ7
cr4JnGKiv3A9OWQf3CC3daMp2T4Lro19Nn4uWf0lHGj1QFOHzCdkyjLvbY8t
mEVu1IXj274EeZKzd8BLOrcEyZIDEuBMt3whcbJNNaweaqAnQlYZgi8mPrv4
z4Zzv/pSlnn86YrJT3LNRrha3e/PF3JKJNx88P6fVrL3XXjVwuq1r8nmvXCH
tlhiHVle2YxlOiMO/LxK7l0J3xa5Xl1CLj8MmxYHxt4kx12Fn4S/eXWB7N4G
Hx0neS2XbDTBnGWqxp4LiSFLLYU7DxqHhJI79sM7qqpOHyKXXIDX3FTv2UuO
boJ3ei49sIPsMsYCv+dTqjIuZF19eBbfxBJLsogbXFolXmlGbkmEu0+OszMg
F9XAJklbvbXIoX/h1K+hxipkh9nLWEZbdr2UDFnLEc7UWHBzLFkgGq60v2Mw
vIJzUxmsvrd0zA9y7je4eXmJ2ydy0JTlLOP49ZbSa7LtajjE/W7DNDqfWggs
4zei6B4dHyqCd7mxG4rIde3w/eS6kCxyhrQly2iaSC6NI/uYwfNGrTcJJ1v6
wPkhh3v9yUo58Ki2lZd3kftewclBz80dyRXCVni9q/2SbMhJC2H1y/xZDNnL
Hb52IbZOm2xyDq4cONY2lSzzBP4TN9NTmNz1D06MTnsqQC7TtMbv28T7V581
5d8JztuyLbeN7HoStncoDXpNNrgPR6hvC31AFvsBd+9J9Cgk43mRP90T7Snk
m7Zw4yS375HkiCOw/BqBLwFkp+twakXzo3VkHRaW3K9w2J4sJGOD1++749xS
crM5fM1Ne7EOOd8XNnp6ekCZHHIR1qoJtR9Ptn8DJ+WonPljRfkXWckywg7j
hj6R+RbB9W0q4c/Ijbtg5xnVbbfJ2clw+I6NqzLJAU/htiVtH6LINnyrWMZu
/eOnfmSVOXCTRPqZreT+zbCzTtIDG3JNDBx7zqhdn5zyAN5s2KKhQvbug6vW
fpkiQjZXXc0yUf75wz8sKf9r4JAJekdek3uPwkf88hrLyOU3YE/BzXIXyHEd
8Lzsl6knyO6ytiyjV204x5tstAxW+6uduI4s5Q+7pkWlLiZ3XIKv9itVTSGX
NMPn2RlfgsnR4+xYJn1vu+fn5ZT/xbDzybZXtWRdTziov+BzPlkkBTYLiU04
RW6pg2+om0TtIxfxr0G91AsvtSOHasM5fvfydMgOzrBhtW2KJFkrFi6rjrv1
bRnl/yHsfyhOro7c9BOeeuTyscvk3GlrWSZh05WB4+SgtfCFUAGznWTbULhX
xjy9iKxWDEvnX445SR7qhA0qrmrvItfJ2bPMN9nWXWbkjOXwGuMmVyWyTwDs
GCFwps+C8p8HD27cr1xDVnoHO5/RTUgn94muYxn9MaqqvPdTYQh/vhj18Dc5
yQv+WJL75BnZKxXeeuOeWBrZpB7Wait97kaWGbke7yfI6Y05uWsuLCcXvH4K
ucwFXpVb8nSQnj/2NGyU+lCkluz6CO6e9y+e9/oMfsN2nbIeB8hiahtYRpB/
MGk5uc0e7u58KTuVfDMMPt85X/u3OeX/Frx9to3gE7LTF7gocm1XGllH3oFl
nuWfljhAFrKClQuvdlqQmw/C4iMbF08i51+Gx+3d//unGeX/Pbzn54D5XbK9
2Eb0Q3+aG76Q1Rn4WJqUfiGZbw8cmL5tkS+5MQ3eeNv/wiJydgN8+JHHDGFy
gMAmlhnhXNj8bCnlfx78PuJ/MxLJKttgDYdb4lvI/WfgIxF/46aRax7DD2WH
qltNKf/9cNZZHdlEsvcMR5YZXiVhKU+PN18PRwdIThw2ofwfhz2WJzteJvfe
htOmHuxyIpd3wWYWQqfFyXEKTixz75tSdIUx5d8aTs/M2RNINgqEr/RnvKym
x0vlwxLHNW2OkDtaYOcQ79+65BLxzchDW3VaF/199BI40nN7uCnZZS/sZtvd
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
i6YmaovPo/q/B65NmSn8ixyQDkvb6maw1F/ZNMILCt/XvKf+S2XU/5D358On
j1G/1j8PljZZlutE/VzNNrigdPYGJer/Us7CLsWPGu+RvSvgsc2TG3g2H4Dt
NYpnalD/KD8zBJ/3qsX8z+j8vethA23zW5vo/OXH4bkJle+6yXEl8E/BtSMO
0/ncu+H4ibVr0qm/NVI8gn5tar73AJ1fagWcsPdr82XqZzsC4aYCyzAp6ndL
8uFGcbftV8nRH+Ac7cL3DJ3PReIovm+j6XfuknWN4R3u7wTnUL8t4g0rLn9X
H09uyYBTl2Yv7ycXPT/6Xz/WVuZG/Xzo6GMsoxNduu46r/9fAHtfeV4qR+sD
LVdYhP/81yNkgXh4l4OYax+5qRLmty2s3Errj9xBWO9Gz/Lv5KBZofh7kSIx
TVq/2DrAv/KOPIkiq52AR/WmX2fJQ6XwvrsPpebReqiuB+4a/1bRn5wxOQz1
rIlf4Q7Zxwb+vaf6ET+t7yyD4TAH+WQzslIh/HHFwIpT5L5WeGh1yKRr5ArJ
cByPj9cfSevBJBPYaNKN8zZkr31wZv+zyCSySRYsNm98eQtZ5iUcotB9VpHW
r12Cx9FfjPFT/kjHy3ThnUfyPfPoeOwO2CdYcV0o2TUBnipv71VENqiGG/02
eH4kiw3Bs0UeZkrQerxNPQLreZG5J5eSb26EjWQM1P156/9I+FR+9+FC3vr/
Ltz9QDi7k7f+74Wdw1VD5Wh+IKR8gmXKvULO5pKbV8KCDZ933CPnH4Z966cM
seSQq/B9p2p5UZpv2LfBnb4f1n2l4+oTInH9emOdIknH+ZbCZnVCZxeQG/fD
7JrDhhvJ2RfgpKwfxSHkgCY4bHKa/yWyzZgovJ+tRh4NZBV9eJXcltH/yP07
YeGswhGqNK+qSYSNK/3TLcgpNfChgq/lbmTvv1H/XW82/wojm8+OZpm2b7MS
ssjyjvDnAt1P98i9UbD28RfhzeTyMjhH+fFfYd787xs8fu3ADV3e/G/KSfSb
lcYaa3nzv9Vw11Lj/b68+V8IbCou9/w2b/5X9N/jJ6T9r5k3/2uHBzTshCt4
8z/pGPQLlY4xrWQXM9h5UO3hRLKuD2ysK2s4hyySA7cOOgovJ7e8gtf7eATy
Xm+R8CmW2dM//mYAOXQhLNzkYcV7fgd3eMBxcsIVstY5+OL5Iq0qssATeI7o
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
8P8BttdVMQ==
             "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {3.1190625*^9, 0}, 
         PlotRange -> {{3.12*^9, 3.18*^9}, {0, 0.33318324433466556`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"Pulse frequency [Hz]\"", TraditionalForm], None}, 
         AxesOrigin -> {3.1190625*^9, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 420, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox[
           "\"Pulse that acts on both nuclear spin and electron spin. \
B0=0.01T. Frequency Resolution=100000.Hz. Pulse amplitude=1000000Hz\"", 12, 
            StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{3.12*^9, 3.18*^9}, {0, 0.33318324433466556`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"|0, 1\[RightAngleBracket]\"", "\"|0, 0\[RightAngleBracket]\"", 
           "\"|0, -1\[RightAngleBracket]\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontWeight -> Bold, FontSize -> 12, FontFamily -> "Arial"}, 
             Background -> Automatic, StripOnInput -> False], 
            TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 GraphicsBox[{
                   Thickness[0.2], 
                   LineBox[{{-3, 0}, {3, 0}}]}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], 
               ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Bold", ",", "12"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]& ), Editable -> 
          True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {580.5, -189.}, {Center, Center}, {360., 360.}],
     InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1: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
X+HkQJ4q3d3/6oaC5v+L74CU
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1: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
/7OZHNTk8pvHRVbnfyUkbN4=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.004583333333333334], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            PointBox[CompressedData["
1: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
So+g/3xy44Hi562bQtD/K7Ll287N2pexnYd7L/2+M7KWdG7E9i4dsmB5TlGL
aij630NepvlqjjLnUfSfTj52ZvfP602w/VPynl2jZdwpYej/Lzns4gKOTFY4
+l/uTfvjU/esR5MR6H8n+ZJc+rxR5+PoP5bsJ8FndET5BPq/Qw70+rnjoBBs
8Z2cwTJYZbroNPqX9KH9UaY5/lJYLPrfRo5RO5yxSSce/YeTu3kSLo0Nn0H/
V8lnd8cFqZeeRf+fyX4PjR+c3pGE/oV8WYxt7PyfY+amoH8jsst0+dTV6ano
P5Dc/tG4Tdc9Hf0XkF8u0HdZcSkT/b8my25a7fF0QRb6n72PjgdLM3fKfchB
/7pk5ZBJlS/lF9C/Fzn94T27XM8C9J9B5ipbFJgkcxn9N5JthmaLi/woQ/+T
5A0uRgN7ja6if5X9NJ/if6Z551cl+nci580+szPwXTX6jyebKcoPFe2qRf93
yQ0im18fXXUX/f8gfz2ytXvyVR36l2LSepLbcM4OyXvo35IcPL7LXJftPvo/
Ru4ICx8cdIS5rpPZfzT3DayGO1nkpVU990+l4vmlwn4sxi9GTq7F0Xr0v5Hc
MfdumewsvJ/1QfLckTSrV334fIqF5F4Rn0+fbt1G/51kmzzpp8xnVeifx5/6
DO+eO8p+Hf2vJp9ZMPJ9xQP8PkF7ya1GvE6q7qXoP4sc/rNTaVV2IfpvJicq
n1zQZJiL/tkC6O9ppXfNUg9uUCU/s6/J0357Dv3/Rw421ZExXZaN/s+QD8xQ
FdnckIH+68lBCqHvVd6lof+f5BehwkaT2thfBqUDWQw1n9FDQznJ6H87eXi6
Vv+1v4no/zh5587u2QvXYn/0rCR7qfS3v/DD/qr/hSzid1pUPCcO/S88QL/n
oZytaj9j0P8mstdwyTad79Ho/xC5Y55yxRank+i/iJy337rnq2kk+n9DXrxP
nf3C1WPon/cg7Y/KcvG5w+iVZw3Z+qVuZPdx9NrlTbYcmFZbdA3br2STR8e5
mh/0T/X/jHzSNPC50MKp/tkPsRhGK/2tJNUwXqiokwNk7A4t0sZ4wuFM9gxZ
ExbljvGmPYEszMzrSd2D8aroHrl79JHuvDiMbyEj5JgH8kLCQxj/LGSC6Hif
5Pe8PBHjo6w12ebcZrH9RzF+TkSSBxKW7Jc/hvG2+Qa595oIR+MvjMe5X8l7
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
++Xu04a3y9b8D51kcBY=
             "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {3.1190625*^9, 0}, 
         PlotRange -> {{3.12*^9, 3.18*^9}, {0, 0.17489995738125505`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["\"Pulse frequency [Hz]\"", TraditionalForm], None}, 
         AxesOrigin -> {3.1190625*^9, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 420, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox[
           "\"Pulse that acts on both nuclear spin and electron spin. \
B0=0.01T. Frequency Resolution=100000.Hz. Pulse amplitude=1000000Hz\"", 12, 
            StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{3.12*^9, 3.18*^9}, {0, 0.17489995738125505`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"|-1, 1\[RightAngleBracket]\"", "\"|-1, 0\[RightAngleBracket]\"", 
           "\"|-1, -1\[RightAngleBracket]\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontWeight -> Bold, FontSize -> 12, FontFamily -> "Arial"}, 
             Background -> Automatic, StripOnInput -> False], 
            TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 GraphicsBox[{
                   Thickness[0.2], 
                   LineBox[{{-3, 0}, {3, 0}}]}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], 
               ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Bold", ",", "12"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]& ), Editable -> 
          True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {967.5, -189.}, {
     Center, Center}, {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageMargins->0.,
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.712455290481639*^9, 3.712455294219239*^9}, {
   3.712455883390793*^9, 3.7124559136286297`*^9}, 3.712486515397113*^9, 
   3.712528632635215*^9, 3.712530598935725*^9, 3.712600205626252*^9, 
   3.712612505127421*^9, 3.712619691453106*^9, 3.712622194023012*^9, 
   3.712633948622381*^9, 3.7126488437901297`*^9, 3.71265537048387*^9, 
   3.7126598294601316`*^9, 
   3.7126640924987164`*^9},ExpressionUUID->"899baa09-3159-4c0e-abc7-\
249f82cb3d8b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ESR Plot", "Subsubsection",
 CellChangeTimes->{{3.712402404734241*^9, 3.7124024130593233`*^9}, {
  3.712402450109375*^9, 
  3.712402452209435*^9}},ExpressionUUID->"e9c13b10-ab23-4cca-9eb6-\
88b596c1b66d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"esrPlotlegend", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\!\(\*SubscriptBox[\(T\), \(1\)]\)\>\"", ",", " ", 
     "\"\<\!\(\*SubscriptBox[\(T\), \(0\)]\)\>\"", ",", " ", 
     "\"\<\!\(\*SubscriptBox[\(T\), \(-1\)]\)\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"esrplot", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"simData", "[", "\"\<T(1)\>\"", "]"}], ",", " ", 
      RowBox[{"simData", "[", "\"\<T(0)\>\"", "]"}], ",", " ", 
      RowBox[{"simData", "[", "\"\<T(-1)\>\"", "]"}]}], "}"}], ",", " ", 
    RowBox[{"PlotLegends", " ", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"esrPlotlegend", ",", " ", 
       RowBox[{"LabelStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Bold", ",", " ", "12"}], "}"}]}], ",", " ", 
       RowBox[{"LegendMarkers", " ", "\[Rule]", " ", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.2", "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
         "]"}]}], ",", " ", 
       RowBox[{"LegendMarkerSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"comments", ",", " ", "12"}], "]"}]}], ",", " ", 
    RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
     RowBox[{"{", " ", "\"\<Pulse frequency [Hz]\>\"", "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"Full", ",", " ", "Full"}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", " ", "\[Rule]", " ", "1000"}], " ", ",", " ", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.712027815095071*^9, 3.712027940406188*^9}, {
   3.712027981191009*^9, 3.712028085366004*^9}, {3.712401886283958*^9, 
   3.7124019230249147`*^9}, 3.712402478786819*^9, {3.71240251336189*^9, 
   3.7124025137609377`*^9}, {3.712403365816635*^9, 3.712403365990903*^9}, {
   3.712403409266734*^9, 3.71240341386668*^9}, {3.712454744861629*^9, 
   3.712454784639559*^9}, {3.712455047213092*^9, 3.712455080037096*^9}, {
   3.712455403714841*^9, 3.71245540552733*^9}, 3.712649306068549*^9, {
   3.7126563511639767`*^9, 
   3.7126563813604918`*^9}},ExpressionUUID->"6e4d1a07-305b-49aa-8a63-\
198545060eca"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
WqnyP+u0kJg=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw12nlYTWsbBvAohFCEJFSGotAhKZKWRkmaS0WlUpSKQuNRVFKhEtIsIRRx
KqkkKZVCEkUhKStJomgQ57vPevbnj1y/a+299niv53nfZ0vt8DB2Gs3Hx7cV
f/77H/+CvqixjOneo50Fv76uh03nrmeZEVFDs1yy7BZ4rvg4k6vkkUNwtI7v
1gvkuhy4LN3cI4mc8R4O/fl0VBzZZ6o6y2RpPnWIIOtrwLtDvTxCyJLesJ/9
9lR/cn8GLH3T3mQ/ueoFbJJaYrKHnDSWYZkne11jncieq+ExpmaztpM1XeAZ
GRvfmJLFzsFpHZmfN5G7q2HxI6fObSCXDsP55qderCDHyW1gmZVG5VMVyC42
8HuVY4cXklWPw2nZ0/ulyMIlsHHf6ZaZ5PYeeOanWTYTyQXzNPB4/l8n8pOj
DOGyU/zfhoY52wXDxlmi2l1kxVuwtnywN0sW/AC3XOQ3ektumaaJ29t7P2og
52jCh70yVZrJIfvhhuRYl/tky0tw6fdGy1tk+UZY+Ivf3iwyn6AWy+juMWbP
kxuUYfGtc/x/kTN3wcGWDgnHyQEJcM/yI4uPkA1r4JIqueZD5AUj8P43ymf2
kAfltVnGTj6iwp5cuw2WmBlnaE5OOwGXHddS2UT2vgcvctvopk7W7YWVC+Nf
K5IlpHRYpn1Z4Bspcq8RvNvye+Accvlh+NLURFlRcvw/cPXtRa0CZLd2uC9p
pcgksvp0XZYZynBf2T3EWVQbLh99LaGV3HkAHnuw5loDufgyXCaYXF1Jjm6C
F2dNWVdEdhy/kWWSqh8syiUrr4Enx/04mUQWcoXN69q0YsmtifCtZe7bQsi5
tfCOCd5dB8jhv2GDG3uzXcg2y/RYJsY3oNKKrGALB8S4NOmTBaLhh2dEPNTI
TaVw6/rL8xTIWd/gpAgRdSlykPQmlpHd5BAylWxqAo+Z82xYkSwbAttpdzr+
GKT858IBhrHq78h1HfBsO9m+BnLGDH2WuV6X61hO9tGBbdY478gl6/v85029
AhlkySuwpeY0rThy/yv4fofolkPkqgmbkc9Y1Yle5KS18NyswiB7sqcb/Pck
t5mGZM1k+OOqlhg1stgT+KrdXyoy5O4//53vvfTxWeTS5QYs4xqiMUOQHGcH
v70fodk/QPmPgQX4It0/kVXL4AwHo99PyMJ9sPKapJYicvv8LSyT2Z6WkU0u
MIWzzhqLR5CjQuGSOW05h8h2+fCG6XucdpIVWdh9lJS3GVlQzBCf10EVa3Vy
iy4c0KDSuYSc4ws/83l5azo55CocpWXuzEe2bIZrr56d0fmT8i9khPfDIk/r
OZlvHexV6+heRG7YAz/kj5dJJWemwDKjrS0iyAFP4ab1f5z2kQ35jFnm5zbN
QSvygr/gyoq62xvIg/awpVbHiyXk2lh4tz57XISc9gB+rdVjP/CD8t8Payjd
G24m6y40YZk1q0M7S8kS5nBbuUdBBrk3DC7OrQkJJ5ffhhc5rY5zI8d3wvU7
0o2MyG6zTFlmO5/d+VVkdT1Yd5X5JTGyqD/cfvZp3nA/5f8aLJz3iWkmF7fA
V4VeO2+m20dPMmMZxZLEhYl03FEN7rl8utOPrOwBx9mMK7MiC6XBJx55Bq8h
t9bB0QLb9cTJuaPM8X1OW2E02Ef5XwHHFln9aSDbOMDlCy1Mb5IV4uA/8/Zf
uUgWqICVZsZ5uZCbfvx3f/v5ARrkrEUWeH+TX/+WIAdZwMKlzuED3yn/4XCr
5tJkMzoueweWTuleuZw88gm+ZLBSRJBcJ24Jvx+t00r3z9gEpyus/uc22ScA
1k3JP3+MrJ8NJ7AKFbZkybewYWil1ypy/+StLON/q1m6lM5ftR52nmxSXE1O
8oS7zkcGppI9z8Nz7+redyVr1sOx+0rFeM9XjN8Kn7d734IJ5O6V8NaOfIM2
erxSR/jsTvW1heS40/CTF8Pzo8guD2HJGKVWB7LqALzskelGZbKwrDXyuPBK
uBC53RL2Se2P+fCN8n8MbnKa6J5HjiqE2z9eXH2MbPcZniCz282KrChhg+uB
6omWJWTBzXD+v5pfhnsp/4FwVdHyvkfknOuw386DvZfJIe/gIycmmu0jWwpv
Q/3Subk/jyzPwA1G7+Zpkfn2wSfsMs11yQ3pcNnS6PVC5Mzn8NEphU6NXyn/
AttZRm5IqTuBbLgKLkyMOmxLXrATNnjenidFHjwD54oMPW/rofxXwn/WnhhI
JqcNwjcmzX9mQfZebIvrY0nYUA9Z1woWU7kRWvGF8h8J306wVfMn9xbBq/Zs
fLmSXN4Nl8qG3WS7Kf9z7JBHn7chqWQ3A1ja436mCVn9ENwkVP6unu4vmgNv
ubq8PYzc2QoLqyt1KJGLRexZpqhmVkUX3T96A9xyfl6QJtnRCy5cMm5592fK
fwb897IUr2iy0Au4zLq97E8X5X/MDlzfp5+pfv2J8q8Er9gdofU3HQ93hmMW
bvooRbaJh59Ma/GsoNsrVMNrBVPDHMkCw3CP2erZfzop/0scUL9KjItk6HiW
NSyd/HxfPh0PioKv2395oUo2vQsPNJv0ZLGU/x54me2SQjnyyFxHlhE8s/fn
pY+U/y3wGlczVpqcEQTXm9quzO6g/N+EI1x8WRmyfhucW/Vaen475X+aE8t8
+LOiP/ED5V8DTvnRFihMrvKG74Y8vBXQRvm/CJtIqIe9eU/5fwk3yBROUCJr
jtvJMt8mKwWGtlL+leGpHpl+G95R/l3guVob1QPfUv7PwcZX+zwXkeMewfta
Htt0tlD+f8GjpJ1OSZJV5Z1ZJvzVYJNhM+V/Gyw+cX1Y2GvK/3G4ZP7Yxdmv
KP8lsIlIpuPTJsr/V/iJ1/mod42Uf0kXltH3EL75/iXl3wi+OjVU++kLyv9h
WGziz8qsBsr/LVj9wq8bPs8p/x/gM3GHW9bWU/5Fd7GMZ8dxtq+O8q8FWyi8
mZz5lPJ/AM5gtD5ZP6H8X4a1LIKkGx9T/hthvm312wJrKf+Cu7Ee7En5NbWG
8q8Cn9jecPJUNeV/N5znesnocyXlPxE+Na4ia+5Dyn8NfD23VfLmA8r/CPxN
bYtExH3K/1JXlhmtO0tR/R7lfztsajwj9n0x5f8k7P66XsaykPJfCn/NNpcZ
VUD574WtRmmP886j/Eu54foaU/3g4z+Uf2N4A3tpq+ZNyv8R2DR6xi+/65T/
XLgwJEfO9xrlvwN+uOHoO5XLlP/pe1CfJHPqgi5Q/rVhd6MB/U2plP+D8GoD
v0W5CZT/TFjLoW3bw9OU/1dwysw71cXJlP8J7uh3ZI8dWHSO8r8GFk2V6I+P
o/y7wrEfFijJRVP+k+DEOf5/DUdS/h/Dep2WBzYfpfz/gW0seyVjDlH+l3ug
/9M3Yzf5Uv5tYbl7rUsf76X8R8Mnr6iPKXSh/N+HpUf/8+2kG+X/O3y+X+3+
LiPK/3xPlmncuKjtmCbl3wRuPbT4/fxVlP8QOKHsjVfHAsp/3n/Hdy29M246
5f8j3PbWxEFzDOV/5l48nujDtQY/erj868LTD0o5be7g3O8D625t/Db3Oeeq
K7CIa03S2ruck17DQ9PkG1sKOHtO3Mcy44zjLlr5c9ZUhdVnH0x9s5Gz2B74
4PSGKwITOHcnww539ALUC79w+X8CF7beTlS34hz3LzxqrOQ8uc/dXP4VvFiG
VVd889aDs6o9vK891Lmp+zOX/1i40/S4mYAL5/Yy+JaluK1LZxeX/z54QtE+
D939nKMWeON6ZPt6qGw6Zzsz2HWgREOo7hOX/zB4bGmqSGImZ8Hb8HD58f2N
5zm3sLBaXNsVlyLOOWL7WeYlX7Ry6HfOIRvhZ8scdzQy3Pkt/WC3U6FNKY85
y1+Dw37sHt86nnu+fC3wMjFznWmenBuEDrDMjOVKO2fXcM5cB3tqmN7oseVe
f4A7PGZewu1N6zkbpsKvdx31j9jMeUEdnCG9SjrXk/Mg30F8Pyvik4fGc679
C456v6dS+S53/rQdcPBinRM7rDl7n4Kd7w6POtzNPV/dclj5s0NXsS9niR9w
uHNPQIwQ596FPqg/7k55fNe5119uDjetznjU4sQ5/ij8MbJRaliFs1sBvMX3
8J5/l3JW/wRHXxgW0tHgLCrui/61uvOh0EHOnXpwCJ/ZUF0F52J/uKYg7N0v
We7xo7Pgn66+YWviOTu+geuXGpSZT+Bej/JkP5aZP2I6V+I+Z6H18KKIXQ+b
nnFu9YC3Ny0LyZnBvT+5abCpk63MEzXO4c/gguY7elN0ONuM9meZJYvUbvy1
nLPCSrh72rvu1CHufAKOsPuPlriAa5yb4uD07PZSaX3OWRXw/WMz8t3auecb
9BPWy92R+jOQs6lMAMt8X2HfryLNWdYSPuN+qL7sFff6R8LhkMKGvY+vca67
AzfcleiqTeSc0QV/EQuepZ/N2Wd2IK7PydZHld5y1teHF6116YmS584vGQiP
49vk8DKFc382fOvRYO9dev+q3sI5ZSkVhVGck6b8jc/rkduvGBHu9Xuqw5of
c1QTYzlr7oXVKh7Uakzg8iyWDv9YWtRR5M25ux5Oeny2y+cp5Z//EMvEf93Q
9GEWd32IU4Sj2pccrjLl7OIEz7r5VpL/MGfVM3BhTfZVhQzOwpVwgZz14IIS
zu0DsNs7nWyDZ5wLZIOwftDSSXVs4xy1Fc5IfDeq/w9nuwj4qMVf9835qP4X
wVLPRS0qp1D974bLPE3c1ktT/ZcIZpkDXu3PlFZQ/d8MB9k1T49YT/X/bzhM
pCcyeDPV/xtwv+n1wZ9bqf63woqZ25NuOVL9FzmM69dB3e95e6j+MzC//NZU
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
n/Arv+H/AUNbxi0=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwt2nk8F10bBnAVJUmetKhUKhWiFUmKKUlSKInIUuhnKbKlyE4UQkiWkqVI
hIiKKJQKCUWlSGqEIqlk671d3uePns/3c2bGzJm5Zu5zzm/RIds95uO5uLj0
6Z/R/9N/nt82s4xs9fv+dm5GiayzQIllfpl2SGjOgcU1yS7HUkx7N8NDHuSd
Tibl9YZwTRaZz3jdxiMucPJHstQTQfO9MbDLdGWWWbBUtd/gLqyxlVy94P1k
2TewqCN5mUfbUru/cF8yOaTab94v4S2jrnhFlpAUOf9DHo6byLDMo49RvPH6
sN16csXmBalPTsIqHLJzgv5XsVhY+BJZaJ+Z9+QiuOspuSxSTs6kGS4ZINsp
VYQoTNg66ogVW1imTc+l+I0EzDEk89n8eTBlF6wYTM48d2lA2Q4WfEAW6RJU
3RcBt30nC3/fm5B7Fy5YuJVlPJKeb13RBAdpkfe8/xv3fJzKqE28yP3/eGTq
lsMyOWR+k39mGzRg3k/k6PAdtT/s4CYhFZapfBLEpkbBWSpkruEQJ85p2NeJ
HLIu9NHdz7DeNXLMoT91D6ZuG7VUA3l6WHpV0XqYi3cb9aeMT3SbKVwvT3be
H1F+dhjnm2pJvnbtMNubi3a3GHLI8cbgyPew1nPy9yTBs5GfYbEh8vAO6aRf
a1VH3S+lyjINwuE+Tw7BlQfJ2y0/fSwKhRNCyP7PnC8zRbBjMTnK06nRioXV
esjaCsdPvpy1fdQii7azzLf2gYioLXCPNjkusCTEzREu8yZz/9pc5ZMCR98m
n/I/8GrPa9imjfysVeTL+Duw8kw1ljnfWji+Tl5t1DNUyWa9rSsLjsDtzuSN
fbJnL12EC6+TP9hHrBh6Boc2kq1LhcU3jMBmk3ewjIa08Jwa4R2jllcg8x2b
dyPDEua3Js+9uehiawLcEju6/UyfEKUGOLeSbLQypalBQH3UAcPkkXtZnaaq
sOFKdZbhTb+j8vE0vNqY7DrJ9siJOzB3KPlBbmnawh64sYTsGRZ0Ilhi56hv
/hjdXyDSItYc9ly8k2UKHfYnZSTAOnvJJZYqH+sKYXFfcr/cPItPMzWQ/1wy
V7Fk++19cM1nsl3moinpUXDyLA2WiZDbExvcCLtsJ+cWZwpFCO9C/l3Iibz3
RQ7rw6JpZN7v18pFYuC+N+QYsxvya9/BFXy7WMYt8/7h7/N3I/8byYdW6KgN
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
kh+bx3f8DTqL/L8hBw3nyi4Mxfb8fMcov/0dFT9zsX2Lwqg3F46Pa8D2udZk
0cwYY8Pec8h/HNmkI900cSQI+a8il+ve/btXMgT5HyErD/1yieMPRf5X2VJ9
xbNJrr8ebjQmu58/FqBTHob8h5IfK4k43GXDkf+HZLd5vM1DNrBOL7mn/oGH
VW0k8r/EjsbXBw1eqxy7iPzvJVcrLe1Ya3AJ+fcl9/Hx2L4+FIv855ENVAJ3
yRnFI/9fyDf+PBx+qHsF+Z99nPK813ntwxsJyL8aWVTictzE9KvIvwt5vG+l
xLzqROQ/jfygLmeFiVQy8v+W7Js/L0PXHrabYs8yJ583v1+hnor8K5LtA9Xv
3TJNR/6PkquODdjMMb6F/MeTP5w0X5YrnYP8V5MnPLw0rkY6D/n/Zz/6PZeT
9r1WgPyvdmCZ9u5So2HPQuTflJzRfrA7TKME+Q8n9/UFhLcYP0L+H5F/f1I1
32tUhvz/JE+c8ML0heRj5F/MkZ4n/3VP2dQnyP8+sqB94/Cj4grk358c4fM8
+czBp8h/PrngR+yO8y5wE0sOKk17v306nCXsxDKKXZN838hif98d5KgOicvh
/fh7eqfIPnu0fe2e4nyk0smi278WHW0sRf6byHM+SHkmKuH86/mdWSag6u1B
rzpcX+omcnLM+0RrriLk/xhZt0Mv3YvnAfJ/hWy5f2vnmQtoF6shf77m5ip7
Cv3Vz3WCZTqexD/lzypG/teQQ808Fk2e8hD5P0QWDF7mYR6Ov+94gdzpuXJ9
5y6cr1oZuWVOKf+QMK5H5Bd55crkzelV6L+epS4ss16oWbpvO/qjTJesbl3i
6c55hvyfIT/xnxE8Ufg58l9A5lZ6zenaDit/JSfHjltc1YvtZ8w9Sf0zS25a
0RK4XZ1cL9nxMrMd/VvoSr5jK+DIZYi/H3qT3PVyqxL3lXLk/z1ZebPxuLDX
6F95gVN0vS9kDd0H0Z/8SmS12d23zxXALbbkwB5tnwPq6J/cBLJUkuMz68no
34CX5MGVP1zNn6B/Dce7sszw64OB8/3Rvnod2WhqWbPNHByP24xsaZAwc0Ab
/dsYQRadfMXX/AX692Y5efLUMy83HUP/ev4mzxroDZnNi/7VWe7GMutS/WL4
TuD6xPXIc/+cTvsSjesfCiAr8WwavK+F/q65S956ZYpeUSic3EHOd7leVaIO
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
         
         "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.1190625*^9, 0}, 
     PlotRange -> {{3.12*^9, 3.18*^9}, {0, 0.9994778195937593}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Pulse frequency [Hz]\"", TraditionalForm], None}, 
     AxesOrigin -> {3.1190625*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1000, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Pulse that acts on both nuclear spin and electron spin. B0=0.01T. \
Frequency Resolution=100000.Hz. Pulse amplitude=1000000Hz\"", 12, 
        StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{3.12*^9, 3.18*^9}, {0, 0.9994778195937593}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(0\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(-1\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 30}, {30, 30}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontWeight -> Bold, FontSize -> 12, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[{
               Thickness[0.2], 
               LineBox[{{-3, 0}, {3, 0}}]}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Bold", ",", "12"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7126563498712273`*^9, 3.712656381666497*^9}, 
   3.712659829655013*^9, 
   3.712664092678041*^9},ExpressionUUID->"bd5ff106-9fef-4412-ae33-\
6cdc436a0c79"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Angular momentum plot", "Subsubsection",
 CellChangeTimes->{{3.7124024605594387`*^9, 
  3.712402462809507*^9}},ExpressionUUID->"01406a39-3f30-4fc6-82a1-\
b70791b44cb0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotlegend", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(J\), \(z\)]\)\
\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(S\), \(z\)]\)\
\[RightAngleBracket]\>\"", ",", " ", 
     "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(I\), \(z\)]\)\
\[RightAngleBracket]\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"angmomplot", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"simData", "[", "\"\<Jz\>\"", "]"}], ",", " ", 
      RowBox[{"simData", "[", "\"\<Sz\>\"", "]"}], ",", " ", 
      RowBox[{"simData", "[", "\"\<Iz\>\"", "]"}]}], "}"}], ",", " ", 
    RowBox[{"PlotLegends", " ", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"plotlegend", ",", " ", 
       RowBox[{"LabelStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Bold", ",", " ", "12"}], "}"}]}], ",", " ", 
       RowBox[{"LegendMarkers", " ", "\[Rule]", " ", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.2", "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
         "]"}]}], ",", " ", 
       RowBox[{"LegendMarkerSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Angular momentum\>\"", ",", " ", "12"}], "]"}]}], ",", " ", 
    RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
     RowBox[{"{", " ", 
      RowBox[{
      "\"\<Pulse frequency [Hz]\>\"", ",", " ", "\"\<Angular momentum\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Full", ",", " ", "Full"}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", " ", "\[Rule]", " ", "1000"}], ",", " ", 
    RowBox[{"Joined", "\[Rule]", "False"}]}], " ", "]"}]}]}], "Input",
 CellChangeTimes->{{3.712019009053629*^9, 3.71201905902885*^9}, {
   3.7120190917049837`*^9, 3.712019101428665*^9}, {3.7120194057317333`*^9, 
   3.712019406555339*^9}, 3.7120274900581427`*^9, {3.712034297267907*^9, 
   3.712034300052265*^9}, {3.712402468535734*^9, 3.712402473260158*^9}, {
   3.712402517586564*^9, 3.712402518035871*^9}, {3.71240376616857*^9, 
   3.7124037684181643`*^9}, {3.712455170164065*^9, 3.712455185563141*^9}, {
   3.712612570106468*^9, 
   3.71261257273138*^9}},ExpressionUUID->"bc463c7c-3d95-4f23-ac60-\
9257e8670285"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJwt2ns4FV0bBnAVpdIJoVKpKJVyKFJJJpJjhJB2QhJFpJ0kIQnJqUJUiqIQ
hVQSUYii8pbzuVKDJEpRqO9x+94/eq/ftdbsPbPMveZZs/YCG2ejvWN5eHh2
0D8j/6f/fL6qskydlf9nmV61fLLJvI0s46FfMpTOx4xY2oCsr587SXo5PORN
lpHSvLRIG65IJ9te8Fx11hZOeE8e99l06p/TsLugGssMGvEUByTCeurks0fz
OlKKYQku+bP3UcX+T3BfAvmtrOYZlnfTiEuryM+FH8kpScFXxjMs07papr5t
M+yyhnzewU5zkh2sYU/+ZDfH42gALBZDzmpOm8VNhrtekO9xjp2JL4ML/pB3
5OdJ+X2DI5ZvYpmwmpamJSLqI7bnkLs2lN9dsxZWCSErWdcHZHHg6U/IatLe
P4Z84LZuMp+U87W4m3D2fHWWcTRR488uhYMNyXuszz1w7oatTpI3/fmWayus
MeLVmeSwSbX8D5Vh/o/kh6YKrtxdcKOQBsuUyQsKf/WF0zXI6kuThNodYL8j
5M/KJT3MW9j8Jtmsp+O11R9Ypoa8XsGv3lJy84h5+DezTJttZWP5VrhSmSwY
5vH3XyfOL8mBvCUi6dr5eLR7XiLvDRl2l3kJG5aRtfYcLz75FpYcImdui/VX
na854gEZTZZxiA+1UzaAy3eRq/rmth44AceFkp0uLz/QmAxz88m79e78m1MJ
a/WQb+QYJCaN2zJi8QVbWOZHbUlboCzcs41sk/Mr5oU1XORLFtl2x+n2eTj6
HrmpRbSr7xns2EaWtHMJs7oBq83UYplc06Hb/VJaIxbWJCeEFyU2mcDtbmSb
lGupiX5w7i3ysrraOTOz4fBa8uCcT/erO2Hbidoso/rMTcOTT3vEyuvIF6Rm
2ZqZwgIHyH9cLY5fC4FbL5N3por6by6Cs8rJvK1eaUcG4cBhcm9vVofYKp0R
c1bqsIzldP24ov2w3G6ylOGuvzeuw7zhZKEbJ2L3NcK1BeRDQa/ui4vojji1
l1y3/s3PzUawz0Jdlsmp6/mhEgKbGJPTx/42UEqGpf1G7FxvGDNWD/nPIjNR
a9PkNsEVn8hGRh2Jg75wgogeywyNv2S9pBh230J+vDuO3c2nj/y7k+NcjdY5
acISyWTl8S2RCgFwXx25cI3N+P4SuHSSPsv8t+TAjshJW5H/9eTzF53NGgxg
F0eyYP86i/hIWCOW/H5JaeUTCQPk/zVZNm1WaM9iuOsvOVI5ZmWWC1wgu5Vl
3GdNOPYnB46wIvtLRHRMH2eI/J8j68dPD3ogBqs8Iyd3LvWJ1Yen/yCXXzzD
EeLCbYsMWGagY4UT5zKcbULevlDnzeFCOPg0efmwR+j6LtjqAbnN48L33zO3
If8sednFkIWBajC/mCH9/YuitT/shxu1yLOVWme+i4TTj5Fnyp9TDSyA/VLI
63PeaN7vhM0bRo5/tTl/UMQI+RfYRvP7JO8jhRowzwbyfs6MQHMuXOlEHpxW
6BGSACddJaemqc3+WA17viFzf5aPyxxvjPzzGLGM88o97/5ThCXlyeGXUpzX
2sED1mQ9bdltJZFw+Xmjkfnn4Y7NpXBcIXmG0JEhxyGY20cO7Nxw/8QqE+Rf
yphlSu7ff+3mAIubkqOKl9mnx8M9/mQfpyfBE+rhoodkvawNrKTgduS/nSy4
3WlalxbsOMuEZQyPGj1/4AOr6ZA/f9rY/i0HFj5Olld9p7rvF9x+mxy21Mev
c5Up8t9I7s8dp73dAO3hU7azzMsrmYM899Buq0qurnGIT+iDlZ3JvSfj/0xU
MkP+48gS5b3nFI/CrRXk+Wrqfkuy4awxpnS/RRndjx2EAxXIFrxL+dYx5sj/
HvKDBzrjrAJhuQjyb5HtwkUVMG8x+d26F3l/Z+9A/n+SLxm+CJPfC6cuNmOZ
qfrKfHUZsI8ZOc7zx2n3IdgkkKxwtUCgRg2WfkQ+VMqKxofAQx3kRe7GB4ca
4IrZ5nR/2FzLFJaxQP51ycZ8bFvACdjdk3yj8k7vnjpYL43MYTkPC2R2Iv/N
ZP2i6wPWJ+G+qTtY5nbcCWNXJ1xP6UayUkTu9asW8BUX8uoGd5urd2GXePL4
9fumZYrgfDTekp+tS9/jGgaLjbNgmVNRdjMO18Fdq8id/gVmwdI4nwJbsuti
pYM8x+CISPKug0Ur/1bC9s9H+ksF5GZL4fxU+smr7LU3FXvC06V30vm+WuD/
7x3cZk6Wm8HhG7uYg/yfITuOf3fR1RcOziHnyC8M5W2Arb6QUyQtfn9T3oX8
i3Nofi2TPn3nIsyvP+Lyn/Un+uHGE+QrxdaD9maWyP8d8s1Ht5r6YmG/FnLH
k4CYlxN3I//Td9H9yNe+9LUf2mUYssIat/P7emAeV3LOcCr/3V3oX3mdnOSi
VbC5Ck56R37hvvrmmflWyD+vJcsESN5vr+bAhorkC9Lm50qiYUk7csNGdQGr
GnggiixgZH9vl4g18l9C1rYvfBxnAccNkFMCBk1/X4O5S3dTPaOjcPI6P6xl
Qd4Slv3tlLwN8n+WrMKsXtl3HO55TP5jbGrmXwgXdZGDzArPf522B/mfa0Xz
UdbFseLmsONW8s7hoIyHN2A1b3JDaUlzqiSOF04n75ZZ2dXoAre3ks9rVxUK
PoVzZ1hT/Su+rKlGAMeHbyLrnFqRL3oPtj1MPvz25xOvybbIfwK5eU2TkNc+
WKCK/Ojt5FC333Arnw2Nr/IhToW4HfKvRI4/s25fybG9yP8+sjS/aVRQFcyJ
Jk9y3fqflwL6y70Y6f/qyYzYCzDvH7J2TeP3pN9w7bI9NP5jVx/Tq4BTd5KN
nS9Nq2L2If/BZImZYY5Gj2GTPPJ/nOwUQV175L+b7Fn2LGd/OTw0z5ZleOzq
Pk/c5oD8G5A1fe66HqiCE3zIqcFtsxt19iP/GeSxfs6iEhWw3gfygKDG+dOV
B5B/ob1UP54Ue27FcUT+1cnuj0101Vi4lEu+V5ipZXfcCflPJJd6qLl7zz6I
/FeTRQrlyv49hTUm2LGM6HmnZA9XZ+RfmbwlNGfwu4UL8m9PHlcxXfNUHlwQ
Qz790bf/Vzsc8ZIcWcXjlRhwCPkfJJtXRyY2fIFVZPbR+U7efPitsSvyv4uc
POeKnM4juC2E3D/RzHee1GHk/wlZMaO+7UwEHPyNfERzl8tUAS7yL2HPMtY1
nbYKZ+HV28gHM1I99wkfQf59yfdVtwQeSYQbM8nc0hmO8RvdkP+P5A87Lu7P
bIL9hB1YJnowNP7NyaPI/2Yy92TkhonS7si/G3me2m1Dmdcwzy3yxEFp9ZTp
x5D/GrJK3tKwyDw4iX8/y8RoKHR3unog/2vJ7pz5l+YoHEf+95MbZCyyH/N5
Iv+Xyd9yPNoGvsADZWQ7Je7J7wu9kP8h8rEG3UzRNd7I/4oDLLMxZ/mHqyt8
kH9L8tPTWeMnFsNaYeRbPKet9u47ifwXkHOP3mJ8huGeHrJN2yuRhfG+yP8C
R5YZY3zUS5/3FPJvRLbf8fzC8jTY8RT5rQ5r9sLSD/nPIrf9vXW4bt5p5P8T
eV+KRaD1Sn/kf6YTff9SXsOn4gHIvybZ6A8runNZIPJ/dMSBDonuhmeQ/yTy
ET2JyJ6zQch/Hbkti/VlwtBfYNJBllksGa717R76t64jX2+d1Jlbjf5ZB8hN
hVbtTr1nkf8rZMtx0d8eDgcj/6/Iyc2X/l5aGor8/yXvXmDSZSgQjvzLOo/U
Fx1ywZVw7W7y9ajC4oGic8h/OLlnTIqgFnse+X9KnlGwvjnYETb5Tt60cOPT
MW8jkf9FLiwTweyvb3a6iPwbk5sXdU5jLWKQfz9ykMxhaT+by8j/ffJwuVNn
xa5Y5P8zeWWm0Hxj02vIv+ghlrnqciYoMiUO+dcij7u5dnF1Sjzy706OruN/
3PLqOvKfTI5cG/5ZSiYB+a8nm+S8OCzlCrtMdmWZf29/y3/TTkL+VcjmW8xW
+lrfRv6dyDn3jj3vtryL/MeSf/D0VSasyET+X5MFfiRverTiPvL/j2xwcMK6
gzezkX+5w3R/Tn3+ucUnF/m3JnPSpItO6xUg/+fJHjfyZlbufob8PyO/LtO8
q2FZhPz/ICflabgVLnuO/EtyWUY3S1OgPqkE+d9Olg3e9+J+finy70+ujrLn
eO56gfw/JK+xPCdwyh1uZMln1ARnqQrC6WJHqH5a0V79ShHH+2mT38u32AYP
4PvMPcgdWjanbF/gfGRuk7tMFwdb1xYi/43kmOfCCZEbcf6VAm4sU/Zmx3zX
d7i+pA3k2q42y208ecj/QXLcgZ1l+/ieIP/XyMHHz61zvoB2yQryFwcv7/ke
GK8BnqO0vtD62/39bj7yL0/eq+ooNTTpKfJvQ75m+2GixXl8P/cCOfmLX26L
Ps5Xq+joyN8ntbRXDNcj/pM8NbgxM+4Vxq9Hyp2e745pvzq2YDyKTMneR+Tn
ce1fIv8B5Mvyqg2DomXIfzaZDXCf1rIFVusgx5Wv2/n0O/oLzz5Gzxv+rnHp
i+B2HbK9RfuKhHaMb+5xclRYILdvJ74/PJWsN35/Vf/VYuS/idycUWjlX43x
VZ7qwTIOmskZroMYT4GN5M/3q297Z8OtzuQ8B/PTm3QwPllxZB2JvzYmEzG+
gf+RVZbl6BmWYHw5Y49TvXrS8QefP9rlVpEP5OUvt5mFz+O1Jfu5mVZ1bcP4
1kaQFWeqh+x4g/FNLSbvEr+vu+ogxtfnF3nsgG3nZH6Mr8kST6rvr34p/+uG
65M2Jy+W2szUR+P6hwI9R+p5t9oMQ4x3xSPyLXGnvMxwOKGTHHr2yqT7OrD7
nBN0fxk4eE4JwPF6euTD/4ri7unj8yVOkMs9/deH+mH8+tLIv8fL6n+rxPiV
NpPvhvJuHS7H9VyZ5kXXJ/bkpephjJeLGrlf6+PHMQceI/+HyDGWsVvT0h4i
/9fJzNJ73zt3ZCH/b8lNj5IC+PwykP9x3nR/d7+IM7C+g/yvJq/55sU/4V4K
8r+XPNN9jLJlyy3kP4qsaGl+1CU3EfkvIXda8TuvnYv5qK2f/ETHfUliJ+av
bGkf6u8hs1S9DvNb8A6yb95Wdtt0zH9WQeTCIuNJ6n2YH1c/JgsnR22SH38V
+e8ilw/xFpk9xPzaKH6S7q8xDZGcbMy/6frklrf6+lVTopF/L/LddA2lnq1R
yP9dso/cnZ9bCyKQ/1aygO6/tXftLyD/M3ypfljwfgtXC/N/JUPW3XRMbGYv
nh9JruQt/yWyhxbBnjfIS9v7eVieMOS/kuzFI2RUWROC/POdonr+KcdPvRXP
qwFFsqDpxSb7AjzPyu3InIzl5T0X8byLu0hu2RLsfu0AnofcUrL0igNX/mXh
ean1m9yQ31X9MAnPX/FlfiyjWh9l5heL/j0WZHX1/zY0eqB/0VmytH4fz7jD
6B+dS1a6EXLrtT+e545fyVKxd0w+fUa9oDbvNN3fQaXNU7JRDwgbkF8+1n9w
gh9u9yavnKpr+CkW9UNuOtn+IX9j5B8cH/6efM52KNlyJ2wr6M8yFQ2nJKfk
oT5RVic/MTRZ5y8BC3DJsdwFk6f6o75pTSCPHbtAWaQd9VBWFdm79WWGVhrq
pcDxATR+83e/Mq4+gfyvIe+YbK8t1Y36Ss6enFHVO9N+FswbQ7adu0Z9wBT1
We0Lsl/TcGNnLOq31D9k0wiZwooy1Hc+ywNZZmtTyMJURdiEQ161QTCKLwD1
oXQIuf9BxcrvVagnh/JG/PiB+mNpuKKbvK1WcNk8b9SfCfPP0Pl6/lzr14B6
lcoiWp9FrpAqY2C9k+ThDfM+385EvSuRSdY6nWr6cCXc94Fs1SupzvcV9XKp
UBDdbydD83VOwFc0yD8zZBd+FIZdjpClAgaXdN9B/a1xk1ww0WH1CT1YrIa8
K1G2u7sD9XvXhLMs05edJ+wmhvYCZXJ4sGjv+f/X/w7kuqbbVzO/wvaXyE9m
qW4NDINVyshBvLyrhxTg6UPk9vD+Y5NysN5okwmmeirxWKWiEJy9i3yhxZ0p
8sD6JDiUHCQ840JnO9YzVvnk+uUWvvE74dU95OSsKSptlVj/8C8IYZnjHvyG
w65YLzVuI/upenJqJOF0X3Kk6GzZv9ewvvK7Ry5pHtPHKwabt5H/vZFunroe
lpkZyjKNy26LCOVgvcajSdafyj12Ww2udCPXLnv9Ovol1ntJt8jFxYvsjC1g
z1ryumcf37n2Yb1oODGM8nBg7JZ3IbDkOrLfjx+MgQw8sJ/8d037jY5XWH+W
XyZv8hZctMoFjisnH4yVCNwqCHOHyVNz9nJVsrDe1VoZzjLZU7f+kzWFxXeT
Dy0xNG8dXT/3hJF7Muf4q8bDRQXkoF8q/64ugKN7yZVfPBrfxoyu/xeeo+fx
dLe7Tw1H1//G5M+qemZDvLCwH1knZbA+wXF0/Z9F9rny8LWh9Oj6/xPZUjMg
T14bDhc5T3n81tIUxw/bbiGXHE5ReB6Lz1N2Jz/2urTigTEskEwO5X9V4jAB
bq0jt9wo71c5DWdNukDzMXca68jF5wWuJ09ckvZnXTLeh3AcyY3Hb3VKf4Hl
YsnRxjw7M1Ng3tfkOKdzTYMOcO1f8gTD75vD5OBU2QiW4YsTG+PUg/czPlbk
sRdtZTk5sMk5cku+z6dF3rD0M3JUl/Plp3Phoe/kFdt3Jh6ZDFcsiqT1Runc
v3XJeF+UYEL+WPt2jp0y7H6a7N3sOc3pKd436T0gW93+svC6LtolWPLKkHH9
sfvgPtEollmvPPw9ZCpcqkWuuJwgEHMDx185Rlb3mLx7QB92SSFnqA2xO37i
/ZhGA1ncWk/4SCQsJnCR7p8JhY3v1eAuFfI/+4TFmzrw/q3Aieyj5KqcHwFH
XCWLm3zOOJY3+v7vDZlxfD20+iCswhPNMnuc169tE4Gny5ND+aRmRRbh/WKb
NXm96tLaaC+0Z58nBx7Q7BtQhIMLyZEBmhdthtHfqo9s2v/9fcVKvM9cLRXD
MnILFWUPOKCd35SsWH/L11ASbvQnO6U+8+9rQf/0h+SwYTmzqbGwXztZbdks
pTuWsPmsS1S/yLp+XTYXltEhe8o5+82sw/tlnuPkivD2NRsvw5W3yUuez3CW
t4GTGskFn3Ic7ibg/D2nXKb18bZqK35r2FCVPFMpeZyVLD5f0pksNW3mmVXv
cL4D18hXpK63bhu9nvIKsopa7VXJhXDcmCssMzkmYvjjX5irQL4XcX1Jwx1Y
aw/Z4/OsZwmHYPEI8k/T5K/Xl8I9ReSFIi/4Zn/C9xf9JH+ecVFxeD8cvTiW
xudmjLHQ6PtjRzNyk7bCuDmisFogmdvELvOqxvUKPyKP1X5f0xEFt3eQPQUf
b+HshHNnX2WZZx/CV6TOg8N1yTyJOyYkfBx9/+9J3m6gI6uUPPr+P40cL+f9
z9cRFmgm778rt91LDm6deo1l3vLHrhUY3W/I2kiWuHx24mVN7GcEupADvGZv
WuOLdk48mXeHRuIeHVjuLTnpcbdtugjMOy6Ovj9Bj5PyEcfXriLbGuUbC2TA
qbbkLzFmqRUC2G/xiSSPSamtttJGu8lzclhKcZy1KCzdTy76GvB6++j+0NCS
eDr+vahEVAaOrzAnl73O97Y5CSecIf+nxp/oawS755AfFPD3Ni2G9b6QhcKe
+txXxudJiF+nerGm0flsOdynR168oP6kwlW49AT5XbvEonWu8JU7ZEHN5t5e
ddilhfxUuDL2uBisMf0G1ZcycZc2dmP/S4wh99x8aMIphrsOkbsPZV95GQsX
XCeXaprcCXWDI96RK0RMZawMYHveBJbRDm0zUVgCqyiS1dQkHKf8G93/syN3
lLM/t9aO7v9FkX0Z77lD6aP7fyVk+bPzh1cGje7/DZB/Mif+5dmO7v8tTaTn
q7D5keAN2H9cbUHuCG16+WIu2vnPksX+Ng0W/kJ742Py6g26vtaZcHoXOaqK
f3u/M+w39ybdj+f63tQth823kn0q3r+cwGJ/VMabXM4dE7riOsyTTo7wUhbr
2QVXtpJtnezyps+Gk2bcor//qaVmOvXYj/XcRLZ4Fpww+RJseJisL6+j4LwL
lkwg71C6aKW4AB6oJGuqKhZu+Iz94HK+JKq/Whbnc9PgOCVy1va9s+8fgrn7
yGE2/OetlWCtaLL8FNGFeX+wHy3+gvylW7dGNx/u+U02rpdKfXgaLlqWTOvL
uLnNylpw9M7kkf2uzvy8GbBjMHnz2xqLPQ3YH1fLI3vVzZumexMW7iaPTVK4
ffQQ3D4vheoJ2ZQzchvgXANybd2hgmWT4HAf8m71lTySddivt80gbz8a7CGf
NLr//4Gs3LlNfODI6P6/0G1aL7bujtbcPLr/r06uf1/+oVpodP+fS178euE0
kQ/4PUFgIvnHb05wfzrMqSZXGdTEuByA5Sakskz68IY1aw1hXmXyxgA+aYVF
cK09eXnhrdWcX/i9Q2oM2dtD4ad7Gezzkty8gW/W4TjYZJA8WcpP1+0wLC2T
xjJnucrtLbPhIQ554vXnDyxmwRUh5CBll55b3fi9RsITsohhkOylQtj9Gzln
wEb/UwysJ3GHxuPL3jFLXGCJbeQjPHz5vZpw30lynVBZv9xcuDSTnBM7u3Hj
d/y+5MpHcrFof++YcthF+C7lnZ+ruyEB1thMPrN9quOjE7CYG7n38dbkoET8
/qXr5t2R57X6Va9VaC+oIb9TUHVYK43fu0Twp9N8lh7+/Ggt+tuvJdvyv85N
KYRV9pM9xv7q2RkLT79M3vRV4dwmd7itjGz6Q1vyqDGcPURmXu5sNpSDg1dk
sIy16iWl6imwlSW5fnxAVVOXev7/AOxL7TI=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
n38V70fG20ienZ3gupaS6/Hw/wD6EzLP
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {3.1190625*^9, 0}, 
     PlotRange -> {{3.12*^9, 3.18*^9}, {-0.2131308389226085, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Pulse frequency [Hz]\"", TraditionalForm], 
       FormBox["\"Angular momentum\"", TraditionalForm]}, 
     AxesOrigin -> {3.1190625*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1000, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Angular momentum\"", 12, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{3.12*^9, 3.18*^9}, {-0.2131308389226085, 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(J\\), \\(z\\)]\\)\
\[RightAngleBracket]\"", 
       "\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(S\\), \\(z\\)]\\)\
\[RightAngleBracket]\"", 
       "\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(I\\), \\(z\\)]\\)\
\[RightAngleBracket]\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.2], 
                    LineBox[{{-3, 0}, {3, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05500000000000001], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {30, 30},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.33999999999999997`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontWeight -> Bold, FontSize -> 12, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[{
               Thickness[0.2], 
               LineBox[{{-3, 0}, {3, 0}}]}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Bold", ",", "12"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7120190607803288`*^9, {3.712019093629792*^9, 3.7120191022323017`*^9}, 
   3.712019408904817*^9, 3.71202749199161*^9, 3.712027574746416*^9, {
   3.71203428857882*^9, 3.7120343005120277`*^9}, 3.712380407670459*^9, {
   3.712402469542714*^9, 3.712402473989725*^9}, 3.712402518630436*^9, 
   3.712403769009882*^9, 3.712416842174528*^9, 3.712455189774459*^9, 
   3.712486523303699*^9, 3.7125286336346292`*^9, 3.712530599819029*^9, 
   3.7126002073859367`*^9, {3.7126125518088512`*^9, 3.712612573260481*^9}, 
   3.7126196920151176`*^9, 3.712622194466238*^9, 3.712633948902151*^9, 
   3.712648844345748*^9, 3.712655371479837*^9, 3.712659829812107*^9, 
   3.712664092855925*^9},ExpressionUUID->"51aa30f6-ee2c-4c00-b04c-\
1abbdeda87af"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Save simulation data", "Subsection",
 CellChangeTimes->{{3.711158126880466*^9, 3.711158130555336*^9}, 
   3.712018082549119*^9, 
   3.71201876392647*^9},ExpressionUUID->"ab08e4da-59d4-4801-a5cf-\
fe161abbe0f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CreateDirectory", "[", 
   RowBox[{
   "\"\<./\>\"", " ", "<>", " ", "resultsFolder", " ", "<>", " ", 
    "fileNamePrefix"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fpre", " ", "=", "  ", 
    RowBox[{
    "\"\<./\>\"", " ", "<>", " ", "resultsFolder", " ", "<>", " ", 
     "fileNamePrefix", " ", "<>", " ", "\"\</\>\"", " ", "<>", " ", 
     "fileNamePrefix"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"fpre", "<>", " ", "\"\<_data_T(1).csv\>\""}], ",", 
    RowBox[{"simData", "[", "\"\<T(1)\>\"", "]"}]}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"fpre", "<>", " ", "\"\<_data_T(0).csv\>\""}], ",", 
    RowBox[{"simData", "[", "\"\<T(0)\>\"", "]"}]}], " ", " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"fpre", "<>", " ", "\"\<_data_T(-1).csv\>\""}], ",", 
     RowBox[{"simData", "[", "\"\<T(-1)\>\"", "]"}]}], "  ", "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Save", " ", "the", " ", "ESR", " ", "data"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"stateStr", " ", "=", " ", 
      RowBox[{"\"\<state(\>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", "i", "]"}], " ", "<>", " ", "\"\<,\>\"", " ", 
       "<>", " ", 
       RowBox[{"ToString", "[", "j", "]"}], " ", "<>", "\"\<)\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
       "fpre", "<>", "\"\<_data_\>\"", "<>", " ", "stateStr", " ", "<>", " ", 
        "\"\<.csv\>\""}], ",", 
       RowBox[{"simData", "[", 
        RowBox[{"i", ",", " ", "j"}], "]"}]}], " ", "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", 
      RowBox[{"-", "1"}], ",", " ", 
      RowBox[{"-", "1"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "1", ",", " ", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"fpre", "<>", " ", "\"\<_data_Jz.csv\>\""}], ",", " ", 
    RowBox[{"simData", "[", "\"\<Jz\>\"", "]"}]}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"fpre", "<>", " ", "\"\<_data_Sz.csv\>\""}], ",", " ", 
    RowBox[{"simData", "[", "\"\<Sz\>\"", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"fpre", "<>", " ", "\"\<_data_Iz.csv\>\""}], ",", " ", 
    RowBox[{"simData", "[", "\"\<Iz\>\"", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"fpre", "<>", " ", "\"\<_spectrum.csv\>\""}], ",", " ", 
    "hamiltonianSpectrum"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"fpre", "<>", " ", "\"\<_ESRplot.pdf\>\""}], ",", " ", 
    "esrplot"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"fpre", "<>", " ", "\"\<_fullplot.pdf\>\""}], ",", " ", 
    "fullplot"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"fpre", "<>", " ", "\"\<_angmom_plot.pdf\>\""}], ",", " ", 
    "angmomplot"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Save", "[", " ", 
   RowBox[{
    RowBox[{"fpre", " ", "<>", " ", "\"\<_params.wl\>\""}], ",", " ", 
    RowBox[{"{", "  ", 
     RowBox[{
     "comments", ",", " ", "totalSimulationTime", ",", " ", "pulseAmplitude", 
      ",", "pulsePhase", ",", "pulseFreqStart", ",", "pulseFreqEnd", ",", 
      "calculations", ",", "pulseFreqStep", ",", "\[Gamma]N", ",", 
      "\[Gamma]e", ",", "B0", ",", "\[Omega]s", ",", "\[Omega]I", ",", "Ahf", 
      ",", "Dzfs", ",", "Pzfs"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.710999431121374*^9, {3.711682243132311*^9, 3.711682248556163*^9}, 
   3.711682292908148*^9, {3.711682450507135*^9, 3.7116824752331543`*^9}, {
   3.7120193970553827`*^9, 3.712019418704638*^9}, {3.712022011390212*^9, 
   3.712022011603957*^9}, {3.712022055440299*^9, 3.712022056090748*^9}, {
   3.712022097116083*^9, 3.7120221529909763`*^9}, {3.7123990741079397`*^9, 
   3.712399091132016*^9}, {3.712399140370516*^9, 3.712399142244775*^9}, 
   3.712399174070505*^9, {3.7123992442964497`*^9, 3.712399280397327*^9}, {
   3.712399894323586*^9, 3.712399895089031*^9}, {3.712400000799519*^9, 
   3.712400062074963*^9}, 3.712400171350005*^9, {3.712401545458434*^9, 
   3.712401573656986*^9}, {3.712401951634779*^9, 3.712401981583414*^9}, {
   3.712402130559463*^9, 3.712402183959774*^9}, 3.7124022825857*^9, {
   3.712402339335514*^9, 3.712402363660244*^9}, {3.712403421290943*^9, 
   3.712403450241126*^9}, {3.7124037122923527`*^9, 3.712403721792536*^9}, {
   3.712453966931512*^9, 3.712453967056509*^9}, {3.712455207114595*^9, 
   3.712455251738912*^9}, {3.712602581852929*^9, 3.712602649312895*^9}, {
   3.712602892813446*^9, 
   3.712602967011389*^9}},ExpressionUUID->"c9b2198b-d9a0-4426-a61d-\
798a7a6b3a90"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1915, 1027},
WindowMargins->{{Automatic, 1}, {1, Automatic}},
FrontEndVersion->"11.1 for Linux x86 (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 449, 11, 79, "Input", "ExpressionUUID" -> \
"b76aac9b-2f71-4b1d-af36-08963738fffa"],
Cell[CellGroupData[{
Cell[1032, 35, 167, 3, 93, "Title", "ExpressionUUID" -> \
"17c79617-3f48-40ff-b1ce-b7c110d0d8fb"],
Cell[1202, 40, 406, 11, 78, "Text", "ExpressionUUID" -> \
"5b33cbac-42c9-42c1-b6d5-8dacdde316ab"],
Cell[1611, 53, 1116, 20, 209, "Text", "ExpressionUUID" -> \
"c47df991-3406-4ed7-be54-7e2d9a90805b"],
Cell[CellGroupData[{
Cell[2752, 77, 159, 3, 66, "Chapter", "ExpressionUUID" -> \
"19fded08-3617-4157-ba0a-09242c9a372f"],
Cell[CellGroupData[{
Cell[2936, 84, 168, 3, 65, "Section", "ExpressionUUID" -> \
"03a00423-7567-4341-ac89-79e225406a20"],
Cell[3107, 89, 3829, 105, 578, "Input", "ExpressionUUID" -> \
"47bb4d1e-0ecf-4ad7-bd33-9a76af46da00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6973, 199, 156, 3, 65, "Section", "ExpressionUUID" -> \
"33751f26-5118-427d-bd1d-36bd71e4f594"],
Cell[CellGroupData[{
Cell[7154, 206, 217, 3, 36, "Subsubsection", "ExpressionUUID" -> \
"25d73bb2-3e52-43fc-8a4b-6fc858a85465"],
Cell[7374, 211, 1751, 57, 124, "Text", "ExpressionUUID" -> \
"795b5723-e2c3-4a8c-98c1-503eb98ddfe7"],
Cell[9128, 270, 753, 21, 32, "Input", "ExpressionUUID" -> \
"b5c109b2-5be6-484e-8569-b378fc3bbcd2"]
}, Closed]],
Cell[CellGroupData[{
Cell[9918, 296, 301, 4, 30, "Subsubsection", "ExpressionUUID" -> \
"86b46845-37ea-42fb-b575-376c9dc7b175"],
Cell[10222, 302, 3607, 101, 397, "Text", "ExpressionUUID" -> \
"e561a6a7-bf75-4857-90dc-9764ea1cfb32"],
Cell[13832, 405, 3961, 86, 302, "Input", "ExpressionUUID" -> \
"53b5ee72-e247-401c-9e1a-e29efe32326b"]
}, Closed]],
Cell[CellGroupData[{
Cell[17830, 496, 146, 3, 30, "Subsubsection", "ExpressionUUID" -> \
"5301936c-f3f8-4ffd-8c79-df6132f5e5d9"],
Cell[17979, 501, 724, 22, 104, "Text", "ExpressionUUID" -> \
"0242b0f6-8dff-4986-8b40-d26b5109c756"],
Cell[18706, 525, 1397, 35, 120, "Input", "ExpressionUUID" -> \
"2aa3f6da-a264-4636-bf70-2bded82583b3"]
}, Closed]],
Cell[CellGroupData[{
Cell[20140, 565, 170, 3, 30, "Subsubsection", "ExpressionUUID" -> \
"303ecb3b-13b4-4715-b6d7-3d0096134513"],
Cell[20313, 570, 724, 22, 104, "Text", "ExpressionUUID" -> \
"dc61ca03-40f2-4d19-b5b7-a38d12cecdfe"],
Cell[21040, 594, 1432, 36, 120, "Input", "ExpressionUUID" -> \
"60f1c3dd-35b3-4876-a4c1-85d756e1f64c"]
}, Closed]],
Cell[CellGroupData[{
Cell[22509, 635, 168, 3, 30, "Subsubsection", "ExpressionUUID" -> \
"91fa8865-d8cd-4e67-823b-c5a42f667ca6"],
Cell[22680, 640, 726, 22, 104, "Text", "ExpressionUUID" -> \
"772a183f-716d-44e4-9012-9ae552f0a40e"],
Cell[23409, 664, 943, 21, 89, "Input", "ExpressionUUID" -> \
"4d0acfdb-ca1e-49ca-97bb-aef0d2402606"]
}, Closed]],
Cell[CellGroupData[{
Cell[24389, 690, 170, 3, 30, "Subsubsection", "ExpressionUUID" -> \
"6be122a3-c5c7-40f9-9b25-b437d78d96c3"],
Cell[24562, 695, 787, 24, 128, "Text", "ExpressionUUID" -> \
"c245072e-35a8-49f6-8415-ca0f429521fc"],
Cell[25352, 721, 1510, 41, 78, "Input", "ExpressionUUID" -> \
"7ba645e2-6ead-4320-96b8-09d7c1efe5cf"]
}, Closed]],
Cell[CellGroupData[{
Cell[26899, 767, 237, 4, 30, "Subsubsection", "ExpressionUUID" -> \
"34dee551-86ae-4a59-8ceb-e32097ee74ba"],
Cell[27139, 773, 3451, 94, 464, "Text", "ExpressionUUID" -> \
"bfc14f1d-fd16-4a23-bd9e-54ed6d012191"],
Cell[30593, 869, 6959, 146, 683, "Input", "ExpressionUUID" -> \
"a4fb092a-e91b-4a5f-a13b-cf3e93cc8a59"]
}, Closed]],
Cell[CellGroupData[{
Cell[37589, 1020, 239, 4, 30, "Subsubsection", "ExpressionUUID" -> \
"280f5d62-9654-43c9-b642-57158dcb82dd"],
Cell[37831, 1026, 1070, 32, 148, "Text", "ExpressionUUID" -> \
"32702ccc-a7fc-433f-8ebf-e8df3520487c"],
Cell[38904, 1060, 1152, 27, 78, "Input", "ExpressionUUID" -> \
"992a0664-9c52-4c7e-b22e-7eb117441424"]
}, Closed]],
Cell[CellGroupData[{
Cell[40093, 1092, 448, 6, 30, "Subsubsection", "ExpressionUUID" -> \
"1b8b7d2e-2be2-4995-a67c-22798fcb400e"],
Cell[40544, 1100, 119, 3, 33, "Text", "ExpressionUUID" -> \
"a71c1a2f-e2f1-4e8b-8b36-9bead87b72ce"],
Cell[40666, 1105, 9784, 219, 1056, "Input", "ExpressionUUID" -> \
"1c6e7fcd-f05d-46ab-b843-ff5f89b90d39"]
}, Closed]],
Cell[CellGroupData[{
Cell[50487, 1329, 475, 7, 30, "Subsubsection", "ExpressionUUID" -> \
"74c9e3ba-aed8-4a21-a0a0-3b0eb38ff160"],
Cell[50965, 1338, 119, 3, 33, "Text", "ExpressionUUID" -> \
"79c5a880-01f4-4fde-aedb-795e84960a01"],
Cell[51087, 1343, 10136, 227, 1033, "Input", "ExpressionUUID" -> \
"082dda5c-c0a5-4ac2-abaa-1893ee28054f"]
}, Closed]],
Cell[CellGroupData[{
Cell[61260, 1575, 188, 3, 30, "Subsubsection", "ExpressionUUID" -> \
"e391d773-8db5-4b46-a4a5-474af753f2a4"],
Cell[61451, 1580, 764, 22, 37, "Text", "ExpressionUUID" -> \
"c5d67a90-77e2-4dc2-923b-30b4510f0e28"],
Cell[62218, 1604, 770, 20, 34, "Input", "ExpressionUUID" -> \
"08162511-05e6-42c7-b16d-cb3f500ba392"]
}, Closed]],
Cell[CellGroupData[{
Cell[63025, 1629, 352, 7, 30, "Subsubsection", "ExpressionUUID" -> \
"7e684e91-45bf-4108-aa9b-43dd3b243eef"],
Cell[63380, 1638, 144, 3, 33, "Text", "ExpressionUUID" -> \
"78e0107b-2ec0-4b9b-a8ce-5fa2857f329e"],
Cell[63527, 1643, 25528, 580, 2279, "Input", "ExpressionUUID" -> \
"33f44df4-d00e-4007-9d72-57bf35e0c257"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89092, 2228, 309, 5, 36, "Subsubsection", "ExpressionUUID" -> \
"145f859c-1cd4-45a4-99d6-d13fb2fcc941"],
Cell[89404, 2235, 148, 3, 33, "Text", "ExpressionUUID" -> \
"3496529f-da22-4588-8c6d-8bfc07c41219"],
Cell[89555, 2240, 7172, 163, 510, "Input", "ExpressionUUID" -> \
"235891c8-4169-41cc-a6d1-843a31a10d73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96764, 2408, 271, 4, 36, "Subsubsection", "ExpressionUUID" -> \
"d185f6b8-20ab-4309-b9e3-7ce4d5c3c87f"],
Cell[97038, 2414, 1765, 29, 231, "Text", "ExpressionUUID" -> \
"0fbbdaa9-7dbd-44da-94d2-6e27e8b3b2ca"],
Cell[98806, 2445, 5014, 115, 555, "Input", "ExpressionUUID" -> \
"e35ea38f-a365-4d5a-b0fd-b1f92dd4770e"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[103893, 2568, 206, 4, 93, "Title", "ExpressionUUID" -> \
"86ac2eed-bad9-42f2-9914-4d2eb50a153a"],
Cell[CellGroupData[{
Cell[104124, 2576, 185, 3, 44, "Subsection", "ExpressionUUID" -> \
"9230f74c-3079-4432-a627-3706e53bbdd3"],
Cell[CellGroupData[{
Cell[104334, 2583, 221, 4, 35, "Subsubsection", "ExpressionUUID" -> \
"dee25e60-2aa0-4c81-a7a7-edd5bf678d92"],
Cell[104558, 2589, 2602, 75, 166, "Input", "ExpressionUUID" -> \
"5ac1b033-c536-4336-8430-4e5b109de4de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107197, 2669, 172, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"5cefe403-c097-4393-9bdc-52d4991e7e46"],
Cell[CellGroupData[{
Cell[107394, 2676, 7100, 138, 485, "Input", "ExpressionUUID" -> \
"73bf8ab2-31c7-4514-aef2-a33a81755669"],
Cell[114497, 2816, 2938, 43, 24, "Print", "ExpressionUUID" -> \
"2b96875b-a2a6-4f29-901d-164264fd6f07"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[117484, 2865, 170, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"da94ca88-ba88-458b-925e-d216f9f64e04"],
Cell[117657, 2870, 4183, 104, 575, "Input", "ExpressionUUID" -> \
"c050fc88-9c35-4ae7-8eaa-24a721106893"],
Cell[CellGroupData[{
Cell[121865, 2978, 3514, 90, 259, "Input", "ExpressionUUID" -> \
"21a1ba76-250c-480a-9396-86a0bc15ebf1"],
Cell[125382, 3070, 4520, 102, 468, "Output", "ExpressionUUID" -> \
"31a00c64-f1f1-4523-a63f-4b602af56bb4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129951, 3178, 199, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"429b76d5-4d40-431e-966a-b04ef682fe2a"],
Cell[130153, 3183, 192, 3, 33, "Text", "ExpressionUUID" -> \
"3f9610a1-ce90-463e-aa7b-32976bfb2290"],
Cell[CellGroupData[{
Cell[130370, 3190, 613, 14, 56, "Input", "ExpressionUUID" -> \
"d5124004-c479-4733-8eb2-c5b7ef544fa5"],
Cell[130986, 3206, 7007, 168, 255, "Output", "ExpressionUUID" -> \
"6b240171-2671-48d7-a1cc-9dccf25c65b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138030, 3379, 273, 7, 32, "Input", "ExpressionUUID" -> \
"327b0b37-19c4-40bd-9d2b-1a40e92cb01a"],
Cell[138306, 3388, 1435, 24, 41, "Output", "ExpressionUUID" -> \
"fdbfde3a-9e68-4bc7-af1d-978878a27ae8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139778, 3417, 949, 22, 57, "Input", "ExpressionUUID" -> \
"806f6420-e75c-4906-b3f0-b639a9f9c8ac"],
Cell[140730, 3441, 1411, 24, 41, "Output", "ExpressionUUID" -> \
"4ba86185-5200-44a2-8327-631b89edb8f2"]
}, Open  ]],
Cell[142156, 3468, 202, 3, 33, "Text", "ExpressionUUID" -> \
"1aa92d83-77d2-4a3c-a852-5e142353fcfb"],
Cell[CellGroupData[{
Cell[142383, 3475, 489, 12, 56, "Input", "ExpressionUUID" -> \
"854efc78-173b-496a-bd70-5ed755866602"],
Cell[142875, 3489, 3359, 84, 251, "Output", "ExpressionUUID" -> \
"370b12e7-0947-4ef5-ba43-d123715c60c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146271, 3578, 229, 5, 32, "Input", "ExpressionUUID" -> \
"0f2afe0d-3514-4515-878d-37e5736d5f0e"],
Cell[146503, 3585, 367, 6, 34, "Output", "ExpressionUUID" -> \
"60f38a83-4f04-4da7-ad6f-9abf49c17232"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[146919, 3597, 165, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"27086003-bba5-40f5-9ddd-a9a3b6912713"],
Cell[147087, 3602, 1555, 42, 125, "Input", "ExpressionUUID" -> \
"1327cfbc-7616-42da-838a-cb2586047aa1"],
Cell[CellGroupData[{
Cell[148667, 3648, 1400, 33, 147, "Input", "ExpressionUUID" -> \
"5cbf125c-4d84-4f84-b077-836b958698c2"],
Cell[150070, 3683, 603, 12, 34, "Output", "ExpressionUUID" -> \
"1097bff1-ee36-4a2a-8620-c1f57700d018"],
Cell[150676, 3697, 605, 12, 34, "Output", "ExpressionUUID" -> \
"5009710f-ff6e-457e-bf0d-a3891b0de3ea"],
Cell[151284, 3711, 603, 12, 34, "Output", "ExpressionUUID" -> \
"3ea55cf9-6b11-4867-8e7e-cc0e956636ea"]
}, Open  ]],
Cell[151902, 3726, 1417, 36, 51, "Input", "ExpressionUUID" -> \
"d9116843-6cb4-4b1e-b118-90179edfe7ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153356, 3767, 208, 4, 35, "Subsubsection", "ExpressionUUID" -> \
"c3b95d07-e9c4-4f85-b6c1-593644d93420"],
Cell[153567, 3773, 1837, 40, 194, "Input", "ExpressionUUID" -> \
"312739fb-26a3-4bb3-a63c-5a7f38798bd4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155453, 3819, 167, 3, 44, "Subsection", "ExpressionUUID" -> \
"311b0f44-24b8-4d26-bdd0-85b4f78be8e1"],
Cell[155623, 3824, 2366, 64, 237, "Input", "ExpressionUUID" -> \
"c31966ae-11c1-4aa1-af5d-81dc6a8edd05"],
Cell[CellGroupData[{
Cell[158014, 3892, 714, 19, 118, "Input", "ExpressionUUID" -> \
"97eaf6f2-2873-47f6-a3b8-96c65aebc395"],
Cell[158731, 3913, 624, 11, 34, "Output", "ExpressionUUID" -> \
"7bb87e30-1836-418a-b4c7-6fbddb856d84"],
Cell[159358, 3926, 13296, 236, 191, "Output", "ExpressionUUID" -> \
"c2542c45-72f5-4555-840f-3c6b3dd410d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172691, 4167, 794, 21, 51, "Input", "ExpressionUUID" -> \
"db3cb77e-a6ad-4569-85a5-bcce97939264"],
Cell[173488, 4190, 1448, 38, 194, "Output", "ExpressionUUID" -> \
"1d9fa811-b88c-4599-a44a-0db25b4272ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174973, 4233, 1977, 49, 80, "Input", "ExpressionUUID" -> \
"091cf1f8-1ff3-4ca7-8970-c75e314992d3"],
Cell[176953, 4284, 326086, 5588, 378, "Output", "ExpressionUUID" -> \
"e342e02b-9a7a-4c0f-bee1-f722a7a9ce41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[503076, 9877, 1257, 29, 80, "Input", "ExpressionUUID" -> \
"878faf0b-a53a-4498-ada5-d6158b11dda0"],
Cell[504336, 9908, 8385, 155, 221, "Output", "ExpressionUUID" -> \
"1d513acb-3b59-4a45-aaf6-c7c25db19cc2"],
Cell[512724, 10065, 19995, 346, 221, "Output", "ExpressionUUID" -> \
"032359b4-d7dc-48ed-bf5e-669034162954"],
Cell[532722, 10413, 24244, 415, 221, "Output", "ExpressionUUID" -> \
"952cbbd6-e243-4572-bdf2-4a654ca6ece7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557003, 10833, 28539, 487, 70, "Input", "ExpressionUUID" -> \
"9ca01ff7-f734-4558-b80e-e90af178276c"],
Cell[585545, 11322, 28526, 487, 228, "Output", "ExpressionUUID" -> \
"ba047541-3460-497b-be6b-01716a3e9cc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[614108, 11814, 129, 3, 32, "Input", "ExpressionUUID" -> \
"a9124b41-0bcc-41f3-aad2-3b0684e687e1"],
Cell[614240, 11819, 786, 12, 32, "Output", "ExpressionUUID" -> \
"47ea4d81-505c-4ec5-a819-a79ed1fe834f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615063, 11836, 224, 5, 32, "Input", "ExpressionUUID" -> \
"dc625360-e359-4736-87d5-dd7ef84058ae"],
Cell[615290, 11843, 293, 5, 34, "Output", "ExpressionUUID" -> \
"0fe6d7a2-f689-4b7f-8aa9-c56d18993882"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[615632, 11854, 164, 3, 44, "Subsection", "ExpressionUUID" -> \
"400df2bd-2225-447a-820d-ca2f16c7d59e"],
Cell[CellGroupData[{
Cell[615821, 11861, 1466, 29, 80, "Input", "ExpressionUUID" -> \
"606c61d1-0adb-4511-8b29-9d9ddf5ba0bc"],
Cell[617290, 11892, 550, 11, 23, "Message", "ExpressionUUID" -> \
"3b3905d8-5c59-49e0-ac67-9e69ee4441c3"],
Cell[617843, 11905, 897, 15, 33, "Message", "ExpressionUUID" -> \
"5a000f35-15db-4a8b-9bfd-e7fdc73ab115"],
Cell[618743, 11922, 550, 11, 23, "Message", "ExpressionUUID" -> \
"978f90c0-25c1-48fb-8d3c-1fa207de8b2b"],
Cell[619296, 11935, 920, 16, 33, "Message", "ExpressionUUID" -> \
"156264cb-f016-4ae9-89fb-53e3f0266aa6"],
Cell[620219, 11953, 550, 11, 23, "Message", "ExpressionUUID" -> \
"84b1c970-b9c2-4046-83a5-ec4705e6146b"],
Cell[620772, 11966, 525, 10, 23, "Message", "ExpressionUUID" -> \
"6d795225-6f7b-4015-b9ec-a71db5322e7f"],
Cell[621300, 11978, 900, 16, 33, "Message", "ExpressionUUID" -> \
"ca77174b-f169-4821-a4ec-c3d7996b3b56"],
Cell[622203, 11996, 521, 10, 23, "Message", "ExpressionUUID" -> \
"1fa1e2eb-1391-4e6f-a604-4b421e256434"],
Cell[622727, 12008, 440, 9, 24, "Print", "ExpressionUUID" -> \
"7fdf3b22-4839-4b17-b749-4b03f9eec692"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[623216, 12023, 210, 4, 44, "Subsection", "ExpressionUUID" -> \
"8214d20f-0e1b-43da-836e-a05559a345ef"],
Cell[CellGroupData[{
Cell[623451, 12031, 223, 4, 35, "Subsubsection", "ExpressionUUID" -> \
"a5914ebb-e3a1-40d3-9974-157f928747ee"],
Cell[CellGroupData[{
Cell[623699, 12039, 2814, 62, 80, "Input", "ExpressionUUID" -> \
"21afe862-2486-4022-960d-dee69b35bb30"],
Cell[626516, 12103, 122407, 2231, 698, "Output", "ExpressionUUID" -> \
"526393cb-7668-4423-8ea5-7362ac7e6df4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[748960, 14339, 6751, 154, 240, "Input", "ExpressionUUID" -> \
"33412708-8d10-4a8f-be1d-275098f4f0b0"],
Cell[755714, 14495, 130725, 2372, 621, "Output", "ExpressionUUID" -> \
"899baa09-3159-4c0e-abc7-249f82cb3d8b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[886488, 16873, 210, 4, 35, "Subsubsection", "ExpressionUUID" -> \
"e9c13b10-ab23-4cca-9eb6-88b596c1b66d"],
Cell[CellGroupData[{
Cell[886723, 16881, 2648, 59, 103, "Input", "ExpressionUUID" -> \
"6e4d1a07-305b-49aa-8a63-198545060eca"],
Cell[889374, 16942, 44046, 816, 609, "Output", "ExpressionUUID" -> \
"bd5ff106-9fef-4412-ae33-6cdc436a0c79"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[933469, 17764, 174, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"01406a39-3f30-4fc6-82a1-b70791b44cb0"],
Cell[CellGroupData[{
Cell[933668, 17771, 2766, 63, 103, "Input", "ExpressionUUID" -> \
"bc463c7c-3d95-4f23-ac60-9257e8670285"],
Cell[936437, 17836, 43958, 802, 567, "Output", "ExpressionUUID" -> \
"51aa30f6-ee2c-4c00-b04c-1abbdeda87af"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[980456, 18645, 216, 4, 44, "Subsection", "ExpressionUUID" -> \
"ab08e4da-59d4-4801-a5cf-fe161abbe0f6"],
Cell[980675, 18651, 5426, 131, 511, "Input", "ExpressionUUID" -> \
"c9b2198b-d9a0-4426-a61d-798a7a6b3a90"]
}, Open  ]]
}, Open  ]]
}
]
*)

